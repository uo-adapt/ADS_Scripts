Lmod has detected the following error: These module(s) exist but cannot be
loaded as requested: "c3d"
   Try: "module spider c3d" to see how to load the module(s).



++ export SHELLOPTS
++ declare -A declared_d declared_o declared_c declared_s declared_q
++ subject_parse sub-ADS4107,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz /projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/anat_cohort.csv.sub-ADS4107.csv
++ local abs_test i id_vals idx subject_vals subject_vars v val_full
++ unset subject 'prefix[sub]' 'out[sub]'
++ cohort_vars=()
++ subject_vals=(${1//,/ })
++ read -r subject_vars
++ subject_vars=(${subject_vars//,/ })
++ i=0
++ for v in "${subject_vars[@]}"
++ contains id0 '^id[0-9]*$'
++ [[ id0 =~ ^id[0-9]*$ ]]
++ idx=0
++ eval 'subject[idx]=${subject_vals[i]}'
+++ subject[idx]=sub-ADS4107
++ id_vals=("${id_vals[@]}" "${subject[idx]}")
++ ((  i++  ))
++ for v in "${subject_vars[@]}"
++ contains img '^id[0-9]*$'
++ [[ img =~ ^id[0-9]*$ ]]
++ cohort_vars+=(${v}[${sub}])
++ eval 'img[9001]=${subject_vals[i]}'
+++ img[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ [[ -n '' ]]
++ ((  i++  ))
++ ((  1 == 0  ))
+++ join_by , sub-ADS4107
+++ local d=,
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s
++ ids[sub]=sub-ADS4107
+++ join_by _ sub-ADS4107
+++ local d=_
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s
++ prefix[sub]=sub-ADS4107
+++ join_by / sub-ADS4107
+++ local d=/
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s
++ out[sub]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
++ source /projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/anat-Complete+_201903031016.dsn
+++ analysis=struc-ACCELERATOR
+++ design=/projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/anat-Complete+_201903031016.dsn
+++ sequence=anatomical
+++ standard=MNI%1x1x1
+++ pipeline=struc,gmd,jlf,roiquant,qcanat
+++ struc_denoise_anat[1]=1
+++ struc_prior_weight[1]=0.25
+++ struc_posterior_formulation[1]='Socrates[1]'
+++ struc_keepBEImages[1]=0
+++ struc_floating_point[1]=0
+++ struc_random_seed[1]=0
+++ struc_bspline[1]=0
+++ struc_fit[1]=0.3
+++ struc_quick[1]=0
+++ struc_seg_priors[1]=1
+++ struc_rerun[1]=0
+++ struc_cleanup[1]=1
+++ struc_process[1]=ACT
+++ gmd_rerun[2]=0
+++ gmd_cleanup[2]=1
+++ newAntsPath[3]=/data/joy/BBL/applications/ANTsJLF_201603/bin/
+++ jlf_keep_warps[3]=0
+++ jlf_extract[3]=1
+++ jlf_quick[3]=1
+++ jlf_cohort[3]=SexBalanced20
+++ jlf_parallel[3]=none
+++ jlf_rerun[3]=0
+++ jlf_cleanup[3]=1
+++ roiquant_atlas[4]=miccai
+++ roiquant_vol[4]=1
+++ roiquant_rerun[4]=0
+++ roiquant_cleanup[4]=1
+++ qcanat_gm[5]=Y
+++ qcanat_gm_val[5]=2,4
+++ qcanat_wm[5]=Y
+++ qcanat_wm_val[5]=3
+++ qcanat_csf[5]=Y
+++ qcanat_csf_val[5]=1
+++ qcanat_cort[5]=Y
+++ qcanat_cort_val[5]=4
+++ qcanat_rerun[5]=0
+++ qcanat_cleanup[5]=1
++ source /xcpEngine-master/core/defineLogs
+++ [[ -z '' ]]
+++ export log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG
+++ log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG
+++ export log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process
+++ log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process
+++ [[ -n localiser ]]
+++ [[ -n /xcpEngine-master/core/CONSOLE_MODULE_RC ]]
+++ echo '

'
+++ printx /xcpEngine-master/core/CONSOLE_MODULE_RC
+++ local 'file=


###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
#                                                                 #
#  ☭$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})☭  #
#                                                                 #
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################'
+++ eval 'echo -e "


###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
#                                                                 #
#  ☭$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})☭  #
#                                                                 #
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################"'
+++++ /xcpEngine-master/core/padAndCentreString 59 XCP ENGINE LOCALISER
+ length=59
+ shift 1
+ string='XCP ENGINE LOCALISER'
+ pad=39
+ pad=19
+++ seq 1 19
++ printf '%.0s ' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
+ pad='                   '
+ string='                   XCP ENGINE LOCALISER                   '
+ ((  58 < 59  ))
+ string='                   XCP ENGINE LOCALISER                    '
+ printf '                   XCP ENGINE LOCALISER                    '
++++ echo -e '


###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
#                                                                 #
#  ☭                   XCP ENGINE LOCALISER                    ☭  #
#                                                                 #
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################'
+++ echo '

'
+ routine @1 Localising subject metadata...
+ signpost=@1
+ routine_map='
· @1'
+ shift
+ routine_description='Localising subject metadata...'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1 '
+ [[ -n Localising subject metadata... ]]
+ eval 'echo -e "


Current processing step:
${vid}${routine_description}
····································································"'
++ echo -e '


Current processing step:
@1 Localising subject metadata...
····································································'



Current processing step:
@1 Localising subject metadata...
····································································
+ subroutine @1.1 '[Parsing' subject 'identifiers]'
+ signpost=@1.1
+ routine_map='
· @1
· @1.1'
+ shift
+ local 'subroutine_description=[Parsing subject identifiers]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.1 '
+ [[ -n [Parsing subject identifiers] ]]
+ echo '· @1.1 [Parsing subject identifiers]'
· @1.1 [Parsing subject identifiers]
+ source /xcpEngine-master/core/assignDirect
++ for a in "${asgt[@]}"
++ contains out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group '^-'
++ [[ out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group =~ ^- ]]
+++ strslice out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group 1 =
+++ local bounds c d domains e i l m o q r s sliced
+++ i=out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ shift
+++ [[ -n 1 ]]
+++ d=,
+++ domains=(${1//,/ })
+++ shift
+++ for m in "${domains[@]}"
+++ bounds=(${m//:/ })
+++ is_integer 1
+++ [[ 1 =~ ^-?[0-9]+$ ]]
+++ q=(${1//:/ })
+++ q=(${q//,/ })
+++ [[ -n = ]]
+++ is_integer =
+++ [[ = =~ ^-?[0-9]+$ ]]
+++ d==
+++ shift
+++ is_integer
+++ [[ '' =~ ^-?[0-9]+$ ]]
+++ bounds[1]=1
+++ sliced=(${i//${d}/ })
+++ ((  1 >  2  ))
+++ ((  1 >  2  ))
+++ ((  1 < -2  ))
+++ ((  1 < -2  ))
+++ is+integer 1
+++ [[ 1 =~ ^[0-9]+$ ]]
+++ s=+
+++ is+integer 1
+++ [[ 1 =~ ^[0-9]+$ ]]
+++ e=+
+++ case ${s}${e} in
+++ s=0
+++ e=0
+++ r=0
+++ unset o bounds
+++ is+integer 0
+++ [[ 0 =~ ^[0-9]+$ ]]
+++ l=1
+++ o=out_group
+++ c=' out_group'
++++ echo out_group
+++ c=out_group
+++ i=out_group
+++ i=out_group
+++ unset c
+++ [[ -n '' ]]
+++ echo out_group
++ a_var=out_group
+++ strslice out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group 2 =
+++ local bounds c d domains e i l m o q r s sliced
+++ i=out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ shift
+++ [[ -n 2 ]]
+++ d=,
+++ domains=(${1//,/ })
+++ shift
+++ for m in "${domains[@]}"
+++ bounds=(${m//:/ })
+++ is_integer 2
+++ [[ 2 =~ ^-?[0-9]+$ ]]
+++ q=(${1//:/ })
+++ q=(${q//,/ })
+++ [[ -n = ]]
+++ is_integer =
+++ [[ = =~ ^-?[0-9]+$ ]]
+++ d==
+++ shift
+++ is_integer
+++ [[ '' =~ ^-?[0-9]+$ ]]
+++ bounds[1]=2
+++ sliced=(${i//${d}/ })
+++ ((  2 >  2  ))
+++ ((  2 >  2  ))
+++ ((  2 < -2  ))
+++ ((  2 < -2  ))
+++ is+integer 2
+++ [[ 2 =~ ^[0-9]+$ ]]
+++ s=+
+++ is+integer 2
+++ [[ 2 =~ ^[0-9]+$ ]]
+++ e=+
+++ case ${s}${e} in
+++ s=1
+++ e=1
+++ r=0
+++ unset o bounds
+++ is+integer 0
+++ [[ 0 =~ ^[0-9]+$ ]]
+++ l=1
+++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group'
++++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ unset c
+++ [[ -n '' ]]
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
++ a_val=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
++ eval 'out_group=${a_val}'
+++ out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
++ for a in "${asgt[@]}"
++ contains atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json '^-'
++ [[ atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json =~ ^- ]]
+++ strslice atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json 1 =
+++ local bounds c d domains e i l m o q r s sliced
+++ i=atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ shift
+++ [[ -n 1 ]]
+++ d=,
+++ domains=(${1//,/ })
+++ shift
+++ for m in "${domains[@]}"
+++ bounds=(${m//:/ })
+++ is_integer 1
+++ [[ 1 =~ ^-?[0-9]+$ ]]
+++ q=(${1//:/ })
+++ q=(${q//,/ })
+++ [[ -n = ]]
+++ is_integer =
+++ [[ = =~ ^-?[0-9]+$ ]]
+++ d==
+++ shift
+++ is_integer
+++ [[ '' =~ ^-?[0-9]+$ ]]
+++ bounds[1]=1
+++ sliced=(${i//${d}/ })
+++ ((  1 >  2  ))
+++ ((  1 >  2  ))
+++ ((  1 < -2  ))
+++ ((  1 < -2  ))
+++ is+integer 1
+++ [[ 1 =~ ^[0-9]+$ ]]
+++ s=+
+++ is+integer 1
+++ [[ 1 =~ ^[0-9]+$ ]]
+++ e=+
+++ case ${s}${e} in
+++ s=0
+++ e=0
+++ r=0
+++ unset o bounds
+++ is+integer 0
+++ [[ 0 =~ ^[0-9]+$ ]]
+++ l=1
+++ o=atlas_orig
+++ c=' atlas_orig'
++++ echo atlas_orig
+++ c=atlas_orig
+++ i=atlas_orig
+++ i=atlas_orig
+++ unset c
+++ [[ -n '' ]]
+++ echo atlas_orig
++ a_var=atlas_orig
+++ strslice atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json 2 =
+++ local bounds c d domains e i l m o q r s sliced
+++ i=atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ shift
+++ [[ -n 2 ]]
+++ d=,
+++ domains=(${1//,/ })
+++ shift
+++ for m in "${domains[@]}"
+++ bounds=(${m//:/ })
+++ is_integer 2
+++ [[ 2 =~ ^-?[0-9]+$ ]]
+++ q=(${1//:/ })
+++ q=(${q//,/ })
+++ [[ -n = ]]
+++ is_integer =
+++ [[ = =~ ^-?[0-9]+$ ]]
+++ d==
+++ shift
+++ is_integer
+++ [[ '' =~ ^-?[0-9]+$ ]]
+++ bounds[1]=2
+++ sliced=(${i//${d}/ })
+++ ((  2 >  2  ))
+++ ((  2 >  2  ))
+++ ((  2 < -2  ))
+++ ((  2 < -2  ))
+++ is+integer 2
+++ [[ 2 =~ ^[0-9]+$ ]]
+++ s=+
+++ is+integer 2
+++ [[ 2 =~ ^[0-9]+$ ]]
+++ e=+
+++ case ${s}${e} in
+++ s=1
+++ e=1
+++ r=0
+++ unset o bounds
+++ is+integer 0
+++ [[ 0 =~ ^[0-9]+$ ]]
+++ l=1
+++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json'
++++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ unset c
+++ [[ -n '' ]]
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
++ a_val=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
++ eval 'atlas_orig=${a_val}'
+++ atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ subroutine @1.1a '[Creating' output 'directory]'
+ signpost=@1.1a
+ routine_map='
· @1
· @1.1
· @1.1a'
+ shift
+ local 'subroutine_description=[Creating output directory]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.1a '
+ [[ -n [Creating output directory] ]]
+ echo '· @1.1a [Creating output directory]'
· @1.1a [Creating output directory]
+ subroutine @1.1b '[/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107]'
+ signpost=@1.1b
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b'
+ shift
+ local 'subroutine_description=[/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.1b '
+ [[ -n [/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107] ]]
+ echo '· @1.1b [/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107]'
· @1.1b [/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107]
+ outdir=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
+ mkdir -p /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
+ subroutine @1.2 '[Initialising' space 'mapping]'
+ signpost=@1.2
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2'
+ shift
+ local 'subroutine_description=[Initialising space mapping]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.2 '
+ [[ -n [Initialising space mapping] ]]
+ echo '· @1.2 [Initialising space mapping]'
· @1.2 [Initialising space mapping]
+ output spaces sub-ADS4107_spaces.json
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_spaces.json == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ eval 'spaces[0]=${path}'
++ spaces[0]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ declared_o[${1}]=spaces
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ echo '{}'
+ subroutine @1.3 '[Initialising' derivative 'maps]'
+ signpost=@1.3
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3'
+ shift
+ local 'subroutine_description=[Initialising derivative maps]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.3 '
+ [[ -n [Initialising derivative maps] ]]
+ echo '· @1.3 [Initialising derivative maps]'
· @1.3 [Initialising derivative maps]
+ output aux_imgs sub-ADS4107_derivatives.json
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_derivatives.json == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ eval 'aux_imgs[0]=${path}'
++ aux_imgs[0]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ declared_o[${1}]=aux_imgs
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ echo '{}'
+ subroutine @1.4 '[Initialising' atlas 'system]'
+ signpost=@1.4
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4'
+ shift
+ local 'subroutine_description=[Initialising atlas system]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.4 '
+ [[ -n [Initialising atlas system] ]]
+ echo '· @1.4 [Initialising atlas system]'
· @1.4 [Initialising atlas system]
+ mkdir -p /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas
+ output atlas sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_atlas/sub-ADS4107_atlas.json == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ eval 'atlas[0]=${path}'
++ atlas[0]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ declared_o[${1}]=atlas
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ echo '{}'
+ subroutine @1.5 Ingress
+ signpost=@1.5
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5'
+ shift
+ local subroutine_description=Ingress
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.5 '
+ [[ -n Ingress ]]
+ echo '· @1.5 Ingress'
· @1.5 Ingress
+ for var in "${cohort_vars[@]}"
+ [[ ! -s /xcpEngine-master/core/ingress/img.ing ]]
+ continue
+ source /xcpEngine-master/core/initSpace
++ tag=@1.5
++ [[ -z anatomical ]]
++ [[ -z '' ]]
++ space[$sub]=sub-ADS4107_anatomical
++ subroutine @1.5.1 '[Native' space: 'sub-ADS4107_anatomical]'
++ signpost=@1.5.1
++ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1'
++ shift
++ local 'subroutine_description=[Native space: sub-ADS4107_anatomical]'
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ local 'vid=@1.5.1 '
++ [[ -n [Native space: sub-ADS4107_anatomical] ]]
++ echo '· @1.5.1 [Native space: sub-ADS4107_anatomical]'
· @1.5.1 [Native space: sub-ADS4107_anatomical]
++ standard=(${standard//_via_/ })
++ for i in "${!standard[@]}"
++ std=MNI
+++ abspath /xcpEngine-master/space/MNI/MNI_space.json
+++ local p path
++++ ls -d1 /xcpEngine-master/space/MNI/MNI_space.json
+++ local path=/xcpEngine-master/space/MNI/MNI_space.json
+++ for p in ${path}
+++ [[ -d /xcpEngine-master/space/MNI/MNI_space.json ]]
+++ [[ -f /xcpEngine-master/space/MNI/MNI_space.json ]]
+++ [[ /xcpEngine-master/space/MNI/MNI_space.json == */* ]]
++++ cd /xcpEngine-master/space/MNI
++++ pwd
+++ echo /xcpEngine-master/space/MNI/MNI_space.json
++ space_standard=/xcpEngine-master/space/MNI/MNI_space.json
++ ((  i == 0  ))
++ [[ -s /xcpEngine-master/space/MNI/MNI_space.json ]]
++ subroutine @1.5.2a '[Standard' space: 'MNI]'
++ signpost=@1.5.2a
++ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a'
++ shift
++ local 'subroutine_description=[Standard space: MNI]'
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ local 'vid=@1.5.2a '
++ [[ -n [Standard space: MNI] ]]
++ echo '· @1.5.2a [Standard space: MNI]'
· @1.5.2a [Standard space: MNI]
++ import_metadata /xcpEngine-master/space/MNI/MNI_space.json to /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
++ local meta_new meta_floating
++ meta_floating='{}'
++ [[ /xcpEngine-master/space/MNI/MNI_space.json != to ]]
++ [[ -s /xcpEngine-master/space/MNI/MNI_space.json ]]
+++ printx /xcpEngine-master/space/MNI/MNI_space.json
+++ local 'file={
  "MNI%1x1x1": {
    "Map": "${BRAINSPACE}/MNI/MNI-1x1x1.nii.gz",
    "MaskDilated": "${BRAINSPACE}/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "BrainPrior": "${BRAINSPACE}/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "MapHead": "${BRAINSPACE}/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "${BRAINSPACE}/MNI/MNI-1x1x1Mask.nii.gz",
    "Priors": "${BRAINSPACE}/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "LeftHemisphere": "${BRAINSPACE}/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "RightHemisphere": "${BRAINSPACE}/MNI/MNI-1x1x1RightHemisphere.nii.gz",
    "Citation": "${BRAINSPACE}/MNI/MNI_reference.bib"
  },
  "MNI%2x2x2": {
    "Map": "${BRAINSPACE}/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "${BRAINSPACE}/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
+++ eval 'echo -e "{
  \"MNI%1x1x1\": {
    \"Map\": \"${BRAINSPACE}/MNI/MNI-1x1x1.nii.gz\",
    \"MaskDilated\": \"${BRAINSPACE}/MNI/MNI-1x1x1MaskDilated.nii.gz\",
    \"BrainPrior\": \"${BRAINSPACE}/MNI/MNI-1x1x1BrainPrior.nii.gz\",
    \"MapHead\": \"${BRAINSPACE}/MNI/MNI-1x1x1Head.nii.gz\",
    \"Mask\": \"${BRAINSPACE}/MNI/MNI-1x1x1Mask.nii.gz\",
    \"Priors\": \"${BRAINSPACE}/MNI/MNI_priors/MNI-priors-%03d.nii.gz\",
    \"LeftHemisphere\": \"${BRAINSPACE}/MNI/MNI-1x1x1LeftHemisphere.nii.gz\",
    \"RightHemisphere\": \"${BRAINSPACE}/MNI/MNI-1x1x1RightHemisphere.nii.gz\",
    \"Citation\": \"${BRAINSPACE}/MNI/MNI_reference.bib\"
  },
  \"MNI%2x2x2\": {
    \"Map\": \"${BRAINSPACE}/MNI/MNI-2x2x2.nii.gz\",
    \"MapHead\": \"${BRAINSPACE}/MNI/MNI-2x2x2Head.nii.gz\"
  }
}"'
++++ echo -e '{
  "MNI%1x1x1": {
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ meta_new='{
  "MNI%1x1x1": {
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ [[ -z {
  "MNI%1x1x1": {
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
} ]]
+++ json_merge meta_floating meta_new
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{}' '{' '"MNI%1x1x1":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}'
++ meta_floating='{
  "MNI%1x1x1": {
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ meta_new=
++ shift
++ [[ to != to ]]
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
+++ printx /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+++ local 'file={}'
+++ eval 'echo -e "{}"'
++++ echo -e '{}'
++ meta_new='{}'
++ [[ -z {} ]]
+++ json_merge meta_floating meta_new
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{' '"MNI%1x1x1":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}' '{}'
++ meta_floating='{
  "MNI%1x1x1": {
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
++ json_print meta_floating
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
++ echo '{' '"MNI%1x1x1":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}'
++++ space_get MNI%1x1x1 Map
++++ [[ -n '' ]]
+++++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
++++ local 'spc={
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++++ json_get spc MNI%1x1x1 Map
++++ ((  3 == 3  ))
+++++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."MNI%1x1x1"."Map"'
+++++ echo '{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++++ eval echo /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++++ echo /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
++++ ((  3 == 2  ))
+++ abspath /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ local p path
++++ ls -d1 /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ local path=/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ for p in ${path}
+++ [[ -d /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz ]]
+++ [[ -f /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz ]]
+++ [[ /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz == */* ]]
++++ cd /xcpEngine-master/space/MNI
++++ pwd
+++ echo /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
++ template=/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
++ normalise=1
++ standard=MNI%1x1x1
++ str_targ=MNI%1x1x1
++++ space_get MNI%1x1x1 Map
++++ [[ -n '' ]]
+++++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
++++ local 'spc={
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++++ json_get spc MNI%1x1x1 Map
++++ ((  3 == 3  ))
+++++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."MNI%1x1x1"."Map"'
+++++ echo '{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++++ eval echo /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++++ echo /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
++++ ((  3 == 2  ))
+++ abspath /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ local p path
++++ ls -d1 /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ local path=/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ for p in ${path}
+++ [[ -d /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz ]]
+++ [[ -f /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz ]]
+++ [[ /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz == */* ]]
++++ cd /xcpEngine-master/space/MNI
++++ pwd
+++ echo /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
++ str_temp=/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
++ configure structural sub-ADS4107_anatomical
++ eval 'structural[0]="${@:2}"'
+++ structural[0]=sub-ADS4107_anatomical
++ declared_c[${1}]=structural
++ [[ -z '' ]]
++ xfms='  
                              
                              
                              '
++ [[ -z '' ]]
++ ixfms='  
                              
                              
                              '
++ [[ -n   
                              
                              
                               ]]
++ subroutine @1.5.3a '[Anatomical' space: 'sub-ADS4107_anatomical]'
++ signpost=@1.5.3a
++ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a'
++ shift
++ local 'subroutine_description=[Anatomical space: sub-ADS4107_anatomical]'
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ local 'vid=@1.5.3a '
++ [[ -n [Anatomical space: sub-ADS4107_anatomical] ]]
++ echo '· @1.5.3a [Anatomical space: sub-ADS4107_anatomical]'
· @1.5.3a [Anatomical space: sub-ADS4107_anatomical]
+++ echo
++ xfms=
+++ echo
++ ixfms=
++ xfms=
++ ixfms=
++ is_image
++ [[ -n '' ]]
++ /xcpEngine-master/utils/spaceMetadata -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json -f MNI%1x1x1:/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz -m sub-ADS4107_anatomical: -x -i -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ source /xcpEngine-master/core/constants
++ readonly 'RED=\033[0;31m'
++ RED='\033[0;31m'
++ readonly 'CYA=\033[0;36m'
++ CYA='\033[0;36m'
++ readonly 'LGR=\033[0;37m'
++ LGR='\033[0;37m'
++ readonly 'RCL=\033[0m'
++ RCL='\033[0m'
++ readonly ORIENTATION_ITK=RAI
++ ORIENTATION_ITK=RAI
++ readonly SIGMA=2.35482004503
++ SIGMA=2.35482004503
++ readonly PI=3.14159265359
++ PI=3.14159265359
++ readonly NBASE=2.71828182846
++ NBASE=2.71828182846
++ readonly PHI=1.61803398875
++ PHI=1.61803398875
++ [[ ! -d '' ]]
++ readonly BRAINSPACE=/xcpEngine-master/space
++ BRAINSPACE=/xcpEngine-master/space
++ [[ ! -d '' ]]
++ readonly BRAINATLAS=/xcpEngine-master/atlas
++ BRAINATLAS=/xcpEngine-master/atlas
++ [[ -z /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process ]]
++ unset s d a
++ declare -A s d a
+ source /xcpEngine-master/core/functions/library.sh
++ LIBRARY=/xcpEngine-master/core/functions
++ source /xcpEngine-master/core/functions/abort_stream
++ source /xcpEngine-master/core/functions/abspath
++ source /xcpEngine-master/core/functions/add_reference
++ source /xcpEngine-master/core/functions/apply_exec
++ source /xcpEngine-master/core/functions/arithmetic
++ source /xcpEngine-master/core/functions/assign
++ source /xcpEngine-master/core/functions/atlas
++ source /xcpEngine-master/core/functions/atlas_check
++ source /xcpEngine-master/core/functions/atlas_parse
++ source /xcpEngine-master/core/functions/atlas_set
++ source /xcpEngine-master/core/functions/cleanup
++ source /xcpEngine-master/core/functions/configure
++ source /xcpEngine-master/core/functions/configures
++ source /xcpEngine-master/core/functions/contains
++ source /xcpEngine-master/core/functions/define
++ source /xcpEngine-master/core/functions/derivative
++ source /xcpEngine-master/core/functions/derivative_cxt
++ source /xcpEngine-master/core/functions/derivative_floats
++ source /xcpEngine-master/core/functions/derivative_inherit
++ source /xcpEngine-master/core/functions/derivative_parse
++ source /xcpEngine-master/core/functions/derivative_set
++ source /xcpEngine-master/core/functions/doi2bib
++ source /xcpEngine-master/core/functions/echo_cmd
++ source /xcpEngine-master/core/functions/exec_afni
++ source /xcpEngine-master/core/functions/exec_ants
++ source /xcpEngine-master/core/functions/exec_c3d
++ source /xcpEngine-master/core/functions/exec_fsl
++ source /xcpEngine-master/core/functions/exec_sys
++ source /xcpEngine-master/core/functions/exec_xcp
++ source /xcpEngine-master/core/functions/final
++ source /xcpEngine-master/core/functions/import_image
++ source /xcpEngine-master/core/functions/import_metadata
++ source /xcpEngine-master/core/functions/input
++ source /xcpEngine-master/core/functions/is_1D
++ source /xcpEngine-master/core/functions/is_image
++ source /xcpEngine-master/core/functions/is_integer
++ source /xcpEngine-master/core/functions/is+integer
++ source /xcpEngine-master/core/functions/is_numeric
++ source /xcpEngine-master/core/functions/is+numeric
++ source /xcpEngine-master/core/functions/join_by
++ source /xcpEngine-master/core/functions/json_get
++ source /xcpEngine-master/core/functions/json_get_array
++ source /xcpEngine-master/core/functions/json_keys
++ source /xcpEngine-master/core/functions/json_merge
++ source /xcpEngine-master/core/functions/json_multiset
++ source /xcpEngine-master/core/functions/json_object
++ source /xcpEngine-master/core/functions/json_print
++ source /xcpEngine-master/core/functions/json_rm
++ source /xcpEngine-master/core/functions/json_set
++ source /xcpEngine-master/core/functions/json_set_array
++ source /xcpEngine-master/core/functions/lc_prefix
++ source /xcpEngine-master/core/functions/load_atlas
++ source /xcpEngine-master/core/functions/load_derivatives
++ source /xcpEngine-master/core/functions/matchexact
++ source /xcpEngine-master/core/functions/matching
++ source /xcpEngine-master/core/functions/ninstances
++ source /xcpEngine-master/core/functions/output
++ source /xcpEngine-master/core/functions/printx
++ source /xcpEngine-master/core/functions/proc_afni
++ source /xcpEngine-master/core/functions/proc_ants
++ source /xcpEngine-master/core/functions/proc_c3d
++ source /xcpEngine-master/core/functions/proc_cmd
++ source /xcpEngine-master/core/functions/proc_fsl
++ source /xcpEngine-master/core/functions/proc_xcp
++ source /xcpEngine-master/core/functions/process
++ source /xcpEngine-master/core/functions/processed
++ source /xcpEngine-master/core/functions/qc
++ source /xcpEngine-master/core/functions/quality_metric
++ source /xcpEngine-master/core/functions/repeat
++ source /xcpEngine-master/core/functions/require
++ source /xcpEngine-master/core/functions/rerun
++ source /xcpEngine-master/core/functions/rln
++ source /xcpEngine-master/core/functions/routine
++ source /xcpEngine-master/core/functions/routine_end
++ source /xcpEngine-master/core/functions/set_space
++ source /xcpEngine-master/core/functions/space_get
++ source /xcpEngine-master/core/functions/space_set
++ source /xcpEngine-master/core/functions/strslice
++ source /xcpEngine-master/core/functions/subroutine
++ source /xcpEngine-master/core/functions/subject_parse
++ source /xcpEngine-master/core/functions/transform_set
++ source /xcpEngine-master/core/functions/verbose
++ source /xcpEngine-master/core/functions/warpspace
++ source /xcpEngine-master/core/functions/write_atlas
++ source /xcpEngine-master/core/functions/write_config_safe
++ source /xcpEngine-master/core/functions/write_config
++ source /xcpEngine-master/core/functions/write_derivative
++ source /xcpEngine-master/core/functions/write_output
++ source /xcpEngine-master/core/functions/zscore_image
+ [[ ! -s /xcpEngine-master/thirdparty/jq/jq-linux64 ]]
+ combine_only=0
+ unset sourceSpace
+ declare -A sourceSpace
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ out=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ fixed=(${OPTARG//:/ })
++ eval echo /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ echo /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ is_image /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ [[ -n /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz ]]
+++ readlink -f /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ ((  1 == 1  ))
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ moving=(${OPTARG//:/ })
++ eval echo
+++ echo
+ source_space_map=
+ is_image
+ [[ -n '' ]]
+ echo 'source space map '\'''\'' is not an image'
+ exit
+ subroutine @1.5 '[Priming' analytic 'audit]'
+ signpost=@1.5
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5'
+ shift
+ local 'subroutine_description=[Priming analytic audit]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.5 '
+ [[ -n [Priming analytic audit] ]]
+ echo '· @1.5 [Priming analytic audit]'
· @1.5 [Priming analytic audit]
+ audit[sub]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv
++ echo 0
+ id_vars=0
++ echo id0
+ id_vars=id0
+ audit_var=id0,localiser,struc,gmd,jlf,roiquant,qcanat
++ ninstances , struc,gmd,jlf,roiquant,qcanat
++ local char=,
++ shift
+++ echo struc,gmd,jlf,roiquant,qcanat
++ local string=struc,gmd,jlf,roiquant,qcanat
++ reduced=,,,,
++ printf 4
+ num_mods=6
+++ seq 1 6
++ printf ,0%.0s 1 2 3 4 5 6
+ audit_val=sub-ADS4107,0,0,0,0,0,0
+ echo id0,localiser,struc,gmd,jlf,roiquant,qcanat
+ echo sub-ADS4107,0,0,0,0,0,0
+ subroutine @1.6 '[Priming' quality 'assessment]'
+ signpost=@1.6
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5
· @1.6'
+ shift
+ local 'subroutine_description=[Priming quality assessment]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.6 '
+ [[ -n [Priming quality assessment] ]]
+ echo '· @1.6 [Priming quality assessment]'
· @1.6 [Priming quality assessment]
+ quality=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_quality.csv
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_quality.csv
+ echo id0
+ echo sub-ADS4107
+ routine_end
+ [[ -n Localising subject metadata... ]]
+ eval 'echo -e "····································································
Processing step complete:
${routine_description}"'
++ echo -e '····································································
Processing step complete:
Localising subject metadata...'
+ unset routine_description
+ routine @2 Localising image
+ signpost=@2
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5
· @1.6
· @2'
+ shift
+ routine_description='Localising image'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@2 '
+ [[ -n Localising image ]]
+ eval 'echo -e "


Current processing step:
${vid}${routine_description}
····································································"'
++ echo -e '


Current processing step:
@2 Localising image
····································································'



Current processing step:
@2 Localising image
····································································
+ subroutine @2.1 '[Verifying' that images are 'present]'
+ signpost=@2.1
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5
· @1.6
· @2
· @2.1'
+ shift
+ local 'subroutine_description=[Verifying that images are present]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@2.1 '
+ [[ -n [Verifying that images are present] ]]
+ echo '· @2.1 [Verifying that images are present]'
· @2.1 [Verifying that images are present]
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+ ((  1 == 1  ))
+ img1=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+ subroutine @2.2 '[Conforming' and localising 'images]'
+ signpost=@2.2
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5
· @1.6
· @2
· @2.1
· @2.2'
+ shift
+ local 'subroutine_description=[Conforming and localising images]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@2.2 '
+ [[ -n [Conforming and localising images] ]]
+ echo '· @2.2 [Conforming and localising images]'
· @2.2 [Conforming and localising images]
+ source /xcpEngine-master/core/imgLocalise
++ img=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ imgs='img[9001]:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz'
++ for v in "${cohort_vars[@]}"
++ vx=img
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ ((  1 == 1  ))
++ [[ img != img ]]
++ for i in ${imgs}
++ ori=0
++ ipl=NN
+++ strslice 'img[9001]:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz' 1 :
+++ local bounds c d domains e i l m o q r s sliced
+++ i='img[9001]:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz'
+++ shift
+++ [[ -n 1 ]]
+++ d=,
+++ domains=(${1//,/ })
+++ shift
+++ for m in "${domains[@]}"
+++ bounds=(${m//:/ })
+++ is_integer 1
+++ [[ 1 =~ ^-?[0-9]+$ ]]
+++ q=(${1//:/ })
+++ q=(${q//,/ })
+++ [[ -n : ]]
+++ is_integer
+++ [[ '' =~ ^-?[0-9]+$ ]]
+++ d=:
+++ shift
+++ is_integer
+++ [[ '' =~ ^-?[0-9]+$ ]]
+++ bounds[1]=1
+++ sliced=(${i//${d}/ })
+++ ((  1 >  2  ))
+++ ((  1 >  2  ))
+++ ((  1 < -2  ))
+++ ((  1 < -2  ))
+++ is+integer 1
+++ [[ 1 =~ ^[0-9]+$ ]]
+++ s=+
+++ is+integer 1
+++ [[ 1 =~ ^[0-9]+$ ]]
+++ e=+
+++ case ${s}${e} in
+++ s=0
+++ e=0
+++ r=0
+++ unset o bounds
+++ is+integer 0
+++ [[ 0 =~ ^[0-9]+$ ]]
+++ l=1
+++ o='img[9001]'
+++ c=' img[9001]'
++++ echo 'img[9001]'
+++ c='img[9001]'
+++ i='img[9001]'
+++ i='img[9001]'
+++ unset c
+++ [[ -n '' ]]
+++ echo 'img[9001]'
++ var='img[9001]'
+++ strslice 'img[9001]:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz' 2 :
+++ local bounds c d domains e i l m o q r s sliced
+++ i='img[9001]:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz'
+++ shift
+++ [[ -n 2 ]]
+++ d=,
+++ domains=(${1//,/ })
+++ shift
+++ for m in "${domains[@]}"
+++ bounds=(${m//:/ })
+++ is_integer 2
+++ [[ 2 =~ ^-?[0-9]+$ ]]
+++ q=(${1//:/ })
+++ q=(${q//,/ })
+++ [[ -n : ]]
+++ is_integer
+++ [[ '' =~ ^-?[0-9]+$ ]]
+++ d=:
+++ shift
+++ is_integer
+++ [[ '' =~ ^-?[0-9]+$ ]]
+++ bounds[1]=2
+++ sliced=(${i//${d}/ })
+++ ((  2 >  2  ))
+++ ((  2 >  2  ))
+++ ((  2 < -2  ))
+++ ((  2 < -2  ))
+++ is+integer 2
+++ [[ 2 =~ ^[0-9]+$ ]]
+++ s=+
+++ is+integer 2
+++ [[ 2 =~ ^[0-9]+$ ]]
+++ e=+
+++ case ${s}${e} in
+++ s=1
+++ e=1
+++ r=0
+++ unset o bounds
+++ is+integer 0
+++ [[ 0 =~ ^[0-9]+$ ]]
+++ l=1
+++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
+++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz'
++++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
+++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
+++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
+++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
+++ unset c
+++ [[ -n '' ]]
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ tgt=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ import_image 'img[9001]' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz --ORIENT=0 --INTERPOL=NN
++ local ori=0
++ local interpol=linear
++ local 'var=img[9001]'
++ local tgt=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ local src=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ shift 2
++ ((  2 > 0  ))
++ contains --ORIENT=0 '^--ORIENT='
++ [[ --ORIENT=0 =~ ^--ORIENT= ]]
++ local ori=0
++ contains --ORIENT=0 '^--INTERPOL='
++ [[ --ORIENT=0 =~ ^--INTERPOL= ]]
++ shift
++ ((  1 > 0  ))
++ contains --INTERPOL=NN '^--ORIENT='
++ [[ --INTERPOL=NN =~ ^--ORIENT= ]]
++ contains --INTERPOL=NN '^--INTERPOL='
++ [[ --INTERPOL=NN =~ ^--INTERPOL= ]]
++ local interpol=NN
++ shift
++ ((  0 > 0  ))
++ contains /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz '.nii.gz$'
++ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz =~ .nii.gz$ ]]
++ flag_imtype=0
+++ /opt/afni-latest/@GetAfniOrient /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ [[ LPI == RPI ]]
++ flag_orient=1
++ ((  ori == 0  ))
++ flag_orient=0
++ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz != /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz ]]
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ case ${flag_imtype}${flag_orient} in
++ ln -sf /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
+ routine_end
+ [[ -n Localising image ]]
+ eval 'echo -e "····································································
Processing step complete:
${routine_description}"'
++ echo -e '····································································
Processing step complete:
Localising image'
+ unset routine_description
+ routine @3 Localising design
+ signpost=@3
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5
· @1.6
· @2
· @2.1
· @2.2
· @3'
+ shift
+ routine_description='Localising design'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@3 '
+ [[ -n Localising design ]]
+ eval 'echo -e "


Current processing step:
${vid}${routine_description}
····································································"'
++ echo -e '


Current processing step:
@3 Localising design
····································································'



Current processing step:
@3 Localising design
····································································
+ subroutine @3.1 '[Writing' localised 'design]'
+ signpost=@3.1
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5
· @1.6
· @2
· @2.1
· @2.2
· @3
· @3.1'
+ shift
+ local 'subroutine_description=[Writing localised design]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@3.1 '
+ [[ -n [Writing localised design] ]]
+ echo '· @3.1 [Writing localised design]'
· @3.1 [Writing localised design]
+ source /xcpEngine-master/core/defineDesign
++ design[$sub]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
+ printx /projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/anat-Complete+_201903031016.dsn
+ local 'file=#!/usr/bin/env bash

###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################


###################################################################
# This design file stores the values of all variables required to
# execute a complete task-free functional connectivity pipeline.
# You may execute the analysis specified in this design file by
# calling (in any bash terminal):
#
# xcpEngine -d <design> -c <cohort> -o <output> <options>
#
# Variables fall into five general categories:
# * ANALYSIS VARIABLES are used at all stages of this analysis.
# * PIPELINE specifies the modules that comprise the analysis.
# * GLOBAL VARIABLES are used at all stages of all analyses.
# * MODULE VARIABLES are used during one stage of the analysis.
#                  These are typically array variables with array
#                  indices equal to the index of the analysis
#                  stage during which they are used.
# * OUTPUT VARIABLES may be used at all stages of the analysis.
#                  These are sometimes array variables with array
#                  indices equal to the value of the primary
#                  subject identifier. They will appear only in
#                  localised design files.
###################################################################


###################################################################
# ANALYSIS VARIABLES
###################################################################

analysis=struc-ACCELERATOR
design=/projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/anat-Complete+_201903031016.dsn
sequence=anatomical
standard=MNI%1x1x1

###################################################################
# PIPELINE
###################################################################

pipeline=struc,gmd,jlf,roiquant,qcanat

###################################################################
# 1 STRUC
###################################################################

struc_denoise_anat[1]=1
struc_prior_weight[1]=0.25
struc_posterior_formulation[1]='\''Socrates[1]'\''
struc_keepBEImages[1]=0
struc_floating_point[1]=0
struc_random_seed[1]=0
struc_bspline[1]=0
struc_fit[1]=0.3
struc_quick[1]=0
struc_seg_priors[1]=1
struc_rerun[1]=0
struc_cleanup[1]=1
struc_process[1]=ACT

###################################################################
# 2 GMD
###################################################################

gmd_rerun[2]=0
gmd_cleanup[2]=1

###################################################################
# 3 JLF
###################################################################

newAntsPath[3]=/data/joy/BBL/applications/ANTsJLF_201603/bin/
jlf_keep_warps[3]=0
jlf_extract[3]=1
jlf_quick[3]=1
jlf_cohort[3]=SexBalanced20
jlf_parallel[3]=none
jlf_rerun[3]=0
jlf_cleanup[3]=1

###################################################################
# 4 ROIQUANT
###################################################################

roiquant_atlas[4]=miccai
roiquant_vol[4]=1
roiquant_rerun[4]=0
roiquant_cleanup[4]=1

###################################################################
# 5 QCSTRUC
###################################################################

qcanat_gm[5]=Y
qcanat_gm_val[5]=2,4
qcanat_wm[5]=Y
qcanat_wm_val[5]=3
qcanat_csf[5]=Y
qcanat_csf_val[5]=1
qcanat_cort[5]=Y
qcanat_cort_val[5]=4
qcanat_rerun[5]=0
qcanat_cleanup[5]=1'
+ eval 'echo -e "#!/usr/bin/env bash

###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################


###################################################################
# This design file stores the values of all variables required to
# execute a complete task-free functional connectivity pipeline.
# You may execute the analysis specified in this design file by
# calling (in any bash terminal):
#
# xcpEngine -d <design> -c <cohort> -o <output> <options>
#
# Variables fall into five general categories:
# * ANALYSIS VARIABLES are used at all stages of this analysis.
# * PIPELINE specifies the modules that comprise the analysis.
# * GLOBAL VARIABLES are used at all stages of all analyses.
# * MODULE VARIABLES are used during one stage of the analysis.
#                  These are typically array variables with array
#                  indices equal to the index of the analysis
#                  stage during which they are used.
# * OUTPUT VARIABLES may be used at all stages of the analysis.
#                  These are sometimes array variables with array
#                  indices equal to the value of the primary
#                  subject identifier. They will appear only in
#                  localised design files.
###################################################################


###################################################################
# ANALYSIS VARIABLES
###################################################################

analysis=struc-ACCELERATOR
design=/projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/anat-Complete+_201903031016.dsn
sequence=anatomical
standard=MNI%1x1x1

###################################################################
# PIPELINE
###################################################################

pipeline=struc,gmd,jlf,roiquant,qcanat

###################################################################
# 1 STRUC
###################################################################

struc_denoise_anat[1]=1
struc_prior_weight[1]=0.25
struc_posterior_formulation[1]='\''Socrates[1]'\''
struc_keepBEImages[1]=0
struc_floating_point[1]=0
struc_random_seed[1]=0
struc_bspline[1]=0
struc_fit[1]=0.3
struc_quick[1]=0
struc_seg_priors[1]=1
struc_rerun[1]=0
struc_cleanup[1]=1
struc_process[1]=ACT

###################################################################
# 2 GMD
###################################################################

gmd_rerun[2]=0
gmd_cleanup[2]=1

###################################################################
# 3 JLF
###################################################################

newAntsPath[3]=/data/joy/BBL/applications/ANTsJLF_201603/bin/
jlf_keep_warps[3]=0
jlf_extract[3]=1
jlf_quick[3]=1
jlf_cohort[3]=SexBalanced20
jlf_parallel[3]=none
jlf_rerun[3]=0
jlf_cleanup[3]=1

###################################################################
# 4 ROIQUANT
###################################################################

roiquant_atlas[4]=miccai
roiquant_vol[4]=1
roiquant_rerun[4]=0
roiquant_cleanup[4]=1

###################################################################
# 5 QCSTRUC
###################################################################

qcanat_gm[5]=Y
qcanat_gm_val[5]=2,4
qcanat_wm[5]=Y
qcanat_wm_val[5]=3
qcanat_csf[5]=Y
qcanat_csf_val[5]=1
qcanat_cort[5]=Y
qcanat_cort_val[5]=4
qcanat_rerun[5]=0
qcanat_cleanup[5]=1"'
++ echo -e '#!/usr/bin/env bash

###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################


###################################################################
# This design file stores the values of all variables required to
# execute a complete task-free functional connectivity pipeline.
# You may execute the analysis specified in this design file by
# calling (in any bash terminal):
#
# xcpEngine -d <design> -c <cohort> -o <output> <options>
#
# Variables fall into five general categories:
# * ANALYSIS VARIABLES are used at all stages of this analysis.
# * PIPELINE specifies the modules that comprise the analysis.
# * GLOBAL VARIABLES are used at all stages of all analyses.
# * MODULE VARIABLES are used during one stage of the analysis.
#                  These are typically array variables with array
#                  indices equal to the index of the analysis
#                  stage during which they are used.
# * OUTPUT VARIABLES may be used at all stages of the analysis.
#                  These are sometimes array variables with array
#                  indices equal to the value of the primary
#                  subject identifier. They will appear only in
#                  localised design files.
###################################################################


###################################################################
# ANALYSIS VARIABLES
###################################################################

analysis=struc-ACCELERATOR
design=/projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/anat-Complete+_201903031016.dsn
sequence=anatomical
standard=MNI%1x1x1

###################################################################
# PIPELINE
###################################################################

pipeline=struc,gmd,jlf,roiquant,qcanat

###################################################################
# 1 STRUC
###################################################################

struc_denoise_anat[1]=1
struc_prior_weight[1]=0.25
struc_posterior_formulation[1]='\''Socrates[1]'\''
struc_keepBEImages[1]=0
struc_floating_point[1]=0
struc_random_seed[1]=0
struc_bspline[1]=0
struc_fit[1]=0.3
struc_quick[1]=0
struc_seg_priors[1]=1
struc_rerun[1]=0
struc_cleanup[1]=1
struc_process[1]=ACT

###################################################################
# 2 GMD
###################################################################

gmd_rerun[2]=0
gmd_cleanup[2]=1

###################################################################
# 3 JLF
###################################################################

newAntsPath[3]=/data/joy/BBL/applications/ANTsJLF_201603/bin/
jlf_keep_warps[3]=0
jlf_extract[3]=1
jlf_quick[3]=1
jlf_cohort[3]=SexBalanced20
jlf_parallel[3]=none
jlf_rerun[3]=0
jlf_cleanup[3]=1

###################################################################
# 4 ROIQUANT
###################################################################

roiquant_atlas[4]=miccai
roiquant_vol[4]=1
roiquant_rerun[4]=0
roiquant_cleanup[4]=1

###################################################################
# 5 QCSTRUC
###################################################################

qcanat_gm[5]=Y
qcanat_gm_val[5]=2,4
qcanat_wm[5]=Y
qcanat_wm_val[5]=3
qcanat_csf[5]=Y
qcanat_csf_val[5]=1
qcanat_cort[5]=Y
qcanat_cort_val[5]=4
qcanat_rerun[5]=0
qcanat_cleanup[5]=1'
+ subroutine @3.2 '[Evaluating' subject 'variables]'
+ signpost=@3.2
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5
· @1.6
· @2
· @2.1
· @2.2
· @3
· @3.1
· @3.2'
+ shift
+ local 'subroutine_description=[Evaluating subject variables]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@3.2 '
+ [[ -n [Evaluating subject variables] ]]
+ echo '· @3.2 [Evaluating subject variables]'
· @3.2 [Evaluating subject variables]
+ cat /xcpEngine-master/core/DESIGN_VARHEAD_OUTPUT
+ printx /xcpEngine-master/core/DESIGN_MODULE_OUTPUT
+ local 'file=
# ··· outputs from ${mod_name}[${cxt}] ··· #'
+ eval 'echo -e "
# ··· outputs from ${mod_name}[${cxt}] ··· #"'
++ echo -e '
# ··· outputs from XCP ENGINE LOCALISER[0] ··· #'
+ set_space sub-ADS4107_anatomical
+ space[sub]=sub-ADS4107_anatomical
+ echo 'space[9001]=sub-ADS4107_anatomical'
+ write_config structural
+ local 'config=structural[0]'
+ echo 'structural[9001]=sub-ADS4107_anatomical'
+ write_output spaces
+ local 'output=spaces[0]'
+ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
+ echo 'spaces[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json'
+ write_output aux_imgs
+ local 'output=aux_imgs[0]'
+ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json ]]
+ echo 'aux_imgs[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json'
+ write_output atlas
+ local 'output=atlas[0]'
+ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json ]]
+ echo 'atlas[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json'
+ echo 'audit[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv'
+ echo 'quality[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_quality.csv'
+ echo out_super=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data
+ echo sub=9001
+ echo 'design[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn'
+ echo 'prefix[9001]=sub-ADS4107'
+ echo 'out[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107'
+ echo 'ids[9001]=sub-ADS4107'
+ [[ -n $TMPDIR ]]
+ echo 'scratch=$TMPDIR'
+ for v in "${cohort_vars[@]}"
+ echo 'img[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz'
+ for i in "${!subject[@]}"
+ echo 'subject[0]=sub-ADS4107'
+ for a in "${asgt[@]}"
+ echo out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+ for a in "${asgt[@]}"
+ echo atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ [[ anatomical == native ]]
+ [[ 1 == 1 ]]
+ echo template=/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ echo standard=MNI%1x1x1
+ echo 'img1[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz'
+ routine_end
+ [[ -n Localising design ]]
+ eval 'echo -e "····································································
Processing step complete:
${routine_description}"'
++ echo -e '····································································
Processing step complete:
Localising design'
+ unset routine_description
+ source /xcpEngine-master/core/auditComplete
++ id_var=(${ids[sub]//,/ })
++ modaudit=2
++ previous=1
++ mapfile subjaudit
++ auditvals=(${subjaudit[1]//,/ })
++ auditvals=(${auditvals[@]:0:$previous} 1 ${auditvals[@]:$modaudit:${#auditvals[@]}})
+++ join_by , sub-ADS4107 1 0 0 0 0 0
+++ local d=,
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s ,1 ,0 ,0 ,0 ,0 ,0
++ subjaudit[1]=sub-ADS4107,1,0,0,0,0,0
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv
++ echo id0,localiser,struc,gmd,jlf,roiquant,qcanat
++ echo sub-ADS4107,1,0,0,0,0,0
+ echo '

Localiser complete'
++ export SHELLOPTS
++ source /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
+++ analysis=struc-ACCELERATOR
+++ design=/projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/anat-Complete+_201903031016.dsn
+++ sequence=anatomical
+++ standard=MNI%1x1x1
+++ pipeline=struc,gmd,jlf,roiquant,qcanat
+++ struc_denoise_anat[1]=1
+++ struc_prior_weight[1]=0.25
+++ struc_posterior_formulation[1]='Socrates[1]'
+++ struc_keepBEImages[1]=0
+++ struc_floating_point[1]=0
+++ struc_random_seed[1]=0
+++ struc_bspline[1]=0
+++ struc_fit[1]=0.3
+++ struc_quick[1]=0
+++ struc_seg_priors[1]=1
+++ struc_rerun[1]=0
+++ struc_cleanup[1]=1
+++ struc_process[1]=ACT
+++ gmd_rerun[2]=0
+++ gmd_cleanup[2]=1
+++ newAntsPath[3]=/data/joy/BBL/applications/ANTsJLF_201603/bin/
+++ jlf_keep_warps[3]=0
+++ jlf_extract[3]=1
+++ jlf_quick[3]=1
+++ jlf_cohort[3]=SexBalanced20
+++ jlf_parallel[3]=none
+++ jlf_rerun[3]=0
+++ jlf_cleanup[3]=1
+++ roiquant_atlas[4]=miccai
+++ roiquant_vol[4]=1
+++ roiquant_rerun[4]=0
+++ roiquant_cleanup[4]=1
+++ qcanat_gm[5]=Y
+++ qcanat_gm_val[5]=2,4
+++ qcanat_wm[5]=Y
+++ qcanat_wm_val[5]=3
+++ qcanat_csf[5]=Y
+++ qcanat_csf_val[5]=1
+++ qcanat_cort[5]=Y
+++ qcanat_cort_val[5]=4
+++ qcanat_rerun[5]=0
+++ qcanat_cleanup[5]=1
+++ space[9001]=sub-ADS4107_anatomical
+++ structural[9001]=sub-ADS4107_anatomical
+++ spaces[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+++ aux_imgs[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+++ atlas[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+++ audit[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv
+++ quality[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_quality.csv
+++ out_super=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data
+++ sub=9001
+++ design[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
+++ prefix[9001]=sub-ADS4107
+++ out[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
+++ ids[9001]=sub-ADS4107
+++ scratch=
+++ img[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+++ subject[0]=sub-ADS4107
+++ out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ template=/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ standard=MNI%1x1x1
+++ img1[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ design=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
++ prefix=sub-ADS4107
++ out=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
++ source /xcpEngine-master/core/defineLogs
+++ [[ -z '' ]]
+++ export log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG
+++ log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG
+++ export log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process
+++ log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process
+++ [[ -n struc ]]
+++ [[ -n /xcpEngine-master/core/CONSOLE_MODULE_AFGR ]]
+++ echo '

'
+++ printx /xcpEngine-master/core/CONSOLE_MODULE_AFGR
+++ local 'file=###################################################################
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
#                                                                 #
#  ☭$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})☭  #
#                                                                 #
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
###################################################################'
+++ eval 'echo -e "###################################################################
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
#                                                                 #
#  ☭$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})☭  #
#                                                                 #
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
###################################################################"'
+++++ /xcpEngine-master/core/padAndCentreString 59 STRUCTURAL PROCESSING MODULE
+ length=59
+ shift 1
+ string='STRUCTURAL PROCESSING MODULE'
+ pad=31
+ pad=15
+++ seq 1 15
++ printf '%.0s ' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
+ pad='               '
+ string='               STRUCTURAL PROCESSING MODULE               '
+ ((  58 < 59  ))
+ string='               STRUCTURAL PROCESSING MODULE                '
+ printf '               STRUCTURAL PROCESSING MODULE                '
++++ echo -e '###################################################################
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
#                                                                 #
#  ☭               STRUCTURAL PROCESSING MODULE                ☭  #
#                                                                 #
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
###################################################################'
+++ echo '

'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ ((  1 == 1  ))
++ ((  0 == 1  ))
++ outdir=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc
++ [[ ! -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc ]]
++ echo '


[I][/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz]
[O][/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc]'
++ [[ -n '' ]]
++ intermediate=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107~TEMP~
++ intermediate_root=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107~TEMP~
++ img_raw=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ img=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ mapfile quality_lines
++ qvars=(${quality_lines[0]//,/ })
++ qvals=(${quality_lines[1]//,/ })
++ printx /xcpEngine-master/core/DESIGN_MODULE_OUTPUT
++ local 'file=
# ··· outputs from ${mod_name}[${cxt}] ··· #'
++ eval 'echo -e "
# ··· outputs from ${mod_name}[${cxt}] ··· #"'
+++ echo -e '
# ··· outputs from STRUCTURAL PROCESSING MODULE[1] ··· #'
++ export 'derivatives_floating={}'
++ derivatives_floating='{}'
++ declare -A declared_d declared_o declared_c declared_s declared_q
++ routine_map='· START'
++ rerun
++ local 'rerun=struc_rerun[1]'
++ ((  0 == 1  ))
+ derivative corticalThickness sub-ADS4107_CorticalThickness
+ local path vname
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ vname=corticalThickness
+ eval 'corticalThickness[1]=${path}'
++ corticalThickness[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ json_multiset derivatives_floating corticalThickness Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz Space:sub-ADS4107_anatomical ProvenanceName:struc ProvenanceIndex:1 Statistic:null Type:Map
+ local i asgt json_new key val
+ multiset=()
+ local multiset
+ local json=derivatives_floating
+ local object=corticalThickness
+ shift 2
+ for i in ${@}
+ asgt=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ key=Map
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz'
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ unset c
++ [[ -n '' ]]
++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ val=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Space:sub-ADS4107_anatomical
++ strslice Space:sub-ADS4107_anatomical 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Space
++ c=' Space'
+++ echo Space
++ c=Space
++ i=Space
++ i=Space
++ unset c
++ [[ -n '' ]]
++ echo Space
+ key=Space
++ strslice Space:sub-ADS4107_anatomical 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=sub-ADS4107_anatomical
++ c=' sub-ADS4107_anatomical'
+++ echo sub-ADS4107_anatomical
++ c=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ unset c
++ [[ -n '' ]]
++ echo sub-ADS4107_anatomical
+ val=sub-ADS4107_anatomical
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceName:struc
++ strslice ProvenanceName:struc 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:struc
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceName
++ c=' ProvenanceName'
+++ echo ProvenanceName
++ c=ProvenanceName
++ i=ProvenanceName
++ i=ProvenanceName
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceName
+ key=ProvenanceName
++ strslice ProvenanceName:struc 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:struc
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=struc
++ c=' struc'
+++ echo struc
++ c=struc
++ i=struc
++ i=struc
++ unset c
++ [[ -n '' ]]
++ echo struc
+ val=struc
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceIndex:1
++ strslice ProvenanceIndex:1 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:1
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceIndex
++ c=' ProvenanceIndex'
+++ echo ProvenanceIndex
++ c=ProvenanceIndex
++ i=ProvenanceIndex
++ i=ProvenanceIndex
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceIndex
+ key=ProvenanceIndex
++ strslice ProvenanceIndex:1 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:1
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=1
++ c=' 1'
+++ echo 1
++ c=1
++ i=1
++ i=1
++ unset c
++ [[ -n '' ]]
++ echo 1
+ val=1
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Statistic:null
++ strslice Statistic:null 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ key=Statistic
++ strslice Statistic:null 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=null
++ c=' null'
+++ echo null
++ c=null
++ i=null
++ i=null
++ unset c
++ [[ -n '' ]]
++ echo null
+ val=null
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Type:Map
++ strslice Type:Map 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Type
++ c=' Type'
+++ echo Type
++ c=Type
++ i=Type
++ i=Type
++ unset c
++ [[ -n '' ]]
++ echo Type
+ key=Type
++ strslice Type:Map 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ val=Map
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
++ join_by ', ' '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz"' '"Space":"sub-ADS4107_anatomical"' '"ProvenanceName":"struc"' '"ProvenanceIndex":"1"' '"Statistic":"null"' '"Type":"Map"'
++ local 'd=, '
++ shift
++ echo -n '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz"'
++ shift
++ printf %s ', "Space":"sub-ADS4107_anatomical"' ', "ProvenanceName":"struc"' ', "ProvenanceIndex":"1"' ', "Statistic":"null"' ', "Type":"Map"'
+ multiset='"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"struc", "ProvenanceIndex":"1", "Statistic":"null", "Type":"Map"'
+ json_new=($(echo ${!json}|$JQ_PATH '."'"${object}"'" += { '"${multiset}"' }'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 '."corticalThickness" += { "Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"struc", "ProvenanceIndex":"1", "Statistic":"null", "Type":"Map" }'
++ echo '{}'
+ eval 'derivatives_floating=${json_new[@]}'
++ derivatives_floating='{ "corticalThickness": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Map" } }'
+ declared_d[${vname}]=corticalThickness
+ derivative mask sub-ADS4107_BrainExtractionMask
+ local path vname
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ vname=mask
+ eval 'mask[1]=${path}'
++ mask[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ json_multiset derivatives_floating mask Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz Space:sub-ADS4107_anatomical ProvenanceName:struc ProvenanceIndex:1 Statistic:null Type:Map
+ local i asgt json_new key val
+ multiset=()
+ local multiset
+ local json=derivatives_floating
+ local object=mask
+ shift 2
+ for i in ${@}
+ asgt=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ key=Map
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz'
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ unset c
++ [[ -n '' ]]
++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ val=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Space:sub-ADS4107_anatomical
++ strslice Space:sub-ADS4107_anatomical 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Space
++ c=' Space'
+++ echo Space
++ c=Space
++ i=Space
++ i=Space
++ unset c
++ [[ -n '' ]]
++ echo Space
+ key=Space
++ strslice Space:sub-ADS4107_anatomical 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=sub-ADS4107_anatomical
++ c=' sub-ADS4107_anatomical'
+++ echo sub-ADS4107_anatomical
++ c=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ unset c
++ [[ -n '' ]]
++ echo sub-ADS4107_anatomical
+ val=sub-ADS4107_anatomical
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceName:struc
++ strslice ProvenanceName:struc 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:struc
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceName
++ c=' ProvenanceName'
+++ echo ProvenanceName
++ c=ProvenanceName
++ i=ProvenanceName
++ i=ProvenanceName
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceName
+ key=ProvenanceName
++ strslice ProvenanceName:struc 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:struc
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=struc
++ c=' struc'
+++ echo struc
++ c=struc
++ i=struc
++ i=struc
++ unset c
++ [[ -n '' ]]
++ echo struc
+ val=struc
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceIndex:1
++ strslice ProvenanceIndex:1 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:1
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceIndex
++ c=' ProvenanceIndex'
+++ echo ProvenanceIndex
++ c=ProvenanceIndex
++ i=ProvenanceIndex
++ i=ProvenanceIndex
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceIndex
+ key=ProvenanceIndex
++ strslice ProvenanceIndex:1 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:1
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=1
++ c=' 1'
+++ echo 1
++ c=1
++ i=1
++ i=1
++ unset c
++ [[ -n '' ]]
++ echo 1
+ val=1
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Statistic:null
++ strslice Statistic:null 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ key=Statistic
++ strslice Statistic:null 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=null
++ c=' null'
+++ echo null
++ c=null
++ i=null
++ i=null
++ unset c
++ [[ -n '' ]]
++ echo null
+ val=null
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Type:Map
++ strslice Type:Map 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Type
++ c=' Type'
+++ echo Type
++ c=Type
++ i=Type
++ i=Type
++ unset c
++ [[ -n '' ]]
++ echo Type
+ key=Type
++ strslice Type:Map 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ val=Map
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
++ join_by ', ' '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz"' '"Space":"sub-ADS4107_anatomical"' '"ProvenanceName":"struc"' '"ProvenanceIndex":"1"' '"Statistic":"null"' '"Type":"Map"'
++ local 'd=, '
++ shift
++ echo -n '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz"'
++ shift
++ printf %s ', "Space":"sub-ADS4107_anatomical"' ', "ProvenanceName":"struc"' ', "ProvenanceIndex":"1"' ', "Statistic":"null"' ', "Type":"Map"'
+ multiset='"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"struc", "ProvenanceIndex":"1", "Statistic":"null", "Type":"Map"'
+ json_new=($(echo ${!json}|$JQ_PATH '."'"${object}"'" += { '"${multiset}"' }'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 '."mask" += { "Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"struc", "ProvenanceIndex":"1", "Statistic":"null", "Type":"Map" }'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ eval 'derivatives_floating=${json_new[@]}'
++ derivatives_floating='{ "corticalThickness": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Map" }, "mask": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Map" } }'
+ declared_d[${vname}]=mask
+ derivative segmentation sub-ADS4107_BrainSegmentation
+ local path vname
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ vname=segmentation
+ eval 'segmentation[1]=${path}'
++ segmentation[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ json_multiset derivatives_floating segmentation Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz Space:sub-ADS4107_anatomical ProvenanceName:struc ProvenanceIndex:1 Statistic:null Type:Map
+ local i asgt json_new key val
+ multiset=()
+ local multiset
+ local json=derivatives_floating
+ local object=segmentation
+ shift 2
+ for i in ${@}
+ asgt=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ key=Map
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz'
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ unset c
++ [[ -n '' ]]
++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ val=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Space:sub-ADS4107_anatomical
++ strslice Space:sub-ADS4107_anatomical 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Space
++ c=' Space'
+++ echo Space
++ c=Space
++ i=Space
++ i=Space
++ unset c
++ [[ -n '' ]]
++ echo Space
+ key=Space
++ strslice Space:sub-ADS4107_anatomical 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=sub-ADS4107_anatomical
++ c=' sub-ADS4107_anatomical'
+++ echo sub-ADS4107_anatomical
++ c=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ unset c
++ [[ -n '' ]]
++ echo sub-ADS4107_anatomical
+ val=sub-ADS4107_anatomical
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceName:struc
++ strslice ProvenanceName:struc 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:struc
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceName
++ c=' ProvenanceName'
+++ echo ProvenanceName
++ c=ProvenanceName
++ i=ProvenanceName
++ i=ProvenanceName
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceName
+ key=ProvenanceName
++ strslice ProvenanceName:struc 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:struc
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=struc
++ c=' struc'
+++ echo struc
++ c=struc
++ i=struc
++ i=struc
++ unset c
++ [[ -n '' ]]
++ echo struc
+ val=struc
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceIndex:1
++ strslice ProvenanceIndex:1 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:1
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceIndex
++ c=' ProvenanceIndex'
+++ echo ProvenanceIndex
++ c=ProvenanceIndex
++ i=ProvenanceIndex
++ i=ProvenanceIndex
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceIndex
+ key=ProvenanceIndex
++ strslice ProvenanceIndex:1 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:1
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=1
++ c=' 1'
+++ echo 1
++ c=1
++ i=1
++ i=1
++ unset c
++ [[ -n '' ]]
++ echo 1
+ val=1
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Statistic:null
++ strslice Statistic:null 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ key=Statistic
++ strslice Statistic:null 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=null
++ c=' null'
+++ echo null
++ c=null
++ i=null
++ i=null
++ unset c
++ [[ -n '' ]]
++ echo null
+ val=null
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Type:Map
++ strslice Type:Map 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Type
++ c=' Type'
+++ echo Type
++ c=Type
++ i=Type
++ i=Type
++ unset c
++ [[ -n '' ]]
++ echo Type
+ key=Type
++ strslice Type:Map 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ val=Map
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
++ join_by ', ' '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz"' '"Space":"sub-ADS4107_anatomical"' '"ProvenanceName":"struc"' '"ProvenanceIndex":"1"' '"Statistic":"null"' '"Type":"Map"'
++ local 'd=, '
++ shift
++ echo -n '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz"'
++ shift
++ printf %s ', "Space":"sub-ADS4107_anatomical"' ', "ProvenanceName":"struc"' ', "ProvenanceIndex":"1"' ', "Statistic":"null"' ', "Type":"Map"'
+ multiset='"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"struc", "ProvenanceIndex":"1", "Statistic":"null", "Type":"Map"'
+ json_new=($(echo ${!json}|$JQ_PATH '."'"${object}"'" += { '"${multiset}"' }'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 '."segmentation" += { "Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"struc", "ProvenanceIndex":"1", "Statistic":"null", "Type":"Map" }'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ eval 'derivatives_floating=${json_new[@]}'
++ derivatives_floating='{ "corticalThickness": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Map" }, "mask": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Map" }, "segmentation": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Map" } }'
+ declared_d[${vname}]=segmentation
+ for i in {1..6}
+ output segmentationPosteriors sub-ADS4107_BrainSegmentationPosteriors1.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_BrainSegmentationPosteriors1.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentationPosteriors1.nii.gz
+ eval 'segmentationPosteriors[1]=${path}'
++ segmentationPosteriors[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentationPosteriors1.nii.gz
+ declared_o[${1}]=segmentationPosteriors
+ for i in {1..6}
+ output segmentationPosteriors sub-ADS4107_BrainSegmentationPosteriors2.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_BrainSegmentationPosteriors2.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentationPosteriors2.nii.gz
+ eval 'segmentationPosteriors[1]=${path}'
++ segmentationPosteriors[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentationPosteriors2.nii.gz
+ declared_o[${1}]=segmentationPosteriors
+ for i in {1..6}
+ output segmentationPosteriors sub-ADS4107_BrainSegmentationPosteriors3.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_BrainSegmentationPosteriors3.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentationPosteriors3.nii.gz
+ eval 'segmentationPosteriors[1]=${path}'
++ segmentationPosteriors[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentationPosteriors3.nii.gz
+ declared_o[${1}]=segmentationPosteriors
+ for i in {1..6}
+ output segmentationPosteriors sub-ADS4107_BrainSegmentationPosteriors4.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_BrainSegmentationPosteriors4.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentationPosteriors4.nii.gz
+ eval 'segmentationPosteriors[1]=${path}'
++ segmentationPosteriors[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentationPosteriors4.nii.gz
+ declared_o[${1}]=segmentationPosteriors
+ for i in {1..6}
+ output segmentationPosteriors sub-ADS4107_BrainSegmentationPosteriors5.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_BrainSegmentationPosteriors5.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentationPosteriors5.nii.gz
+ eval 'segmentationPosteriors[1]=${path}'
++ segmentationPosteriors[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentationPosteriors5.nii.gz
+ declared_o[${1}]=segmentationPosteriors
+ for i in {1..6}
+ output segmentationPosteriors sub-ADS4107_BrainSegmentationPosteriors6.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_BrainSegmentationPosteriors6.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentationPosteriors6.nii.gz
+ eval 'segmentationPosteriors[1]=${path}'
++ segmentationPosteriors[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentationPosteriors6.nii.gz
+ declared_o[${1}]=segmentationPosteriors
+ derivative_set corticalThickness Statistic mean
+ dname=corticalThickness
+ shift
++ derivative_floats corticalThickness
++ local dfloat=0
++ dfloat_names=($(json_keys derivatives_floating))
+++ json_keys derivatives_floating
+++ ((  1 == 1  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
+++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+++ ((  1 == 2  ))
++ local dfloat_names
++ for i in "${dfloat_names[@]}"
++ [[ corticalThickness == corticalThickness ]]
++ printf 1
++ return
+ local dfloat=1
+ ((  dfloat == 0  ))
+ ((  dfloat == 1  ))
+ json_set derivatives_floating corticalThickness Statistic mean
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness" += {"Statistic": "mean"}'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'derivatives_floating=${json_new[@]}'
++ derivatives_floating='{ "corticalThickness": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "mean", "Type": "Map" }, "mask": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Map" }, "segmentation": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Map" } }'
+ derivative_set mask Type Mask
+ dname=mask
+ shift
++ derivative_floats mask
++ local dfloat=0
++ dfloat_names=($(json_keys derivatives_floating))
+++ json_keys derivatives_floating
+++ ((  1 == 1  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
+++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+++ ((  1 == 2  ))
++ local dfloat_names
++ for i in "${dfloat_names[@]}"
++ [[ mask == corticalThickness ]]
++ for i in "${dfloat_names[@]}"
++ [[ mask == mask ]]
++ printf 1
++ return
+ local dfloat=1
+ ((  dfloat == 0  ))
+ ((  dfloat == 1  ))
+ json_set derivatives_floating mask Type Mask
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask" += {"Type": "Mask"}'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'derivatives_floating=${json_new[@]}'
++ derivatives_floating='{ "corticalThickness": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "mean", "Type": "Map" }, "mask": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Mask" }, "segmentation": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Map" } }'
+ output struct_std sub-ADS4107_BrainNormalizedToTemplate.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_BrainNormalizedToTemplate.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainNormalizedToTemplate.nii.gz
+ eval 'struct_std[1]=${path}'
++ struct_std[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainNormalizedToTemplate.nii.gz
+ declared_o[${1}]=struct_std
+ output corticalThickness_std sub-ADS4107_CorticalThicknessNormalizedToTemplate.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_CorticalThicknessNormalizedToTemplate.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThicknessNormalizedToTemplate.nii.gz
+ eval 'corticalThickness_std[1]=${path}'
++ corticalThickness_std[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThicknessNormalizedToTemplate.nii.gz
+ declared_o[${1}]=corticalThickness_std
+ output ctroot sub-ADS4107_
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_ == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_
+ eval 'ctroot[1]=${path}'
++ ctroot[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_
+ declared_o[${1}]=ctroot
+ output referenceVolume sub-ADS4107_BrainSegmentation0N4.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_BrainSegmentation0N4.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+ eval 'referenceVolume[1]=${path}'
++ referenceVolume[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+ declared_o[${1}]=referenceVolume
+ output referenceVolumeBrain sub-ADS4107_ExtractedBrain0N4.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_ExtractedBrain0N4.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ eval 'referenceVolumeBrain[1]=${path}'
++ referenceVolumeBrain[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ declared_o[${1}]=referenceVolumeBrain
+ output meanIntensity sub-ADS4107_BrainSegmentation0N4.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_BrainSegmentation0N4.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+ eval 'meanIntensity[1]=${path}'
++ meanIntensity[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+ declared_o[${1}]=meanIntensity
+ output meanIntensityBrain sub-ADS4107_ExtractedBrain0N4.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_ExtractedBrain0N4.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ eval 'meanIntensityBrain[1]=${path}'
++ meanIntensityBrain[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ declared_o[${1}]=meanIntensityBrain
+ output str2stdmask sub-ADS4107_str2stdmask.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_str2stdmask.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_str2stdmask.nii.gz
+ eval 'str2stdmask[1]=${path}'
++ str2stdmask[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_str2stdmask.nii.gz
+ declared_o[${1}]=str2stdmask
+ output xfm_affine sub-ADS4107_SubjectToTemplate0GenericAffine.mat
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_SubjectToTemplate0GenericAffine.mat == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat
+ eval 'xfm_affine[1]=${path}'
++ xfm_affine[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat
+ declared_o[${1}]=xfm_affine
+ output xfm_warp sub-ADS4107_SubjectToTemplate1Warp.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_SubjectToTemplate1Warp.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz
+ eval 'xfm_warp[1]=${path}'
++ xfm_warp[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz
+ declared_o[${1}]=xfm_warp
+ output ixfm_affine sub-ADS4107_TemplateToSubject1GenericAffine.mat
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_TemplateToSubject1GenericAffine.mat == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat
+ eval 'ixfm_affine[1]=${path}'
++ ixfm_affine[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat
+ declared_o[${1}]=ixfm_affine
+ output ixfm_warp sub-ADS4107_TemplateToSubject0Warp.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_TemplateToSubject0Warp.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz
+ eval 'ixfm_warp[1]=${path}'
++ ixfm_warp[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz
+ declared_o[${1}]=ixfm_warp
++ space_get MNI%1x1x1 Priors
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
++ local 'spc={
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ json_get spc MNI%1x1x1 Priors
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."MNI%1x1x1"."Priors"'
+++ echo '{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ eval echo /xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz
+++ echo /xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz
++ ((  3 == 2  ))
+ configure template_priors /xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz
+ eval 'template_priors[1]="${@:2}"'
++ template_priors[1]=/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz
+ declared_c[${1}]=template_priors
++ space_get MNI%1x1x1 MapHead
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
++ local 'spc={
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ json_get spc MNI%1x1x1 MapHead
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."MNI%1x1x1"."MapHead"'
+++ echo '{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ eval echo /xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz
+++ echo /xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz
++ ((  3 == 2  ))
+ configure template_head /xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz
+ eval 'template_head[1]="${@:2}"'
++ template_head[1]=/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz
+ declared_c[${1}]=template_head
++ space_get MNI%1x1x1 Mask
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
++ local 'spc={
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ json_get spc MNI%1x1x1 Mask
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."MNI%1x1x1"."Mask"'
+++ echo '{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ eval echo /xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz
+++ echo /xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz
++ ((  3 == 2  ))
+ configure template_mask /xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz
+ eval 'template_mask[1]="${@:2}"'
++ template_mask[1]=/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz
+ declared_c[${1}]=template_mask
++ space_get MNI%1x1x1 MaskDilated
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
++ local 'spc={
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ json_get spc MNI%1x1x1 MaskDilated
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."MNI%1x1x1"."MaskDilated"'
+++ echo '{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ eval echo /xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz
+++ echo /xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz
++ ((  3 == 2  ))
+ configure template_mask_dil /xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz
+ eval 'template_mask_dil[1]="${@:2}"'
++ template_mask_dil[1]=/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz
+ declared_c[${1}]=template_mask_dil
++ space_get MNI%1x1x1 BrainPrior
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
++ local 'spc={
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ json_get spc MNI%1x1x1 BrainPrior
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."MNI%1x1x1"."BrainPrior"'
+++ echo '{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ eval echo /xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz
+++ echo /xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz
++ ((  3 == 2  ))
+ configure template_brain_prior /xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz
+ eval 'template_brain_prior[1]="${@:2}"'
++ template_brain_prior[1]=/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz
+ declared_c[${1}]=template_brain_prior
+ qc reg_cross_corr regCrossCorr sub-ADS4107_regCrossCorr.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_regCrossCorr.txt
+ eval 'reg_cross_corr[1]=${path}'
++ reg_cross_corr[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_regCrossCorr.txt
+ declared_q[${2}]=reg_cross_corr
+ qc reg_coverage regCoverage sub-ADS4107_regCoverage.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_regCoverage.txt
+ eval 'reg_coverage[1]=${path}'
++ reg_coverage[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_regCoverage.txt
+ declared_q[${2}]=reg_coverage
+ qc reg_jaccard regJaccard sub-ADS4107_regJaccard.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_regJaccard.txt
+ eval 'reg_jaccard[1]=${path}'
++ reg_jaccard[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_regJaccard.txt
+ declared_q[${2}]=reg_jaccard
+ qc reg_dice regDice sub-ADS4107_regDice.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_regDice.txt
+ eval 'reg_dice[1]=${path}'
++ reg_dice[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_regDice.txt
+ declared_q[${2}]=reg_dice
+ input image mask
+ local input input_try type
+ [[ image == image ]]
+ type=image
+ shift
+ [[ mask == 1dim ]]
+ [[ mask == files ]]
+ [[ mask == value ]]
+ [[ -z image ]]
+ ((  1 > 0  ))
+ [[ -z '' ]]
+ input_try='mask[9001]'
+ case $type in
+ is_image
+ [[ -n '' ]]
+ ((  1   >  1   ))
+ break
+ [[ -n '' ]]
+ return 1
+ input image segmentation
+ local input input_try type
+ [[ image == image ]]
+ type=image
+ shift
+ [[ segmentation == 1dim ]]
+ [[ segmentation == files ]]
+ [[ segmentation == value ]]
+ [[ -z image ]]
+ ((  1 > 0  ))
+ [[ -z '' ]]
+ input_try='segmentation[9001]'
+ case $type in
+ is_image
+ [[ -n '' ]]
+ ((  1   >  1   ))
+ break
+ [[ -n '' ]]
+ return 1
+ add_reference template template
+ local image_target image_var
+ image_var=template
+ image_target=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/template.nii.gz
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/template.nii.gz
+ is_image /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ [[ -n /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz ]]
+++ readlink -f /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ ((  1 == 1  ))
+ exec_sys rln /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/template.nii.gz
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo_cmd rln /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/template.nii.gz
+ local 'process_command=rln /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/template.nii.gz'
+ printx /xcpEngine-master/core/CONSOLE_COMMAND
+ local 'file=                             -   -   -
>> ${process_command}'
+ eval 'echo -e "                             -   -   -
>> ${process_command}"'
++ echo -e '                             -   -   -
>> rln /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/template.nii.gz'
                             -   -   -
>> rln /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/template.nii.gz
+ rln /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/template.nii.gz
+ local common
+ p1=(${1//\// })
+ local p1
+ p2=(${2//\// })
+ local p2
+ for f in ${!p1[@]}
+ [[ xcpEngine-master != projects ]]
+ break
+ ((  f == 0  ))
+ ln -sf /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/template.nii.gz
+ return
+ final struct sub-ADS4107_ExtractedBrain0N4
+ local path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ eval 'struct[1]=${path}'
++ struct[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ local 'output=struct[1]'
+ declared_p=struct
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ ((  1 == 1  ))
+ rerun
+ local 'rerun=struc_rerun[1]'
+ ((  0 == 1  ))
+ echo '


struc has already run to completion.
Writing outputs...'
+ completion
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ ((  1 == 1  ))
+ space_set /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json sub-ADS4107_anatomical Map /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ local space_chk space_new space_old spaces spaces_path
+ spaces_path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ shift
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ spaces='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
+ ((  3 == 1  ))
++ json_get '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}' sub-ADS4107_anatomical
++ ((  31 == 3  ))
++ ((  31 == 2  ))
+ space_chk=
+ [[ '' == null ]]
+ json_set spaces sub-ADS4107_anatomical Map /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."sub-ADS4107_anatomical" += {"Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"}'
++ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'spaces=${json_new[@]}'
++ spaces='{ "MNI%1x1x1": { "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz", "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib", "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz", "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz", "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz", "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz", "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz", "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz", "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz" }, "MNI%2x2x2": { "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz", "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz" }, "sub-ADS4107_anatomical": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz" } }'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ json_print spaces
+ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
+ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '}' '}'
+ exec_xcp spaceMetadata -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json -f MNI%1x1x1:/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz -m sub-ADS4107_anatomical:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz -x /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo_cmd '${XCPEDIR}/utils/spaceMetadata' -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json -f MNI%1x1x1:/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz -m sub-ADS4107_anatomical:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz -x /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ local 'process_command=${XCPEDIR}/utils/spaceMetadata -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json -f MNI%1x1x1:/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz -m sub-ADS4107_anatomical:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz -x /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json'
+ printx /xcpEngine-master/core/CONSOLE_COMMAND
+ local 'file=                             -   -   -
>> ${process_command}'
+ eval 'echo -e "                             -   -   -
>> ${process_command}"'
++ echo -e '                             -   -   -
>> ${XCPEDIR}/utils/spaceMetadata -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json -f MNI%1x1x1:/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz -m sub-ADS4107_anatomical:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz -x /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json'
                             -   -   -
>> ${XCPEDIR}/utils/spaceMetadata -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json -f MNI%1x1x1:/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz -m sub-ADS4107_anatomical:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz -x /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ echo_cmd '${XCPEDIR}/utils/spaceMetadata' -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json -f MNI%1x1x1:/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz -m sub-ADS4107_anatomical:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz -x /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ /xcpEngine-master/utils/spaceMetadata -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json -f MNI%1x1x1:/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz -m sub-ADS4107_anatomical:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz -x /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ source /xcpEngine-master/core/constants
++ readonly 'RED=\033[0;31m'
++ RED='\033[0;31m'
++ readonly 'CYA=\033[0;36m'
++ CYA='\033[0;36m'
++ readonly 'LGR=\033[0;37m'
++ LGR='\033[0;37m'
++ readonly 'RCL=\033[0m'
++ RCL='\033[0m'
++ readonly ORIENTATION_ITK=RAI
++ ORIENTATION_ITK=RAI
++ readonly SIGMA=2.35482004503
++ SIGMA=2.35482004503
++ readonly PI=3.14159265359
++ PI=3.14159265359
++ readonly NBASE=2.71828182846
++ NBASE=2.71828182846
++ readonly PHI=1.61803398875
++ PHI=1.61803398875
++ [[ ! -d '' ]]
++ readonly BRAINSPACE=/xcpEngine-master/space
++ BRAINSPACE=/xcpEngine-master/space
++ [[ ! -d '' ]]
++ readonly BRAINATLAS=/xcpEngine-master/atlas
++ BRAINATLAS=/xcpEngine-master/atlas
++ [[ -z /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process ]]
++ unset s d a
++ declare -A s d a
+ source /xcpEngine-master/core/functions/library.sh
++ LIBRARY=/xcpEngine-master/core/functions
++ source /xcpEngine-master/core/functions/abort_stream
++ source /xcpEngine-master/core/functions/abspath
++ source /xcpEngine-master/core/functions/add_reference
++ source /xcpEngine-master/core/functions/apply_exec
++ source /xcpEngine-master/core/functions/arithmetic
++ source /xcpEngine-master/core/functions/assign
++ source /xcpEngine-master/core/functions/atlas
++ source /xcpEngine-master/core/functions/atlas_check
++ source /xcpEngine-master/core/functions/atlas_parse
++ source /xcpEngine-master/core/functions/atlas_set
++ source /xcpEngine-master/core/functions/cleanup
++ source /xcpEngine-master/core/functions/configure
++ source /xcpEngine-master/core/functions/configures
++ source /xcpEngine-master/core/functions/contains
++ source /xcpEngine-master/core/functions/define
++ source /xcpEngine-master/core/functions/derivative
++ source /xcpEngine-master/core/functions/derivative_cxt
++ source /xcpEngine-master/core/functions/derivative_floats
++ source /xcpEngine-master/core/functions/derivative_inherit
++ source /xcpEngine-master/core/functions/derivative_parse
++ source /xcpEngine-master/core/functions/derivative_set
++ source /xcpEngine-master/core/functions/doi2bib
++ source /xcpEngine-master/core/functions/echo_cmd
++ source /xcpEngine-master/core/functions/exec_afni
++ source /xcpEngine-master/core/functions/exec_ants
++ source /xcpEngine-master/core/functions/exec_c3d
++ source /xcpEngine-master/core/functions/exec_fsl
++ source /xcpEngine-master/core/functions/exec_sys
++ source /xcpEngine-master/core/functions/exec_xcp
++ source /xcpEngine-master/core/functions/final
++ source /xcpEngine-master/core/functions/import_image
++ source /xcpEngine-master/core/functions/import_metadata
++ source /xcpEngine-master/core/functions/input
++ source /xcpEngine-master/core/functions/is_1D
++ source /xcpEngine-master/core/functions/is_image
++ source /xcpEngine-master/core/functions/is_integer
++ source /xcpEngine-master/core/functions/is+integer
++ source /xcpEngine-master/core/functions/is_numeric
++ source /xcpEngine-master/core/functions/is+numeric
++ source /xcpEngine-master/core/functions/join_by
++ source /xcpEngine-master/core/functions/json_get
++ source /xcpEngine-master/core/functions/json_get_array
++ source /xcpEngine-master/core/functions/json_keys
++ source /xcpEngine-master/core/functions/json_merge
++ source /xcpEngine-master/core/functions/json_multiset
++ source /xcpEngine-master/core/functions/json_object
++ source /xcpEngine-master/core/functions/json_print
++ source /xcpEngine-master/core/functions/json_rm
++ source /xcpEngine-master/core/functions/json_set
++ source /xcpEngine-master/core/functions/json_set_array
++ source /xcpEngine-master/core/functions/lc_prefix
++ source /xcpEngine-master/core/functions/load_atlas
++ source /xcpEngine-master/core/functions/load_derivatives
++ source /xcpEngine-master/core/functions/matchexact
++ source /xcpEngine-master/core/functions/matching
++ source /xcpEngine-master/core/functions/ninstances
++ source /xcpEngine-master/core/functions/output
++ source /xcpEngine-master/core/functions/printx
++ source /xcpEngine-master/core/functions/proc_afni
++ source /xcpEngine-master/core/functions/proc_ants
++ source /xcpEngine-master/core/functions/proc_c3d
++ source /xcpEngine-master/core/functions/proc_cmd
++ source /xcpEngine-master/core/functions/proc_fsl
++ source /xcpEngine-master/core/functions/proc_xcp
++ source /xcpEngine-master/core/functions/process
++ source /xcpEngine-master/core/functions/processed
++ source /xcpEngine-master/core/functions/qc
++ source /xcpEngine-master/core/functions/quality_metric
++ source /xcpEngine-master/core/functions/repeat
++ source /xcpEngine-master/core/functions/require
++ source /xcpEngine-master/core/functions/rerun
++ source /xcpEngine-master/core/functions/rln
++ source /xcpEngine-master/core/functions/routine
++ source /xcpEngine-master/core/functions/routine_end
++ source /xcpEngine-master/core/functions/set_space
++ source /xcpEngine-master/core/functions/space_get
++ source /xcpEngine-master/core/functions/space_set
++ source /xcpEngine-master/core/functions/strslice
++ source /xcpEngine-master/core/functions/subroutine
++ source /xcpEngine-master/core/functions/subject_parse
++ source /xcpEngine-master/core/functions/transform_set
++ source /xcpEngine-master/core/functions/verbose
++ source /xcpEngine-master/core/functions/warpspace
++ source /xcpEngine-master/core/functions/write_atlas
++ source /xcpEngine-master/core/functions/write_config_safe
++ source /xcpEngine-master/core/functions/write_config
++ source /xcpEngine-master/core/functions/write_derivative
++ source /xcpEngine-master/core/functions/write_output
++ source /xcpEngine-master/core/functions/zscore_image
+ [[ ! -s /xcpEngine-master/thirdparty/jq/jq-linux64 ]]
+ combine_only=0
+ unset sourceSpace
+ declare -A sourceSpace
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ out=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ fixed=(${OPTARG//:/ })
++ eval echo /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ echo /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ is_image /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ [[ -n /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz ]]
+++ readlink -f /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ ((  1 == 1  ))
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ moving=(${OPTARG//:/ })
+ for i in ${moving[1]//,/ }
+ i=(${i//\=/ })
+ [[ -z '' ]]
+ i[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ i[0]=Map
+ sourceSpace[${i[0]}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ source_space_map=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ ((  1 == 1  ))
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ transforms=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ itransforms=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ space=(${OPTARG//,/ })
+ [[ ! -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
+ getopts o:d:m:f:x:i:s:t OPTION
+ [[ -z /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
+ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json != /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
++ eval echo /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ echo /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ fixed1=/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ source_space_map=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ [[ -n '' ]]
+ [[ -n sub-ADS4107_anatomical ]]
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ ((  1 == 1  ))
+ is_image /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ [[ -n /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz ]]
+++ readlink -f /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ ((  1 == 1  ))
+ [[ -z /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz ]]
+ meta=from_custom
+ matchexact /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ local i
+ local match=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ shift
+ [[ -z /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
+ for i in ${@}
+ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json == /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
+ return 0
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
+ subroutine @u.2
+ signpost=@u.2
+ routine_map='
· @u.2'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n '' ]]
+ [[ -n '' ]]
+ verbose
+ [[ -n '' ]]
+ for s in "${space[@]}"
+ subroutine @u.2.1
+ signpost=@u.2.1
+ routine_map='
· @u.2
· @u.2.1'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n '' ]]
+ [[ -n '' ]]
+ verbose
+ [[ -n '' ]]
+ import_metadata /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json to /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ local meta_new meta_floating
+ meta_floating='{}'
+ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json != to ]]
+ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
++ printx /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
++ local 'file={
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  }
}'
++ eval 'echo -e "{
  \"MNI%1x1x1\": {
    \"BrainPrior\": \"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz\",
    \"Citation\": \"/xcpEngine-master/space/MNI/MNI_reference.bib\",
    \"LeftHemisphere\": \"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz\",
    \"Map\": \"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz\",
    \"MapHead\": \"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz\",
    \"Mask\": \"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz\",
    \"MaskDilated\": \"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz\",
    \"Priors\": \"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz\",
    \"RightHemisphere\": \"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz\"
  },
  \"MNI%2x2x2\": {
    \"Map\": \"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz\",
    \"MapHead\": \"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz\"
  },
  \"sub-ADS4107_anatomical\": {
    \"Map\": \"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz\"
  }
}"'
+++ echo -e '{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  }
}'
+ meta_new='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  }
}'
+ [[ -z {
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  }
} ]]
++ json_merge meta_floating meta_new
++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
++ echo '{}' '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '}' '}'
+ meta_floating='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  }
}'
+ meta_new=
+ shift
+ [[ to != to ]]
+ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
++ printx /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
++ local 'file={
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  }
}'
++ eval 'echo -e "{
  \"MNI%1x1x1\": {
    \"BrainPrior\": \"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz\",
    \"Citation\": \"/xcpEngine-master/space/MNI/MNI_reference.bib\",
    \"LeftHemisphere\": \"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz\",
    \"Map\": \"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz\",
    \"MapHead\": \"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz\",
    \"Mask\": \"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz\",
    \"MaskDilated\": \"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz\",
    \"Priors\": \"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz\",
    \"RightHemisphere\": \"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz\"
  },
  \"MNI%2x2x2\": {
    \"Map\": \"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz\",
    \"MapHead\": \"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz\"
  },
  \"sub-ADS4107_anatomical\": {
    \"Map\": \"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz\"
  }
}"'
+++ echo -e '{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  }
}'
+ meta_new='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  }
}'
+ [[ -z {
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  }
} ]]
++ json_merge meta_floating meta_new
++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
++ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '}' '}' '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '}' '}'
+ meta_floating='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  }
}'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ json_print meta_floating
+ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
+ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '}' '}'
+ ((  0 == 1  ))
+ case ${meta} in
+ subroutine @u.4
+ signpost=@u.4
+ routine_map='
· @u.2
· @u.2.1
· @u.4'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n '' ]]
+ [[ -n '' ]]
+ verbose
+ [[ -n '' ]]
+ subroutine @u.5
+ signpost=@u.5
+ routine_map='
· @u.2
· @u.2.1
· @u.4
· @u.5'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n '' ]]
+ [[ -n '' ]]
+ verbose
+ [[ -n '' ]]
+ [[ ! -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json ]]
+ space_set /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json MNI%1x1x1 Map /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ local space_chk space_new space_old spaces spaces_path
+ spaces_path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ shift
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ spaces='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  }
}'
+ ((  3 == 1  ))
++ json_get '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '}' '}' MNI%1x1x1
++ ((  36 == 3  ))
++ ((  36 == 2  ))
+ space_chk=
+ [[ '' == null ]]
+ json_set spaces MNI%1x1x1 Map /xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."MNI%1x1x1" += {"Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz"}'
++ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'spaces=${json_new[@]}'
++ spaces='{ "MNI%1x1x1": { "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz", "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib", "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz", "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz", "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz", "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz", "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz", "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz", "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz" }, "MNI%2x2x2": { "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz", "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz" }, "sub-ADS4107_anatomical": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz" } }'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ json_print spaces
+ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
+ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '}' '}'
+ for i in ${!sourceSpace[@]}
+ space_set /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json sub-ADS4107_anatomical Map /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ local space_chk space_new space_old spaces spaces_path
+ spaces_path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ shift
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ spaces='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  }
}'
+ ((  3 == 1  ))
++ json_get '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '}' '}' sub-ADS4107_anatomical
++ ((  36 == 3  ))
++ ((  36 == 2  ))
+ space_chk=
+ [[ '' == null ]]
+ json_set spaces sub-ADS4107_anatomical Map /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."sub-ADS4107_anatomical" += {"Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"}'
++ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'spaces=${json_new[@]}'
++ spaces='{ "MNI%1x1x1": { "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz", "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib", "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz", "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz", "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz", "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz", "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz", "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz", "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz" }, "MNI%2x2x2": { "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz", "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz" }, "sub-ADS4107_anatomical": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz" } }'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ json_print spaces
+ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
+ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '}' '}'
+ moving[0]=sub-ADS4107_anatomical
+ fixed[0]=MNI
+ transform_set /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json itk:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz sub-ADS4107_anatomical MNI
+ local itk dramms fsl source spaces spaces_path target transform transform_chk
+ itk=TransformANTs
+ fsl=TransformFSL
+ dramms=TransformDRAMMS
+ spaces_path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ shift
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ spaces='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  }
}'
+ transform=($(echo ${1/:/ }))
++ echo itk /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz
+ source=sub-ADS4107_anatomical
+ target=MNI
++ json_get spaces_fixed sub-ADS4107_anatomical:MNI
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"sub-ADS4107_anatomical:MNI":."sub-ADS4107_anatomical:MNI"}'
++ echo ''
+ transform_chk=
+ [[ '' == null ]]
+ json_set_array spaces sub-ADS4107_anatomical:MNI TransformANTs /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz
+ local 'elements=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat","/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz'
+ json_new=($(echo ${!1}|$JQ_PATH '."'"${2}"'" += {"'"${3}"'": [ "'"${elements}"'" ] }'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 '."sub-ADS4107_anatomical:MNI" += {"TransformANTs": [ "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat","/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz" ] }'
++ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'spaces=${json_new[@]}'
++ spaces='{ "MNI%1x1x1": { "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz", "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib", "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz", "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz", "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz", "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz", "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz", "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz", "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz" }, "MNI%2x2x2": { "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz", "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz" }, "sub-ADS4107_anatomical": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz" }, "sub-ADS4107_anatomical:MNI": { "TransformANTs": [ "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat", "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz" ] } }'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ json_print spaces
+ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
+ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '},' '"sub-ADS4107_anatomical:MNI":' '{' '"TransformANTs":' '[' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat",' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz"' ']' '}' '}'
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat ]]
+ subroutine @u.6
+ signpost=@u.6
+ routine_map='
· @u.2
· @u.2.1
· @u.4
· @u.5
· @u.6'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n '' ]]
+ [[ -n '' ]]
+ verbose
+ [[ -n '' ]]
+ transform_set /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json itk:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat MNI sub-ADS4107_anatomical
+ local itk dramms fsl source spaces spaces_path target transform transform_chk
+ itk=TransformANTs
+ fsl=TransformFSL
+ dramms=TransformDRAMMS
+ spaces_path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ shift
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ spaces='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS4107_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"
  },
  "sub-ADS4107_anatomical:MNI": {
    "TransformANTs": [
      "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat",
      "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz"
    ]
  }
}'
+ transform=($(echo ${1/:/ }))
++ echo itk /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat
+ source=MNI
+ target=sub-ADS4107_anatomical
++ json_get spaces_fixed MNI:sub-ADS4107_anatomical
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"MNI:sub-ADS4107_anatomical":."MNI:sub-ADS4107_anatomical"}'
++ echo ''
+ transform_chk=
+ [[ '' == null ]]
+ json_set_array spaces MNI:sub-ADS4107_anatomical TransformANTs /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat
+ local 'elements=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz","/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat'
+ json_new=($(echo ${!1}|$JQ_PATH '."'"${2}"'" += {"'"${3}"'": [ "'"${elements}"'" ] }'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 '."MNI:sub-ADS4107_anatomical" += {"TransformANTs": [ "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz","/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat" ] }'
++ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '},' '"sub-ADS4107_anatomical:MNI":' '{' '"TransformANTs":' '[' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat",' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz"' ']' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'spaces=${json_new[@]}'
++ spaces='{ "MNI%1x1x1": { "BrainPrior": "/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz", "Citation": "/xcpEngine-master/space/MNI/MNI_reference.bib", "LeftHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz", "Map": "/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz", "MapHead": "/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz", "Mask": "/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz", "MaskDilated": "/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz", "Priors": "/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz", "RightHemisphere": "/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz" }, "MNI%2x2x2": { "Map": "/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz", "MapHead": "/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz" }, "sub-ADS4107_anatomical": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz" }, "sub-ADS4107_anatomical:MNI": { "TransformANTs": [ "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat", "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz" ] }, "MNI:sub-ADS4107_anatomical": { "TransformANTs": [ "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz", "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat" ] } }'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+ json_print spaces
+ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
+ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine-master/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine-master/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine-master/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine-master/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS4107_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz"' '},' '"sub-ADS4107_anatomical:MNI":' '{' '"TransformANTs":' '[' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat",' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz"' ']' '},' '"MNI:sub-ADS4107_anatomical":' '{' '"TransformANTs":' '[' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz",' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat"' ']' '}' '}'
+ source /xcpEngine-master/core/auditComplete
++ id_var=(${ids[sub]//,/ })
++ modaudit=3
++ previous=2
++ mapfile subjaudit
++ auditvals=(${subjaudit[1]//,/ })
++ auditvals=(${auditvals[@]:0:$previous} 1 ${auditvals[@]:$modaudit:${#auditvals[@]}})
+++ join_by , sub-ADS4107 1 1 0 0 0 0
+++ local d=,
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s ,1 ,1 ,0 ,0 ,0 ,0
++ subjaudit[1]=sub-ADS4107,1,1,0,0,0,0
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv
++ echo id0,localiser,struc,gmd,jlf,roiquant,qcanat
++ echo sub-ADS4107,1,1,0,0,0,0
+ source /xcpEngine-master/core/updateQuality
++ for i in ${!declared_q[@]}
++ quality_metric regCoverage reg_coverage
++ local 'quality_value_file=reg_coverage[1]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_regCoverage.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ for i in ${!declared_q[@]}
++ quality_metric regCrossCorr reg_cross_corr
++ local 'quality_value_file=reg_cross_corr[1]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_regCrossCorr.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ for i in ${!declared_q[@]}
++ quality_metric regDice reg_dice
++ local 'quality_value_file=reg_dice[1]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_regDice.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ for i in ${!declared_q[@]}
++ quality_metric regJaccard reg_jaccard
++ local 'quality_value_file=reg_jaccard[1]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_regJaccard.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_quality.csv
+++ join_by , id0 regCoverage regCrossCorr regDice regJaccard
+++ local d=,
+++ shift
+++ echo -n id0
+++ shift
+++ printf %s ,regCoverage ,regCrossCorr ,regDice ,regJaccard
++ qvars=id0,regCoverage,regCrossCorr,regDice,regJaccard
+++ join_by , sub-ADS4107 0.9992316 0.9669719 0.9751511 0.9515071
+++ local d=,
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s ,0.9992316 ,0.9669719 ,0.9751511 ,0.9515071
++ qvals=sub-ADS4107,0.9992316,0.9669719,0.9751511,0.9515071
++ echo id0,regCoverage,regCrossCorr,regDice,regJaccard
++ echo sub-ADS4107,0.9992316,0.9669719,0.9751511,0.9515071
+ source /xcpEngine-master/core/moduleEnd
++ for i in ${!declared_p[@]}
++ processed struct
++ local 'processed_p=struct[1]'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
++ ((  1 == 1  ))
++ echo 'struct_space[9001]=sub-ADS4107_anatomical'
++ echo 'struct[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz'
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ exec_sys rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ echo_cmd rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ local 'process_command=rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz'
++ printx /xcpEngine-master/core/CONSOLE_COMMAND
++ local 'file=                             -   -   -
>> ${process_command}'
++ eval 'echo -e "                             -   -   -
>> ${process_command}"'
+++ echo -e '                             -   -   -
>> rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz'
                             -   -   -
>> rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ local common
++ p1=(${1//\// })
++ local p1
++ p2=(${2//\// })
++ local p2
++ for f in ${!p1[@]}
++ [[ projects != projects ]]
++ common=("${common[@]}" "${p1[f]}")
++ for f in ${!p1[@]}
++ [[ adapt_lab != adapt_lab ]]
++ common=("${common[@]}" "${p1[f]}")
++ for f in ${!p1[@]}
++ [[ shared != shared ]]
++ common=("${common[@]}" "${p1[f]}")
++ for f in ${!p1[@]}
++ [[ ADS != ADS ]]
++ common=("${common[@]}" "${p1[f]}")
++ for f in ${!p1[@]}
++ [[ data != data ]]
++ common=("${common[@]}" "${p1[f]}")
++ for f in ${!p1[@]}
++ [[ BIDS_data != BIDS_data ]]
++ common=("${common[@]}" "${p1[f]}")
++ for f in ${!p1[@]}
++ [[ derivatives != derivatives ]]
++ common=("${common[@]}" "${p1[f]}")
++ for f in ${!p1[@]}
++ [[ xcpEngine != xcpEngine ]]
++ common=("${common[@]}" "${p1[f]}")
++ for f in ${!p1[@]}
++ [[ data != data ]]
++ common=("${common[@]}" "${p1[f]}")
++ for f in ${!p1[@]}
++ [[ sub-ADS4107 != sub-ADS4107 ]]
++ common=("${common[@]}" "${p1[f]}")
++ for f in ${!p1[@]}
++ [[ struc != sub-ADS4107.nii.gz ]]
++ break
++ ((  f == 0  ))
+++ arithmetic 11-10-1
+++ local process_command=11-10-1
+++ verbose
+++ [[ -n 3 ]]
+++ ((  3 != 0  ))
+++ eval 'echo -e "                             -   -   -
>> ${process_command}"'
++++ echo -e '                             -   -   -
>> 11-10-1'
                             -   -   -
>> 11-10-1
+++ bc
+++ echo 'scale=20; 11-10-1'
++ local nuniq=0
+++ arithmetic 11-1
+++ local process_command=11-1
+++ verbose
+++ [[ -n 3 ]]
+++ ((  3 != 0  ))
+++ eval 'echo -e "                             -   -   -
>> ${process_command}"'
++++ echo -e '                             -   -   -
>> 11-1'
                             -   -   -
>> 11-1
+++ bc
+++ echo 'scale=20; 11-1'
++ local dividx=10
+++ join_by / projects adapt_lab shared ADS data BIDS_data derivatives xcpEngine data sub-ADS4107
+++ local d=/
+++ shift
+++ echo -n projects
+++ shift
+++ printf %s /adapt_lab /shared /ADS /data /BIDS_data /derivatives /xcpEngine /data /sub-ADS4107
++ local pardir=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
++ local fname=sub-ADS4107.nii.gz
++ cd /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
+++ repeat 0 ../
+++ [[ 0 == 0 ]]
+++ return
+++ join_by / struc sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ local d=/
+++ shift
+++ echo -n struc
+++ shift
+++ printf %s /sub-ADS4107_ExtractedBrain0N4.nii.gz
++ ln -sf struc/sub-ADS4107_ExtractedBrain0N4.nii.gz sub-ADS4107.nii.gz
++ for i in ${!declared_d[@]}
++ write_derivative segmentation
++ local i
++ local dfloat=0
++ local 'derivative=segmentation[1]'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ ((  1 == 1  ))
+++ derivative_floats segmentation
+++ local dfloat=0
+++ dfloat_names=($(json_keys derivatives_floating))
++++ json_keys derivatives_floating
++++ ((  1 == 1  ))
++++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++++ ((  1 == 2  ))
+++ local dfloat_names
+++ for i in "${dfloat_names[@]}"
+++ [[ segmentation == corticalThickness ]]
+++ for i in "${dfloat_names[@]}"
+++ [[ segmentation == mask ]]
+++ for i in "${dfloat_names[@]}"
+++ [[ segmentation == segmentation ]]
+++ printf 1
+++ return
++ dfloat=1
++ ((  dfloat == 0  ))
++ ((  dfloat == 1  ))
+++ json_get derivatives_floating segmentation
+++ ((  2 == 3  ))
+++ ((  2 == 2  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"segmentation":."segmentation"}'
+++ echo '{ "corticalThickness": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "mean", "Type": "Map" }, "mask": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Mask" }, "segmentation": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Map" } }'
++ local 'd_cur={
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "struc",
    "ProvenanceIndex": "1",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ local 'deriv={}'
+++ json_merge deriv d_cur
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{}' '{' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ local 'deriv={
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "struc",
    "ProvenanceIndex": "1",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ json_print deriv
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
++ echo '{' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ echo 'segmentation[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz'
++ for i in ${!declared_d[@]}
++ write_derivative mask
++ local i
++ local dfloat=0
++ local 'derivative=mask[1]'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ ((  1 == 1  ))
+++ derivative_floats mask
+++ local dfloat=0
+++ dfloat_names=($(json_keys derivatives_floating))
++++ json_keys derivatives_floating
++++ ((  1 == 1  ))
++++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++++ ((  1 == 2  ))
+++ local dfloat_names
+++ for i in "${dfloat_names[@]}"
+++ [[ mask == corticalThickness ]]
+++ for i in "${dfloat_names[@]}"
+++ [[ mask == mask ]]
+++ printf 1
+++ return
++ dfloat=1
++ ((  dfloat == 0  ))
++ ((  dfloat == 1  ))
+++ json_get derivatives_floating mask
+++ ((  2 == 3  ))
+++ ((  2 == 2  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"mask":."mask"}'
+++ echo '{ "corticalThickness": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "mean", "Type": "Map" }, "mask": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Mask" }, "segmentation": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Map" } }'
++ local 'd_cur={
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "struc",
    "ProvenanceIndex": "1",
    "Statistic": "null",
    "Type": "Mask"
  }
}'
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ local 'deriv={
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ json_merge deriv d_cur
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}' '{' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Mask"' '}' '}'
++ local 'deriv={
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "struc",
    "ProvenanceIndex": "1",
    "Statistic": "null",
    "Type": "Mask"
  }
}'
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ json_print deriv
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
++ echo '{' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Mask"' '}' '}'
++ echo 'mask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz'
++ for i in ${!declared_d[@]}
++ write_derivative corticalThickness
++ local i
++ local dfloat=0
++ local 'derivative=corticalThickness[1]'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ ((  1 == 1  ))
+++ derivative_floats corticalThickness
+++ local dfloat=0
+++ dfloat_names=($(json_keys derivatives_floating))
++++ json_keys derivatives_floating
++++ ((  1 == 1  ))
++++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++++ ((  1 == 2  ))
+++ local dfloat_names
+++ for i in "${dfloat_names[@]}"
+++ [[ corticalThickness == corticalThickness ]]
+++ printf 1
+++ return
++ dfloat=1
++ ((  dfloat == 0  ))
++ ((  dfloat == 1  ))
+++ json_get derivatives_floating corticalThickness
+++ ((  2 == 3  ))
+++ ((  2 == 2  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"corticalThickness":."corticalThickness"}'
+++ echo '{ "corticalThickness": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "mean", "Type": "Map" }, "mask": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Mask" }, "segmentation": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "struc", "ProvenanceIndex": "1", "Statistic": "null", "Type": "Map" } }'
++ local 'd_cur={
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "struc",
    "ProvenanceIndex": "1",
    "Statistic": "mean",
    "Type": "Map"
  }
}'
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ local 'deriv={
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ json_merge deriv d_cur
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}' '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"mean",' '"Type":' '"Map"' '}' '}'
++ local 'deriv={
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "struc",
    "ProvenanceIndex": "1",
    "Statistic": "mean",
    "Type": "Map"
  }
}'
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ json_print deriv
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
++ echo '{' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"struc",' '"ProvenanceIndex":' '"1",' '"Statistic":' '"mean",' '"Type":' '"Map"' '}' '}'
++ echo 'corticalThickness[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz'
++ for i in ${!declared_o[@]}
++ write_output ixfm_affine
++ local 'output=ixfm_affine[1]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat ]]
++ echo 'ixfm_affine[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat'
++ for i in ${!declared_o[@]}
++ write_output referenceVolumeBrain
++ local 'output=referenceVolumeBrain[1]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz ]]
++ echo 'referenceVolumeBrain[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz'
++ for i in ${!declared_o[@]}
++ write_output struct_std
++ local 'output=struct_std[1]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainNormalizedToTemplate.nii.gz ]]
++ echo 'struct_std[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainNormalizedToTemplate.nii.gz'
++ for i in ${!declared_o[@]}
++ write_output str2stdmask
++ local 'output=str2stdmask[1]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_str2stdmask.nii.gz ]]
++ echo 'str2stdmask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_str2stdmask.nii.gz'
++ for i in ${!declared_o[@]}
++ write_output referenceVolume
++ local 'output=referenceVolume[1]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz ]]
++ echo 'referenceVolume[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz'
++ for i in ${!declared_o[@]}
++ write_output ctroot
++ local 'output=ctroot[1]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ ]]
++ for i in ${!declared_o[@]}
++ write_output meanIntensity
++ local 'output=meanIntensity[1]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz ]]
++ echo 'meanIntensity[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz'
++ for i in ${!declared_o[@]}
++ write_output xfm_affine
++ local 'output=xfm_affine[1]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat ]]
++ echo 'xfm_affine[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat'
++ for i in ${!declared_o[@]}
++ write_output ixfm_warp
++ local 'output=ixfm_warp[1]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz ]]
++ echo 'ixfm_warp[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz'
++ for i in ${!declared_o[@]}
++ write_output xfm_warp
++ local 'output=xfm_warp[1]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz ]]
++ echo 'xfm_warp[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz'
++ for i in ${!declared_o[@]}
++ write_output meanIntensityBrain
++ local 'output=meanIntensityBrain[1]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz ]]
++ echo 'meanIntensityBrain[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz'
++ for i in ${!declared_o[@]}
++ write_output segmentationPosteriors
++ local 'output=segmentationPosteriors[1]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentationPosteriors6.nii.gz ]]
++ for i in ${!declared_o[@]}
++ write_output corticalThickness_std
++ local 'output=corticalThickness_std[1]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThicknessNormalizedToTemplate.nii.gz ]]
++ echo 'corticalThickness_std[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThicknessNormalizedToTemplate.nii.gz'
++ for i in ${!declared_c[@]}
++ write_config template_mask
++ local 'config=template_mask[1]'
++ echo 'template_mask[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz'
++ for i in ${!declared_c[@]}
++ write_config template_brain_prior
++ local 'config=template_brain_prior[1]'
++ echo 'template_brain_prior[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz'
++ for i in ${!declared_c[@]}
++ write_config template_head
++ local 'config=template_head[1]'
++ echo 'template_head[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz'
++ for i in ${!declared_c[@]}
++ write_config template_priors
++ local 'config=template_priors[1]'
++ echo 'template_priors[9001]=/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz'
++ for i in ${!declared_c[@]}
++ write_config template_mask_dil
++ local 'config=template_mask_dil[1]'
++ echo 'template_mask_dil[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz'
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ echo '


Module Workflow Map
····································································
· START
· FINISH
····································································'
++ intermediate=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107~TEMP~
++ cleanup
++ local 'cleanup=struc_cleanup[1]'
++ ((  1 == 1  ))
++ rm -rf /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107~TEMP~.nii.gz
++ echo '

Module complete'
++ exit 0
++ export SHELLOPTS
++ source /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
+++ analysis=struc-ACCELERATOR
+++ design=/projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/anat-Complete+_201903031016.dsn
+++ sequence=anatomical
+++ standard=MNI%1x1x1
+++ pipeline=struc,gmd,jlf,roiquant,qcanat
+++ struc_denoise_anat[1]=1
+++ struc_prior_weight[1]=0.25
+++ struc_posterior_formulation[1]='Socrates[1]'
+++ struc_keepBEImages[1]=0
+++ struc_floating_point[1]=0
+++ struc_random_seed[1]=0
+++ struc_bspline[1]=0
+++ struc_fit[1]=0.3
+++ struc_quick[1]=0
+++ struc_seg_priors[1]=1
+++ struc_rerun[1]=0
+++ struc_cleanup[1]=1
+++ struc_process[1]=ACT
+++ gmd_rerun[2]=0
+++ gmd_cleanup[2]=1
+++ newAntsPath[3]=/data/joy/BBL/applications/ANTsJLF_201603/bin/
+++ jlf_keep_warps[3]=0
+++ jlf_extract[3]=1
+++ jlf_quick[3]=1
+++ jlf_cohort[3]=SexBalanced20
+++ jlf_parallel[3]=none
+++ jlf_rerun[3]=0
+++ jlf_cleanup[3]=1
+++ roiquant_atlas[4]=miccai
+++ roiquant_vol[4]=1
+++ roiquant_rerun[4]=0
+++ roiquant_cleanup[4]=1
+++ qcanat_gm[5]=Y
+++ qcanat_gm_val[5]=2,4
+++ qcanat_wm[5]=Y
+++ qcanat_wm_val[5]=3
+++ qcanat_csf[5]=Y
+++ qcanat_csf_val[5]=1
+++ qcanat_cort[5]=Y
+++ qcanat_cort_val[5]=4
+++ qcanat_rerun[5]=0
+++ qcanat_cleanup[5]=1
+++ space[9001]=sub-ADS4107_anatomical
+++ structural[9001]=sub-ADS4107_anatomical
+++ spaces[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+++ aux_imgs[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+++ atlas[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+++ audit[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv
+++ quality[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_quality.csv
+++ out_super=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data
+++ sub=9001
+++ design[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
+++ prefix[9001]=sub-ADS4107
+++ out[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
+++ ids[9001]=sub-ADS4107
+++ scratch=
+++ img[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+++ subject[0]=sub-ADS4107
+++ out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ template=/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ standard=MNI%1x1x1
+++ img1[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+++ struct_space[9001]=sub-ADS4107_anatomical
+++ struct[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ segmentation[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ mask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ corticalThickness[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ ixfm_affine[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat
+++ referenceVolumeBrain[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ struct_std[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainNormalizedToTemplate.nii.gz
+++ str2stdmask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_str2stdmask.nii.gz
+++ referenceVolume[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+++ meanIntensity[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+++ xfm_affine[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat
+++ ixfm_warp[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz
+++ xfm_warp[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz
+++ meanIntensityBrain[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ corticalThickness_std[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThicknessNormalizedToTemplate.nii.gz
+++ template_mask[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz
+++ template_brain_prior[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz
+++ template_head[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz
+++ template_priors[9001]=/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz
+++ template_mask_dil[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz
++ design=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
++ prefix=sub-ADS4107
++ out=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
++ source /xcpEngine-master/core/defineLogs
+++ [[ -z '' ]]
+++ export log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG
+++ log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG
+++ export log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process
+++ log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process
+++ [[ -n gmd ]]
+++ [[ -n /xcpEngine-master/core/CONSOLE_MODULE_AFGR ]]
+++ echo '

'
+++ printx /xcpEngine-master/core/CONSOLE_MODULE_AFGR
+++ local 'file=###################################################################
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
#                                                                 #
#  ☭$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})☭  #
#                                                                 #
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
###################################################################'
+++ eval 'echo -e "###################################################################
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
#                                                                 #
#  ☭$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})☭  #
#                                                                 #
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
###################################################################"'
+++++ /xcpEngine-master/core/padAndCentreString 59 GREY MATTER DENSITY MODULE
+ length=59
+ shift 1
+ string='GREY MATTER DENSITY MODULE'
+ pad=33
+ pad=16
+++ seq 1 16
++ printf '%.0s ' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
+ pad='                '
+ string='                GREY MATTER DENSITY MODULE                '
+ ((  58 < 59  ))
+ string='                GREY MATTER DENSITY MODULE                 '
+ printf '                GREY MATTER DENSITY MODULE                 '
++++ echo -e '###################################################################
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
#                                                                 #
#  ☭                GREY MATTER DENSITY MODULE                 ☭  #
#                                                                 #
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
###################################################################'
+++ echo '

'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
++ ((  1 == 1  ))
++ ((  0 == 1  ))
++ outdir=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd
++ [[ ! -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd ]]
++ echo '


[I][/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz]
[O][/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd]'
++ [[ -n '' ]]
++ intermediate=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107~TEMP~
++ intermediate_root=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107~TEMP~
++ img_raw=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ img=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ mapfile quality_lines
++ qvars=(${quality_lines[0]//,/ })
++ qvals=(${quality_lines[1]//,/ })
++ printx /xcpEngine-master/core/DESIGN_MODULE_OUTPUT
++ local 'file=
# ··· outputs from ${mod_name}[${cxt}] ··· #'
++ eval 'echo -e "
# ··· outputs from ${mod_name}[${cxt}] ··· #"'
+++ echo -e '
# ··· outputs from GREY MATTER DENSITY MODULE[2] ··· #'
++ export 'derivatives_floating={}'
++ derivatives_floating='{}'
++ declare -A declared_d declared_o declared_c declared_s declared_q
++ routine_map='· START'
++ rerun
++ local 'rerun=gmd_rerun[2]'
++ ((  0 == 1  ))
+ derivative probabilityCSF sub-ADS4107_probabilityCSF
+ local path vname
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ vname=probabilityCSF
+ eval 'probabilityCSF[2]=${path}'
++ probabilityCSF[2]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ json_multiset derivatives_floating probabilityCSF Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz Space:sub-ADS4107_anatomical ProvenanceName:gmd ProvenanceIndex:2 Statistic:null Type:Map
+ local i asgt json_new key val
+ multiset=()
+ local multiset
+ local json=derivatives_floating
+ local object=probabilityCSF
+ shift 2
+ for i in ${@}
+ asgt=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ key=Map
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz'
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ unset c
++ [[ -n '' ]]
++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ val=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Space:sub-ADS4107_anatomical
++ strslice Space:sub-ADS4107_anatomical 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Space
++ c=' Space'
+++ echo Space
++ c=Space
++ i=Space
++ i=Space
++ unset c
++ [[ -n '' ]]
++ echo Space
+ key=Space
++ strslice Space:sub-ADS4107_anatomical 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=sub-ADS4107_anatomical
++ c=' sub-ADS4107_anatomical'
+++ echo sub-ADS4107_anatomical
++ c=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ unset c
++ [[ -n '' ]]
++ echo sub-ADS4107_anatomical
+ val=sub-ADS4107_anatomical
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceName:gmd
++ strslice ProvenanceName:gmd 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:gmd
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceName
++ c=' ProvenanceName'
+++ echo ProvenanceName
++ c=ProvenanceName
++ i=ProvenanceName
++ i=ProvenanceName
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceName
+ key=ProvenanceName
++ strslice ProvenanceName:gmd 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:gmd
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=gmd
++ c=' gmd'
+++ echo gmd
++ c=gmd
++ i=gmd
++ i=gmd
++ unset c
++ [[ -n '' ]]
++ echo gmd
+ val=gmd
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceIndex:2
++ strslice ProvenanceIndex:2 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:2
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceIndex
++ c=' ProvenanceIndex'
+++ echo ProvenanceIndex
++ c=ProvenanceIndex
++ i=ProvenanceIndex
++ i=ProvenanceIndex
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceIndex
+ key=ProvenanceIndex
++ strslice ProvenanceIndex:2 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:2
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=2
++ c=' 2'
+++ echo 2
++ c=2
++ i=2
++ i=2
++ unset c
++ [[ -n '' ]]
++ echo 2
+ val=2
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Statistic:null
++ strslice Statistic:null 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ key=Statistic
++ strslice Statistic:null 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=null
++ c=' null'
+++ echo null
++ c=null
++ i=null
++ i=null
++ unset c
++ [[ -n '' ]]
++ echo null
+ val=null
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Type:Map
++ strslice Type:Map 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Type
++ c=' Type'
+++ echo Type
++ c=Type
++ i=Type
++ i=Type
++ unset c
++ [[ -n '' ]]
++ echo Type
+ key=Type
++ strslice Type:Map 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ val=Map
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
++ join_by ', ' '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz"' '"Space":"sub-ADS4107_anatomical"' '"ProvenanceName":"gmd"' '"ProvenanceIndex":"2"' '"Statistic":"null"' '"Type":"Map"'
++ local 'd=, '
++ shift
++ echo -n '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz"'
++ shift
++ printf %s ', "Space":"sub-ADS4107_anatomical"' ', "ProvenanceName":"gmd"' ', "ProvenanceIndex":"2"' ', "Statistic":"null"' ', "Type":"Map"'
+ multiset='"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"gmd", "ProvenanceIndex":"2", "Statistic":"null", "Type":"Map"'
+ json_new=($(echo ${!json}|$JQ_PATH '."'"${object}"'" += { '"${multiset}"' }'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 '."probabilityCSF" += { "Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"gmd", "ProvenanceIndex":"2", "Statistic":"null", "Type":"Map" }'
++ echo '{}'
+ eval 'derivatives_floating=${json_new[@]}'
++ derivatives_floating='{ "probabilityCSF": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" } }'
+ declared_d[${vname}]=probabilityCSF
+ derivative probabilityGM sub-ADS4107_probabilityGM
+ local path vname
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ vname=probabilityGM
+ eval 'probabilityGM[2]=${path}'
++ probabilityGM[2]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ json_multiset derivatives_floating probabilityGM Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz Space:sub-ADS4107_anatomical ProvenanceName:gmd ProvenanceIndex:2 Statistic:null Type:Map
+ local i asgt json_new key val
+ multiset=()
+ local multiset
+ local json=derivatives_floating
+ local object=probabilityGM
+ shift 2
+ for i in ${@}
+ asgt=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ key=Map
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz'
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ unset c
++ [[ -n '' ]]
++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ val=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Space:sub-ADS4107_anatomical
++ strslice Space:sub-ADS4107_anatomical 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Space
++ c=' Space'
+++ echo Space
++ c=Space
++ i=Space
++ i=Space
++ unset c
++ [[ -n '' ]]
++ echo Space
+ key=Space
++ strslice Space:sub-ADS4107_anatomical 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=sub-ADS4107_anatomical
++ c=' sub-ADS4107_anatomical'
+++ echo sub-ADS4107_anatomical
++ c=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ unset c
++ [[ -n '' ]]
++ echo sub-ADS4107_anatomical
+ val=sub-ADS4107_anatomical
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceName:gmd
++ strslice ProvenanceName:gmd 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:gmd
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceName
++ c=' ProvenanceName'
+++ echo ProvenanceName
++ c=ProvenanceName
++ i=ProvenanceName
++ i=ProvenanceName
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceName
+ key=ProvenanceName
++ strslice ProvenanceName:gmd 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:gmd
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=gmd
++ c=' gmd'
+++ echo gmd
++ c=gmd
++ i=gmd
++ i=gmd
++ unset c
++ [[ -n '' ]]
++ echo gmd
+ val=gmd
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceIndex:2
++ strslice ProvenanceIndex:2 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:2
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceIndex
++ c=' ProvenanceIndex'
+++ echo ProvenanceIndex
++ c=ProvenanceIndex
++ i=ProvenanceIndex
++ i=ProvenanceIndex
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceIndex
+ key=ProvenanceIndex
++ strslice ProvenanceIndex:2 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:2
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=2
++ c=' 2'
+++ echo 2
++ c=2
++ i=2
++ i=2
++ unset c
++ [[ -n '' ]]
++ echo 2
+ val=2
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Statistic:null
++ strslice Statistic:null 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ key=Statistic
++ strslice Statistic:null 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=null
++ c=' null'
+++ echo null
++ c=null
++ i=null
++ i=null
++ unset c
++ [[ -n '' ]]
++ echo null
+ val=null
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Type:Map
++ strslice Type:Map 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Type
++ c=' Type'
+++ echo Type
++ c=Type
++ i=Type
++ i=Type
++ unset c
++ [[ -n '' ]]
++ echo Type
+ key=Type
++ strslice Type:Map 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ val=Map
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
++ join_by ', ' '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz"' '"Space":"sub-ADS4107_anatomical"' '"ProvenanceName":"gmd"' '"ProvenanceIndex":"2"' '"Statistic":"null"' '"Type":"Map"'
++ local 'd=, '
++ shift
++ echo -n '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz"'
++ shift
++ printf %s ', "Space":"sub-ADS4107_anatomical"' ', "ProvenanceName":"gmd"' ', "ProvenanceIndex":"2"' ', "Statistic":"null"' ', "Type":"Map"'
+ multiset='"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"gmd", "ProvenanceIndex":"2", "Statistic":"null", "Type":"Map"'
+ json_new=($(echo ${!json}|$JQ_PATH '."'"${object}"'" += { '"${multiset}"' }'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 '."probabilityGM" += { "Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"gmd", "ProvenanceIndex":"2", "Statistic":"null", "Type":"Map" }'
++ echo '{' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ eval 'derivatives_floating=${json_new[@]}'
++ derivatives_floating='{ "probabilityCSF": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityGM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" } }'
+ declared_d[${vname}]=probabilityGM
+ derivative probabilityWM sub-ADS4107_probabilityWM
+ local path vname
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ vname=probabilityWM
+ eval 'probabilityWM[2]=${path}'
++ probabilityWM[2]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ json_multiset derivatives_floating probabilityWM Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz Space:sub-ADS4107_anatomical ProvenanceName:gmd ProvenanceIndex:2 Statistic:null Type:Map
+ local i asgt json_new key val
+ multiset=()
+ local multiset
+ local json=derivatives_floating
+ local object=probabilityWM
+ shift 2
+ for i in ${@}
+ asgt=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ key=Map
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz'
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ unset c
++ [[ -n '' ]]
++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ val=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Space:sub-ADS4107_anatomical
++ strslice Space:sub-ADS4107_anatomical 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Space
++ c=' Space'
+++ echo Space
++ c=Space
++ i=Space
++ i=Space
++ unset c
++ [[ -n '' ]]
++ echo Space
+ key=Space
++ strslice Space:sub-ADS4107_anatomical 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=sub-ADS4107_anatomical
++ c=' sub-ADS4107_anatomical'
+++ echo sub-ADS4107_anatomical
++ c=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ unset c
++ [[ -n '' ]]
++ echo sub-ADS4107_anatomical
+ val=sub-ADS4107_anatomical
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceName:gmd
++ strslice ProvenanceName:gmd 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:gmd
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceName
++ c=' ProvenanceName'
+++ echo ProvenanceName
++ c=ProvenanceName
++ i=ProvenanceName
++ i=ProvenanceName
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceName
+ key=ProvenanceName
++ strslice ProvenanceName:gmd 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:gmd
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=gmd
++ c=' gmd'
+++ echo gmd
++ c=gmd
++ i=gmd
++ i=gmd
++ unset c
++ [[ -n '' ]]
++ echo gmd
+ val=gmd
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceIndex:2
++ strslice ProvenanceIndex:2 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:2
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceIndex
++ c=' ProvenanceIndex'
+++ echo ProvenanceIndex
++ c=ProvenanceIndex
++ i=ProvenanceIndex
++ i=ProvenanceIndex
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceIndex
+ key=ProvenanceIndex
++ strslice ProvenanceIndex:2 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:2
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=2
++ c=' 2'
+++ echo 2
++ c=2
++ i=2
++ i=2
++ unset c
++ [[ -n '' ]]
++ echo 2
+ val=2
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Statistic:null
++ strslice Statistic:null 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ key=Statistic
++ strslice Statistic:null 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=null
++ c=' null'
+++ echo null
++ c=null
++ i=null
++ i=null
++ unset c
++ [[ -n '' ]]
++ echo null
+ val=null
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Type:Map
++ strslice Type:Map 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Type
++ c=' Type'
+++ echo Type
++ c=Type
++ i=Type
++ i=Type
++ unset c
++ [[ -n '' ]]
++ echo Type
+ key=Type
++ strslice Type:Map 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ val=Map
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
++ join_by ', ' '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz"' '"Space":"sub-ADS4107_anatomical"' '"ProvenanceName":"gmd"' '"ProvenanceIndex":"2"' '"Statistic":"null"' '"Type":"Map"'
++ local 'd=, '
++ shift
++ echo -n '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz"'
++ shift
++ printf %s ', "Space":"sub-ADS4107_anatomical"' ', "ProvenanceName":"gmd"' ', "ProvenanceIndex":"2"' ', "Statistic":"null"' ', "Type":"Map"'
+ multiset='"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"gmd", "ProvenanceIndex":"2", "Statistic":"null", "Type":"Map"'
+ json_new=($(echo ${!json}|$JQ_PATH '."'"${object}"'" += { '"${multiset}"' }'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 '."probabilityWM" += { "Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"gmd", "ProvenanceIndex":"2", "Statistic":"null", "Type":"Map" }'
++ echo '{' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ eval 'derivatives_floating=${json_new[@]}'
++ derivatives_floating='{ "probabilityCSF": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityGM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityWM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" } }'
+ declared_d[${vname}]=probabilityWM
+ derivative segmentation3class sub-ADS4107_segmentation3class
+ local path vname
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ vname=segmentation3class
+ eval 'segmentation3class[2]=${path}'
++ segmentation3class[2]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ json_multiset derivatives_floating segmentation3class Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz Space:sub-ADS4107_anatomical ProvenanceName:gmd ProvenanceIndex:2 Statistic:null Type:Map
+ local i asgt json_new key val
+ multiset=()
+ local multiset
+ local json=derivatives_floating
+ local object=segmentation3class
+ shift 2
+ for i in ${@}
+ asgt=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ key=Map
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz'
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ unset c
++ [[ -n '' ]]
++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ val=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Space:sub-ADS4107_anatomical
++ strslice Space:sub-ADS4107_anatomical 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Space
++ c=' Space'
+++ echo Space
++ c=Space
++ i=Space
++ i=Space
++ unset c
++ [[ -n '' ]]
++ echo Space
+ key=Space
++ strslice Space:sub-ADS4107_anatomical 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=sub-ADS4107_anatomical
++ c=' sub-ADS4107_anatomical'
+++ echo sub-ADS4107_anatomical
++ c=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ unset c
++ [[ -n '' ]]
++ echo sub-ADS4107_anatomical
+ val=sub-ADS4107_anatomical
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceName:gmd
++ strslice ProvenanceName:gmd 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:gmd
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceName
++ c=' ProvenanceName'
+++ echo ProvenanceName
++ c=ProvenanceName
++ i=ProvenanceName
++ i=ProvenanceName
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceName
+ key=ProvenanceName
++ strslice ProvenanceName:gmd 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:gmd
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=gmd
++ c=' gmd'
+++ echo gmd
++ c=gmd
++ i=gmd
++ i=gmd
++ unset c
++ [[ -n '' ]]
++ echo gmd
+ val=gmd
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceIndex:2
++ strslice ProvenanceIndex:2 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:2
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceIndex
++ c=' ProvenanceIndex'
+++ echo ProvenanceIndex
++ c=ProvenanceIndex
++ i=ProvenanceIndex
++ i=ProvenanceIndex
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceIndex
+ key=ProvenanceIndex
++ strslice ProvenanceIndex:2 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:2
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=2
++ c=' 2'
+++ echo 2
++ c=2
++ i=2
++ i=2
++ unset c
++ [[ -n '' ]]
++ echo 2
+ val=2
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Statistic:null
++ strslice Statistic:null 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ key=Statistic
++ strslice Statistic:null 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=null
++ c=' null'
+++ echo null
++ c=null
++ i=null
++ i=null
++ unset c
++ [[ -n '' ]]
++ echo null
+ val=null
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Type:Map
++ strslice Type:Map 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Type
++ c=' Type'
+++ echo Type
++ c=Type
++ i=Type
++ i=Type
++ unset c
++ [[ -n '' ]]
++ echo Type
+ key=Type
++ strslice Type:Map 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ val=Map
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
++ join_by ', ' '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz"' '"Space":"sub-ADS4107_anatomical"' '"ProvenanceName":"gmd"' '"ProvenanceIndex":"2"' '"Statistic":"null"' '"Type":"Map"'
++ local 'd=, '
++ shift
++ echo -n '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz"'
++ shift
++ printf %s ', "Space":"sub-ADS4107_anatomical"' ', "ProvenanceName":"gmd"' ', "ProvenanceIndex":"2"' ', "Statistic":"null"' ', "Type":"Map"'
+ multiset='"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"gmd", "ProvenanceIndex":"2", "Statistic":"null", "Type":"Map"'
+ json_new=($(echo ${!json}|$JQ_PATH '."'"${object}"'" += { '"${multiset}"' }'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 '."segmentation3class" += { "Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"gmd", "ProvenanceIndex":"2", "Statistic":"null", "Type":"Map" }'
++ echo '{' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ eval 'derivatives_floating=${json_new[@]}'
++ derivatives_floating='{ "probabilityCSF": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityGM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityWM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "segmentation3class": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" } }'
+ declared_d[${vname}]=segmentation3class
+ derivative gmd sub-ADS4107_gmd
+ local path vname
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ vname=gmd
+ eval 'gmd[2]=${path}'
++ gmd[2]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ json_multiset derivatives_floating gmd Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz Space:sub-ADS4107_anatomical ProvenanceName:gmd ProvenanceIndex:2 Statistic:null Type:Map
+ local i asgt json_new key val
+ multiset=()
+ local multiset
+ local json=derivatives_floating
+ local object=gmd
+ shift 2
+ for i in ${@}
+ asgt=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ key=Map
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz'
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ unset c
++ [[ -n '' ]]
++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ val=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Space:sub-ADS4107_anatomical
++ strslice Space:sub-ADS4107_anatomical 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Space
++ c=' Space'
+++ echo Space
++ c=Space
++ i=Space
++ i=Space
++ unset c
++ [[ -n '' ]]
++ echo Space
+ key=Space
++ strslice Space:sub-ADS4107_anatomical 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=sub-ADS4107_anatomical
++ c=' sub-ADS4107_anatomical'
+++ echo sub-ADS4107_anatomical
++ c=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ unset c
++ [[ -n '' ]]
++ echo sub-ADS4107_anatomical
+ val=sub-ADS4107_anatomical
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceName:gmd
++ strslice ProvenanceName:gmd 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:gmd
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceName
++ c=' ProvenanceName'
+++ echo ProvenanceName
++ c=ProvenanceName
++ i=ProvenanceName
++ i=ProvenanceName
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceName
+ key=ProvenanceName
++ strslice ProvenanceName:gmd 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:gmd
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=gmd
++ c=' gmd'
+++ echo gmd
++ c=gmd
++ i=gmd
++ i=gmd
++ unset c
++ [[ -n '' ]]
++ echo gmd
+ val=gmd
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceIndex:2
++ strslice ProvenanceIndex:2 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:2
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceIndex
++ c=' ProvenanceIndex'
+++ echo ProvenanceIndex
++ c=ProvenanceIndex
++ i=ProvenanceIndex
++ i=ProvenanceIndex
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceIndex
+ key=ProvenanceIndex
++ strslice ProvenanceIndex:2 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:2
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=2
++ c=' 2'
+++ echo 2
++ c=2
++ i=2
++ i=2
++ unset c
++ [[ -n '' ]]
++ echo 2
+ val=2
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Statistic:null
++ strslice Statistic:null 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ key=Statistic
++ strslice Statistic:null 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=null
++ c=' null'
+++ echo null
++ c=null
++ i=null
++ i=null
++ unset c
++ [[ -n '' ]]
++ echo null
+ val=null
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Type:Map
++ strslice Type:Map 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Type
++ c=' Type'
+++ echo Type
++ c=Type
++ i=Type
++ i=Type
++ unset c
++ [[ -n '' ]]
++ echo Type
+ key=Type
++ strslice Type:Map 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ val=Map
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
++ join_by ', ' '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz"' '"Space":"sub-ADS4107_anatomical"' '"ProvenanceName":"gmd"' '"ProvenanceIndex":"2"' '"Statistic":"null"' '"Type":"Map"'
++ local 'd=, '
++ shift
++ echo -n '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz"'
++ shift
++ printf %s ', "Space":"sub-ADS4107_anatomical"' ', "ProvenanceName":"gmd"' ', "ProvenanceIndex":"2"' ', "Statistic":"null"' ', "Type":"Map"'
+ multiset='"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"gmd", "ProvenanceIndex":"2", "Statistic":"null", "Type":"Map"'
+ json_new=($(echo ${!json}|$JQ_PATH '."'"${object}"'" += { '"${multiset}"' }'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 '."gmd" += { "Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"gmd", "ProvenanceIndex":"2", "Statistic":"null", "Type":"Map" }'
++ echo '{' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ eval 'derivatives_floating=${json_new[@]}'
++ derivatives_floating='{ "probabilityCSF": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityGM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityWM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "segmentation3class": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "gmd": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" } }'
+ declared_d[${vname}]=gmd
+ derivative_set gmd Statistic mean
+ dname=gmd
+ shift
++ derivative_floats gmd
++ local dfloat=0
++ dfloat_names=($(json_keys derivatives_floating))
+++ json_keys derivatives_floating
+++ ((  1 == 1  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
+++ echo '{' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+++ ((  1 == 2  ))
++ local dfloat_names
++ for i in "${dfloat_names[@]}"
++ [[ gmd == gmd ]]
++ printf 1
++ return
+ local dfloat=1
+ ((  dfloat == 0  ))
+ ((  dfloat == 1  ))
+ json_set derivatives_floating gmd Statistic mean
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd" += {"Statistic": "mean"}'
++ echo '{' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'derivatives_floating=${json_new[@]}'
++ derivatives_floating='{ "probabilityCSF": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityGM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityWM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "segmentation3class": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "gmd": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "mean", "Type": "Map" } }'
+ qc mean_gmd meanGMD sub-ADS4107_mean_gmd
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_mean_gmd
+ eval 'mean_gmd[2]=${path}'
++ mean_gmd[2]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_mean_gmd
+ declared_q[${2}]=mean_gmd
+ add_reference 'img[9001]' sub-ADS4107_raw
+ local image_target image_var
+ image_var='img[9001]'
+ image_target=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_raw.nii.gz
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_raw.nii.gz
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+ ((  1 == 1  ))
+ exec_sys rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_raw.nii.gz
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo_cmd rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_raw.nii.gz
+ local 'process_command=rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_raw.nii.gz'
+ printx /xcpEngine-master/core/CONSOLE_COMMAND
+ local 'file=                             -   -   -
>> ${process_command}'
+ eval 'echo -e "                             -   -   -
>> ${process_command}"'
++ echo -e '                             -   -   -
>> rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_raw.nii.gz'
                             -   -   -
>> rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_raw.nii.gz
+ rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_raw.nii.gz
+ local common
+ p1=(${1//\// })
+ local p1
+ p2=(${2//\// })
+ local p2
+ for f in ${!p1[@]}
+ [[ projects != projects ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ adapt_lab != adapt_lab ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ shared != shared ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ ADS != ADS ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ data != data ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ BIDS_data != BIDS_data ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ derivatives != derivatives ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ fmriprep != xcpEngine ]]
+ break
+ ((  f == 0  ))
++ arithmetic 12-7-1
++ local process_command=12-7-1
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ eval 'echo -e "                             -   -   -
>> ${process_command}"'
+++ echo -e '                             -   -   -
>> 12-7-1'
                             -   -   -
>> 12-7-1
++ bc
++ echo 'scale=20; 12-7-1'
+ local nuniq=4
++ arithmetic 12-1
++ local process_command=12-1
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ eval 'echo -e "                             -   -   -
>> ${process_command}"'
+++ echo -e '                             -   -   -
>> 12-1'
                             -   -   -
>> 12-1
++ bc
++ echo 'scale=20; 12-1'
+ local dividx=11
++ join_by / projects adapt_lab shared ADS data BIDS_data derivatives xcpEngine data sub-ADS4107 gmd
++ local d=/
++ shift
++ echo -n projects
++ shift
++ printf %s /adapt_lab /shared /ADS /data /BIDS_data /derivatives /xcpEngine /data /sub-ADS4107 /gmd
+ local pardir=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd
+ local fname=sub-ADS4107_raw.nii.gz
+ cd /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd
++ repeat 4 ../
++ [[ 4 == 0 ]]
+++ eval echo '{1..4}'
++++ echo 1 2 3 4
++ local 'ct=1 2 3 4'
++ shift
++ local pattern=../
++ printf ../%.0s 1 2 3 4
++ join_by / fmriprep sub-ADS4107 anat sub-ADS4107_desc-preproc_T1w.nii.gz
++ local d=/
++ shift
++ echo -n fmriprep
++ shift
++ printf %s /sub-ADS4107 /anat /sub-ADS4107_desc-preproc_T1w.nii.gz
+ ln -sf ../../../../fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz sub-ADS4107_raw.nii.gz
+ require image mask
+ local 'imported=mask[2]'
+ unset 'mask[2]'
+ input image mask
+ local input input_try type
+ [[ image == image ]]
+ type=image
+ shift
+ [[ mask == 1dim ]]
+ [[ mask == files ]]
+ [[ mask == value ]]
+ [[ -z image ]]
+ ((  1 > 0  ))
+ [[ -z '' ]]
+ input_try='mask[9001]'
+ case $type in
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ ((  1 == 1  ))
+ input=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ ((  1   >  1   ))
+ break
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz ]]
+ configure mask /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ eval 'mask[2]="${@:2}"'
++ mask[2]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ declared_c[${1}]=mask
+ [[ -z /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz ]]
+ routine @1 Computing 3-class segmentation
+ signpost=@1
+ routine_map='· START
· @1'
+ shift
+ routine_description='Computing 3-class segmentation'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1 '
+ [[ -n Computing 3-class segmentation ]]
+ eval 'echo -e "


Current processing step:
${vid}${routine_description}
····································································"'
++ echo -e '


Current processing step:
@1 Computing 3-class segmentation
····································································'



Current processing step:
@1 Computing 3-class segmentation
····································································
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ ((  1 == 1  ))
+ rerun
+ local 'rerun=gmd_rerun[2]'
+ ((  0 == 1  ))
+ subroutine @1.5 GMD computed
+ signpost=@1.5
+ routine_map='· START
· @1
· @1.5'
+ shift
+ local 'subroutine_description=GMD computed'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.5 '
+ [[ -n GMD computed ]]
+ echo '· @1.5 GMD computed'
· @1.5 GMD computed
+ routine_end
+ [[ -n Computing 3-class segmentation ]]
+ eval 'echo -e "····································································
Processing step complete:
${routine_description}"'
++ echo -e '····································································
Processing step complete:
Computing 3-class segmentation'
+ unset routine_description
+ routine @2 Mapping grey matter density
+ signpost=@2
+ routine_map='· START
· @1
· @1.5
· @2'
+ shift
+ routine_description='Mapping grey matter density'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@2 '
+ [[ -n Mapping grey matter density ]]
+ eval 'echo -e "


Current processing step:
${vid}${routine_description}
····································································"'
++ echo -e '


Current processing step:
@2 Mapping grey matter density
····································································'



Current processing step:
@2 Mapping grey matter density
····································································
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ ((  1 == 1  ))
+ rerun
+ local 'rerun=gmd_rerun[2]'
+ ((  0 == 1  ))
+ subroutine @2.3 GMD already computed
+ signpost=@2.3
+ routine_map='· START
· @1
· @1.5
· @2
· @2.3'
+ shift
+ local 'subroutine_description=GMD already computed'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@2.3 '
+ [[ -n GMD already computed ]]
+ echo '· @2.3 GMD already computed'
· @2.3 GMD already computed
+ routine_end
+ [[ -n Mapping grey matter density ]]
+ eval 'echo -e "····································································
Processing step complete:
${routine_description}"'
++ echo -e '····································································
Processing step complete:
Mapping grey matter density'
+ unset routine_description
+ completion
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ ((  1 == 1  ))
+ source /xcpEngine-master/core/auditComplete
++ id_var=(${ids[sub]//,/ })
++ modaudit=4
++ previous=3
++ mapfile subjaudit
++ auditvals=(${subjaudit[1]//,/ })
++ auditvals=(${auditvals[@]:0:$previous} 1 ${auditvals[@]:$modaudit:${#auditvals[@]}})
+++ join_by , sub-ADS4107 1 1 1 0 0 0
+++ local d=,
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s ,1 ,1 ,1 ,0 ,0 ,0
++ subjaudit[1]=sub-ADS4107,1,1,1,0,0,0
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv
++ echo id0,localiser,struc,gmd,jlf,roiquant,qcanat
++ echo sub-ADS4107,1,1,1,0,0,0
+ source /xcpEngine-master/core/updateQuality
++ for i in ${!declared_q[@]}
++ quality_metric meanGMD mean_gmd
++ local 'quality_value_file=mean_gmd[2]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_mean_gmd ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_quality.csv
+++ join_by , id0 regCoverage regCrossCorr regDice regJaccard meanGMD
+++ local d=,
+++ shift
+++ echo -n id0
+++ shift
+++ printf %s ,regCoverage ,regCrossCorr ,regDice ,regJaccard ,meanGMD
++ qvars=id0,regCoverage,regCrossCorr,regDice,regJaccard,meanGMD
+++ join_by , sub-ADS4107 0.9992316 0.9669719 0.9751511 0.9515071 0.793882
+++ local d=,
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s ,0.9992316 ,0.9669719 ,0.9751511 ,0.9515071 ,0.793882
++ qvals=sub-ADS4107,0.9992316,0.9669719,0.9751511,0.9515071,0.793882
++ echo id0,regCoverage,regCrossCorr,regDice,regJaccard,meanGMD
++ echo sub-ADS4107,0.9992316,0.9669719,0.9751511,0.9515071,0.793882
+ source /xcpEngine-master/core/moduleEnd
++ for i in ${!declared_d[@]}
++ write_derivative probabilityWM
++ local i
++ local dfloat=0
++ local 'derivative=probabilityWM[2]'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ ((  1 == 1  ))
+++ derivative_floats probabilityWM
+++ local dfloat=0
+++ dfloat_names=($(json_keys derivatives_floating))
++++ json_keys derivatives_floating
++++ ((  1 == 1  ))
++++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++++ echo '{' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"mean",' '"Type":' '"Map"' '}' '}'
++++ ((  1 == 2  ))
+++ local dfloat_names
+++ for i in "${dfloat_names[@]}"
+++ [[ probabilityWM == gmd ]]
+++ for i in "${dfloat_names[@]}"
+++ [[ probabilityWM == probabilityCSF ]]
+++ for i in "${dfloat_names[@]}"
+++ [[ probabilityWM == probabilityGM ]]
+++ for i in "${dfloat_names[@]}"
+++ [[ probabilityWM == probabilityWM ]]
+++ printf 1
+++ return
++ dfloat=1
++ ((  dfloat == 0  ))
++ ((  dfloat == 1  ))
+++ json_get derivatives_floating probabilityWM
+++ ((  2 == 3  ))
+++ ((  2 == 2  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"probabilityWM":."probabilityWM"}'
+++ echo '{ "probabilityCSF": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityGM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityWM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "segmentation3class": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "gmd": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "mean", "Type": "Map" } }'
++ local 'd_cur={
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "gmd",
    "ProvenanceIndex": "2",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ local 'deriv={
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ json_merge deriv d_cur
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}' '{' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ local 'deriv={
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "gmd",
    "ProvenanceIndex": "2",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ json_print deriv
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ echo 'probabilityWM[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz'
++ for i in ${!declared_d[@]}
++ write_derivative gmd
++ local i
++ local dfloat=0
++ local 'derivative=gmd[2]'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ ((  1 == 1  ))
+++ derivative_floats gmd
+++ local dfloat=0
+++ dfloat_names=($(json_keys derivatives_floating))
++++ json_keys derivatives_floating
++++ ((  1 == 1  ))
++++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++++ echo '{' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"mean",' '"Type":' '"Map"' '}' '}'
++++ ((  1 == 2  ))
+++ local dfloat_names
+++ for i in "${dfloat_names[@]}"
+++ [[ gmd == gmd ]]
+++ printf 1
+++ return
++ dfloat=1
++ ((  dfloat == 0  ))
++ ((  dfloat == 1  ))
+++ json_get derivatives_floating gmd
+++ ((  2 == 3  ))
+++ ((  2 == 2  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"gmd":."gmd"}'
+++ echo '{ "probabilityCSF": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityGM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityWM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "segmentation3class": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "gmd": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "mean", "Type": "Map" } }'
++ local 'd_cur={
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "gmd",
    "ProvenanceIndex": "2",
    "Statistic": "mean",
    "Type": "Map"
  }
}'
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ local 'deriv={
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ json_merge deriv d_cur
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}' '{' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"mean",' '"Type":' '"Map"' '}' '}'
++ local 'deriv={
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "gmd",
    "ProvenanceIndex": "2",
    "Statistic": "mean",
    "Type": "Map"
  }
}'
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ json_print deriv
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"mean",' '"Type":' '"Map"' '}' '}'
++ echo 'gmd[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz'
++ for i in ${!declared_d[@]}
++ write_derivative probabilityGM
++ local i
++ local dfloat=0
++ local 'derivative=probabilityGM[2]'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ ((  1 == 1  ))
+++ derivative_floats probabilityGM
+++ local dfloat=0
+++ dfloat_names=($(json_keys derivatives_floating))
++++ json_keys derivatives_floating
++++ ((  1 == 1  ))
++++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++++ echo '{' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"mean",' '"Type":' '"Map"' '}' '}'
++++ ((  1 == 2  ))
+++ local dfloat_names
+++ for i in "${dfloat_names[@]}"
+++ [[ probabilityGM == gmd ]]
+++ for i in "${dfloat_names[@]}"
+++ [[ probabilityGM == probabilityCSF ]]
+++ for i in "${dfloat_names[@]}"
+++ [[ probabilityGM == probabilityGM ]]
+++ printf 1
+++ return
++ dfloat=1
++ ((  dfloat == 0  ))
++ ((  dfloat == 1  ))
+++ json_get derivatives_floating probabilityGM
+++ ((  2 == 3  ))
+++ ((  2 == 2  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"probabilityGM":."probabilityGM"}'
+++ echo '{ "probabilityCSF": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityGM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityWM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "segmentation3class": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "gmd": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "mean", "Type": "Map" } }'
++ local 'd_cur={
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "gmd",
    "ProvenanceIndex": "2",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ local 'deriv={
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ json_merge deriv d_cur
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}' '{' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ local 'deriv={
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "gmd",
    "ProvenanceIndex": "2",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ json_print deriv
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ echo 'probabilityGM[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz'
++ for i in ${!declared_d[@]}
++ write_derivative segmentation3class
++ local i
++ local dfloat=0
++ local 'derivative=segmentation3class[2]'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ ((  1 == 1  ))
+++ derivative_floats segmentation3class
+++ local dfloat=0
+++ dfloat_names=($(json_keys derivatives_floating))
++++ json_keys derivatives_floating
++++ ((  1 == 1  ))
++++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++++ echo '{' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"mean",' '"Type":' '"Map"' '}' '}'
++++ ((  1 == 2  ))
+++ local dfloat_names
+++ for i in "${dfloat_names[@]}"
+++ [[ segmentation3class == gmd ]]
+++ for i in "${dfloat_names[@]}"
+++ [[ segmentation3class == probabilityCSF ]]
+++ for i in "${dfloat_names[@]}"
+++ [[ segmentation3class == probabilityGM ]]
+++ for i in "${dfloat_names[@]}"
+++ [[ segmentation3class == probabilityWM ]]
+++ for i in "${dfloat_names[@]}"
+++ [[ segmentation3class == segmentation3class ]]
+++ printf 1
+++ return
++ dfloat=1
++ ((  dfloat == 0  ))
++ ((  dfloat == 1  ))
+++ json_get derivatives_floating segmentation3class
+++ ((  2 == 3  ))
+++ ((  2 == 2  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"segmentation3class":."segmentation3class"}'
+++ echo '{ "probabilityCSF": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityGM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityWM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "segmentation3class": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "gmd": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "mean", "Type": "Map" } }'
++ local 'd_cur={
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "gmd",
    "ProvenanceIndex": "2",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ local 'deriv={
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ json_merge deriv d_cur
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}' '{' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ local 'deriv={
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "gmd",
    "ProvenanceIndex": "2",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ json_print deriv
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ echo 'segmentation3class[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz'
++ for i in ${!declared_d[@]}
++ write_derivative probabilityCSF
++ local i
++ local dfloat=0
++ local 'derivative=probabilityCSF[2]'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ ((  1 == 1  ))
+++ derivative_floats probabilityCSF
+++ local dfloat=0
+++ dfloat_names=($(json_keys derivatives_floating))
++++ json_keys derivatives_floating
++++ ((  1 == 1  ))
++++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++++ echo '{' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"mean",' '"Type":' '"Map"' '}' '}'
++++ ((  1 == 2  ))
+++ local dfloat_names
+++ for i in "${dfloat_names[@]}"
+++ [[ probabilityCSF == gmd ]]
+++ for i in "${dfloat_names[@]}"
+++ [[ probabilityCSF == probabilityCSF ]]
+++ printf 1
+++ return
++ dfloat=1
++ ((  dfloat == 0  ))
++ ((  dfloat == 1  ))
+++ json_get derivatives_floating probabilityCSF
+++ ((  2 == 3  ))
+++ ((  2 == 2  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"probabilityCSF":."probabilityCSF"}'
+++ echo '{ "probabilityCSF": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityGM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "probabilityWM": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "segmentation3class": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "null", "Type": "Map" }, "gmd": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "gmd", "ProvenanceIndex": "2", "Statistic": "mean", "Type": "Map" } }'
++ local 'd_cur={
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "gmd",
    "ProvenanceIndex": "2",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ local 'deriv={
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ json_merge deriv d_cur
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}' '{' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ local 'deriv={
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "gmd",
    "ProvenanceIndex": "2",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ json_print deriv
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"gmd",' '"ProvenanceIndex":' '"2",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ echo 'probabilityCSF[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz'
++ for i in ${!declared_c[@]}
++ write_config mask
++ local 'config=mask[2]'
++ echo 'mask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz'
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ echo '


Module Workflow Map
····································································
· START
· @1
· @1.5
· @2
· @2.3
· FINISH
····································································'
++ intermediate=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107~TEMP~
++ cleanup
++ local 'cleanup=gmd_cleanup[2]'
++ ((  1 == 1  ))
++ rm -rf '/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107~TEMP~*'
++ echo '

Module complete'
++ exit 0
++ export SHELLOPTS
++ source /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
+++ analysis=struc-ACCELERATOR
+++ design=/projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/anat-Complete+_201903031016.dsn
+++ sequence=anatomical
+++ standard=MNI%1x1x1
+++ pipeline=struc,gmd,jlf,roiquant,qcanat
+++ struc_denoise_anat[1]=1
+++ struc_prior_weight[1]=0.25
+++ struc_posterior_formulation[1]='Socrates[1]'
+++ struc_keepBEImages[1]=0
+++ struc_floating_point[1]=0
+++ struc_random_seed[1]=0
+++ struc_bspline[1]=0
+++ struc_fit[1]=0.3
+++ struc_quick[1]=0
+++ struc_seg_priors[1]=1
+++ struc_rerun[1]=0
+++ struc_cleanup[1]=1
+++ struc_process[1]=ACT
+++ gmd_rerun[2]=0
+++ gmd_cleanup[2]=1
+++ newAntsPath[3]=/data/joy/BBL/applications/ANTsJLF_201603/bin/
+++ jlf_keep_warps[3]=0
+++ jlf_extract[3]=1
+++ jlf_quick[3]=1
+++ jlf_cohort[3]=SexBalanced20
+++ jlf_parallel[3]=none
+++ jlf_rerun[3]=0
+++ jlf_cleanup[3]=1
+++ roiquant_atlas[4]=miccai
+++ roiquant_vol[4]=1
+++ roiquant_rerun[4]=0
+++ roiquant_cleanup[4]=1
+++ qcanat_gm[5]=Y
+++ qcanat_gm_val[5]=2,4
+++ qcanat_wm[5]=Y
+++ qcanat_wm_val[5]=3
+++ qcanat_csf[5]=Y
+++ qcanat_csf_val[5]=1
+++ qcanat_cort[5]=Y
+++ qcanat_cort_val[5]=4
+++ qcanat_rerun[5]=0
+++ qcanat_cleanup[5]=1
+++ space[9001]=sub-ADS4107_anatomical
+++ structural[9001]=sub-ADS4107_anatomical
+++ spaces[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+++ aux_imgs[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+++ atlas[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+++ audit[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv
+++ quality[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_quality.csv
+++ out_super=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data
+++ sub=9001
+++ design[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
+++ prefix[9001]=sub-ADS4107
+++ out[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
+++ ids[9001]=sub-ADS4107
+++ scratch=
+++ img[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+++ subject[0]=sub-ADS4107
+++ out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ template=/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ standard=MNI%1x1x1
+++ img1[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+++ struct_space[9001]=sub-ADS4107_anatomical
+++ struct[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ segmentation[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ mask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ corticalThickness[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ ixfm_affine[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat
+++ referenceVolumeBrain[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ struct_std[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainNormalizedToTemplate.nii.gz
+++ str2stdmask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_str2stdmask.nii.gz
+++ referenceVolume[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+++ meanIntensity[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+++ xfm_affine[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat
+++ ixfm_warp[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz
+++ xfm_warp[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz
+++ meanIntensityBrain[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ corticalThickness_std[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThicknessNormalizedToTemplate.nii.gz
+++ template_mask[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz
+++ template_brain_prior[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz
+++ template_head[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz
+++ template_priors[9001]=/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz
+++ template_mask_dil[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz
+++ probabilityWM[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ gmd[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ probabilityGM[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ segmentation3class[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ probabilityCSF[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ mask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ design=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
++ prefix=sub-ADS4107
++ out=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
++ source /xcpEngine-master/core/defineLogs
+++ [[ -z '' ]]
+++ export log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG
+++ log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG
+++ export log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process
+++ log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process
+++ [[ -n jlf ]]
+++ [[ -n /xcpEngine-master/core/CONSOLE_MODULE_AFGR ]]
+++ echo '

'
+++ printx /xcpEngine-master/core/CONSOLE_MODULE_AFGR
+++ local 'file=###################################################################
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
#                                                                 #
#  ☭$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})☭  #
#                                                                 #
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
###################################################################'
+++ eval 'echo -e "###################################################################
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
#                                                                 #
#  ☭$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})☭  #
#                                                                 #
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
###################################################################"'
+++++ /xcpEngine-master/core/padAndCentreString 59 JOINT LABEL FUSION MODULE
+ length=59
+ shift 1
+ string='JOINT LABEL FUSION MODULE'
+ pad=34
+ pad=17
+++ seq 1 17
++ printf '%.0s ' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
+ pad='                 '
+ string='                 JOINT LABEL FUSION MODULE                 '
+ ((  59 < 59  ))
+ printf '                 JOINT LABEL FUSION MODULE                 '
++++ echo -e '###################################################################
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
#                                                                 #
#  ☭                 JOINT LABEL FUSION MODULE                 ☭  #
#                                                                 #
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
###################################################################'
+++ echo '

'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
++ ((  1 == 1  ))
++ ((  0 == 1  ))
++ outdir=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf
++ [[ ! -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf ]]
++ echo '


[I][/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz]
[O][/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf]'
++ [[ -n '' ]]
++ intermediate=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107~TEMP~
++ intermediate_root=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107~TEMP~
++ img_raw=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ img=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ mapfile quality_lines
++ qvars=(${quality_lines[0]//,/ })
++ qvals=(${quality_lines[1]//,/ })
++ printx /xcpEngine-master/core/DESIGN_MODULE_OUTPUT
++ local 'file=
# ··· outputs from ${mod_name}[${cxt}] ··· #'
++ eval 'echo -e "
# ··· outputs from ${mod_name}[${cxt}] ··· #"'
+++ echo -e '
# ··· outputs from JOINT LABEL FUSION MODULE[3] ··· #'
++ export 'derivatives_floating={}'
++ derivatives_floating='{}'
++ declare -A declared_d declared_o declared_c declared_s declared_q
++ routine_map='· START'
++ rerun
++ local 'rerun=jlf_rerun[3]'
++ ((  0 == 1  ))
+ derivative intensity sub-ADS4107_Intensity
+ local path vname
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ vname=intensity
+ eval 'intensity[3]=${path}'
++ intensity[3]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ json_multiset derivatives_floating intensity Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz Space:sub-ADS4107_anatomical ProvenanceName:jlf ProvenanceIndex:3 Statistic:null Type:Map
+ local i asgt json_new key val
+ multiset=()
+ local multiset
+ local json=derivatives_floating
+ local object=intensity
+ shift 2
+ for i in ${@}
+ asgt=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ key=Map
++ strslice Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Map:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz'
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ unset c
++ [[ -n '' ]]
++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ val=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Space:sub-ADS4107_anatomical
++ strslice Space:sub-ADS4107_anatomical 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Space
++ c=' Space'
+++ echo Space
++ c=Space
++ i=Space
++ i=Space
++ unset c
++ [[ -n '' ]]
++ echo Space
+ key=Space
++ strslice Space:sub-ADS4107_anatomical 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Space:sub-ADS4107_anatomical
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=sub-ADS4107_anatomical
++ c=' sub-ADS4107_anatomical'
+++ echo sub-ADS4107_anatomical
++ c=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ i=sub-ADS4107_anatomical
++ unset c
++ [[ -n '' ]]
++ echo sub-ADS4107_anatomical
+ val=sub-ADS4107_anatomical
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceName:jlf
++ strslice ProvenanceName:jlf 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:jlf
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceName
++ c=' ProvenanceName'
+++ echo ProvenanceName
++ c=ProvenanceName
++ i=ProvenanceName
++ i=ProvenanceName
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceName
+ key=ProvenanceName
++ strslice ProvenanceName:jlf 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceName:jlf
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=jlf
++ c=' jlf'
+++ echo jlf
++ c=jlf
++ i=jlf
++ i=jlf
++ unset c
++ [[ -n '' ]]
++ echo jlf
+ val=jlf
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=ProvenanceIndex:3
++ strslice ProvenanceIndex:3 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:3
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=ProvenanceIndex
++ c=' ProvenanceIndex'
+++ echo ProvenanceIndex
++ c=ProvenanceIndex
++ i=ProvenanceIndex
++ i=ProvenanceIndex
++ unset c
++ [[ -n '' ]]
++ echo ProvenanceIndex
+ key=ProvenanceIndex
++ strslice ProvenanceIndex:3 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=ProvenanceIndex:3
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=3
++ c=' 3'
+++ echo 3
++ c=3
++ i=3
++ i=3
++ unset c
++ [[ -n '' ]]
++ echo 3
+ val=3
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Statistic:null
++ strslice Statistic:null 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ key=Statistic
++ strslice Statistic:null 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:null
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=null
++ c=' null'
+++ echo null
++ c=null
++ i=null
++ i=null
++ unset c
++ [[ -n '' ]]
++ echo null
+ val=null
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
+ for i in ${@}
+ asgt=Type:Map
++ strslice Type:Map 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Type
++ c=' Type'
+++ echo Type
++ c=Type
++ i=Type
++ i=Type
++ unset c
++ [[ -n '' ]]
++ echo Type
+ key=Type
++ strslice Type:Map 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Type:Map
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Map
++ c=' Map'
+++ echo Map
++ c=Map
++ i=Map
++ i=Map
++ unset c
++ [[ -n '' ]]
++ echo Map
+ val=Map
+ multiset=("${multiset[@]}" '"'"${key}"'":"'"${val}"'"')
+ shift
++ join_by ', ' '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz"' '"Space":"sub-ADS4107_anatomical"' '"ProvenanceName":"jlf"' '"ProvenanceIndex":"3"' '"Statistic":"null"' '"Type":"Map"'
++ local 'd=, '
++ shift
++ echo -n '"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz"'
++ shift
++ printf %s ', "Space":"sub-ADS4107_anatomical"' ', "ProvenanceName":"jlf"' ', "ProvenanceIndex":"3"' ', "Statistic":"null"' ', "Type":"Map"'
+ multiset='"Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"jlf", "ProvenanceIndex":"3", "Statistic":"null", "Type":"Map"'
+ json_new=($(echo ${!json}|$JQ_PATH '."'"${object}"'" += { '"${multiset}"' }'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 '."intensity" += { "Map":"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz", "Space":"sub-ADS4107_anatomical", "ProvenanceName":"jlf", "ProvenanceIndex":"3", "Statistic":"null", "Type":"Map" }'
++ echo '{}'
+ eval 'derivatives_floating=${json_new[@]}'
++ derivatives_floating='{ "intensity": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "jlf", "ProvenanceIndex": "3", "Statistic": "null", "Type": "Map" } }'
+ declared_d[${vname}]=intensity
+ output labels sub-ADS4107_Labels.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_Labels.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Labels.nii.gz
+ eval 'labels[3]=${path}'
++ labels[3]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Labels.nii.gz
+ declared_o[${1}]=labels
+ output labelsGMIntersect sub-ADS4107_LabelsGMIntersect.nii.gz
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS4107_LabelsGMIntersect.nii.gz == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ eval 'labelsGMIntersect[3]=${path}'
++ labelsGMIntersect[3]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ declared_o[${1}]=labelsGMIntersect
+ load_atlas /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ local atlas_new
+ [[ -z '' ]]
+ atlas[cxt]='{}'
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ atlas_new='{}'
++ json_merge 'atlas[cxt]' atlas_new
++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
++ echo '{}' '{}'
+ atlas[cxt]='{}'
+ atlas_names=($(json_keys atlas[cxt]))
++ json_keys 'atlas[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{}'
++ ((  1 == 2  ))
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Labels.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Labels.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Labels.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Labels.nii.gz
+ ((  1 == 1  ))
+ rerun
+ local 'rerun=jlf_rerun[3]'
+ ((  0 == 1  ))
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ ((  1 == 1  ))
+ rerun
+ local 'rerun=jlf_rerun[3]'
+ ((  0 == 1  ))
+ completion
+ atlas miccai
+ json_object 'atlas[cxt]' miccai
+ json_new=($(echo ${!1}|$JQ_PATH '. + {"'"${2}"'" : {} }'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 '. + {"miccai" : {} }'
++ echo '{}'
+ local json_new
+ eval 'atlas[cxt]=${json_new[@]}'
++ atlas[cxt]='{ "miccai": {} }'
+ [[ -n '' ]]
+ assign image 'labelsGMIntersect[cxt]' or 'labels[cxt]' as jlfLabels
+ local input input_try type
+ [[ image == image ]]
+ type=image
+ shift
+ [[ labelsGMIntersect[cxt] == 1dim ]]
+ [[ labelsGMIntersect[cxt] == files ]]
+ [[ labelsGMIntersect[cxt] == value ]]
+ [[ -z image ]]
+ ((  5 > 0  ))
+ [[ -z '' ]]
+ input_try='labelsGMIntersect[cxt]'
+ case $type in
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ ((  1 == 1  ))
+ input=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ ((  5   >  1   ))
+ shift
+ [[ or == as ]]
+ [[ or == or ]]
+ shift
+ [[ labels[cxt] == otherwise ]]
+ ((  3 > 0  ))
+ [[ -z /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz ]]
+ ((  3   >  1   ))
+ shift
+ [[ as == as ]]
+ shift
+ break
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz ]]
+ eval 'jlfLabels=${input}'
++ jlfLabels=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ atlas_set miccai Map /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ json_set 'atlas[cxt]' miccai Map /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai" += {"Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz"}'
++ echo '{' '"miccai":' '{}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'atlas[cxt]=${json_new[@]}'
++ atlas[cxt]='{ "miccai": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz" } }'
+ atlas_set miccai Space sub-ADS4107_anatomical
+ json_set 'atlas[cxt]' miccai Space sub-ADS4107_anatomical
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai" += {"Space": "sub-ADS4107_anatomical"}'
++ echo '{' '"miccai":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'atlas[cxt]=${json_new[@]}'
++ atlas[cxt]='{ "miccai": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz", "Space": "sub-ADS4107_anatomical" } }'
+ atlas_set miccai Type Map
+ json_set 'atlas[cxt]' miccai Type Map
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai" += {"Type": "Map"}'
++ echo '{' '"miccai":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"Space":' '"sub-ADS4107_anatomical"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'atlas[cxt]=${json_new[@]}'
++ atlas[cxt]='{ "miccai": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz", "Space": "sub-ADS4107_anatomical", "Type": "Map" } }'
+ atlas_set miccai NodeIndex /xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D
+ json_set 'atlas[cxt]' miccai NodeIndex /xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai" += {"NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D"}'
++ echo '{' '"miccai":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'atlas[cxt]=${json_new[@]}'
++ atlas[cxt]='{ "miccai": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz", "Space": "sub-ADS4107_anatomical", "Type": "Map", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D" } }'
+ atlas_set miccai NodeNames /xcpEngine-master/atlas/miccai/miccaiNodeNames.txt
+ json_set 'atlas[cxt]' miccai NodeNames /xcpEngine-master/atlas/miccai/miccaiNodeNames.txt
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai" += {"NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt"}'
++ echo '{' '"miccai":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'atlas[cxt]=${json_new[@]}'
++ atlas[cxt]='{ "miccai": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz", "Space": "sub-ADS4107_anatomical", "Type": "Map", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt" } }'
+ atlas_set miccai Citation /xcpEngine-master/atlas/miccai/miccaiReference.bib
+ json_set 'atlas[cxt]' miccai Citation /xcpEngine-master/atlas/miccai/miccaiReference.bib
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai" += {"Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib"}'
++ echo '{' '"miccai":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'atlas[cxt]=${json_new[@]}'
++ atlas[cxt]='{ "miccai": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz", "Space": "sub-ADS4107_anatomical", "Type": "Map", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib" } }'
+ write_atlas
+ local path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ [[ -n '' ]]
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ json_print 'atlas[cxt]'
+ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
+ echo '{' '"miccai":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib"' '}' '}'
+ source /xcpEngine-master/core/auditComplete
++ id_var=(${ids[sub]//,/ })
++ modaudit=5
++ previous=4
++ mapfile subjaudit
++ auditvals=(${subjaudit[1]//,/ })
++ auditvals=(${auditvals[@]:0:$previous} 1 ${auditvals[@]:$modaudit:${#auditvals[@]}})
+++ join_by , sub-ADS4107 1 1 1 1 0 0
+++ local d=,
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s ,1 ,1 ,1 ,1 ,0 ,0
++ subjaudit[1]=sub-ADS4107,1,1,1,1,0,0
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv
++ echo id0,localiser,struc,gmd,jlf,roiquant,qcanat
++ echo sub-ADS4107,1,1,1,1,0,0
+ source /xcpEngine-master/core/updateQuality
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_quality.csv
+++ join_by , id0 regCoverage regCrossCorr regDice regJaccard meanGMD
+++ local d=,
+++ shift
+++ echo -n id0
+++ shift
+++ printf %s ,regCoverage ,regCrossCorr ,regDice ,regJaccard ,meanGMD
++ qvars=id0,regCoverage,regCrossCorr,regDice,regJaccard,meanGMD
+++ join_by , sub-ADS4107 0.9992316 0.9669719 0.9751511 0.9515071 0.793882
+++ local d=,
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s ,0.9992316 ,0.9669719 ,0.9751511 ,0.9515071 ,0.793882
++ qvals=sub-ADS4107,0.9992316,0.9669719,0.9751511,0.9515071,0.793882
++ echo id0,regCoverage,regCrossCorr,regDice,regJaccard,meanGMD
++ echo sub-ADS4107,0.9992316,0.9669719,0.9751511,0.9515071,0.793882
+ source /xcpEngine-master/core/moduleEnd
++ for i in ${!declared_d[@]}
++ write_derivative intensity
++ local i
++ local dfloat=0
++ local 'derivative=intensity[3]'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ ((  1 == 1  ))
+++ derivative_floats intensity
+++ local dfloat=0
+++ dfloat_names=($(json_keys derivatives_floating))
++++ json_keys derivatives_floating
++++ ((  1 == 1  ))
++++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++++ echo '{' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"jlf",' '"ProvenanceIndex":' '"3",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++++ ((  1 == 2  ))
+++ local dfloat_names
+++ for i in "${dfloat_names[@]}"
+++ [[ intensity == intensity ]]
+++ printf 1
+++ return
++ dfloat=1
++ ((  dfloat == 0  ))
++ ((  dfloat == 1  ))
+++ json_get derivatives_floating intensity
+++ ((  2 == 3  ))
+++ ((  2 == 2  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"intensity":."intensity"}'
+++ echo '{ "intensity": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz", "Space": "sub-ADS4107_anatomical", "ProvenanceName": "jlf", "ProvenanceIndex": "3", "Statistic": "null", "Type": "Map" } }'
++ local 'd_cur={
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "jlf",
    "ProvenanceIndex": "3",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ local 'deriv={
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+++ json_merge deriv d_cur
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}' '{' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"jlf",' '"ProvenanceIndex":' '"3",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ local 'deriv={
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "Space": "sub-ADS4107_anatomical",
    "ProvenanceName": "jlf",
    "ProvenanceIndex": "3",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
++ json_print deriv
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"Space":' '"sub-ADS4107_anatomical",' '"ProvenanceName":' '"jlf",' '"ProvenanceIndex":' '"3",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ echo 'intensity[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz'
++ for i in ${!declared_o[@]}
++ write_output labelsGMIntersect
++ local 'output=labelsGMIntersect[3]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz ]]
++ echo 'labelsGMIntersect[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz'
++ for i in ${!declared_o[@]}
++ write_output labels
++ local 'output=labels[3]'
++ [[ -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Labels.nii.gz ]]
++ echo 'labels[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Labels.nii.gz'
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ echo '


Module Workflow Map
····································································
· START
· FINISH
····································································'
++ intermediate=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107~TEMP~
++ cleanup
++ local 'cleanup=jlf_cleanup[3]'
++ ((  1 == 1  ))
++ rm -rf '/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107~TEMP~*'
++ echo '

Module complete'
++ exit 0
++ export SHELLOPTS
++ source /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
+++ analysis=struc-ACCELERATOR
+++ design=/projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/anat-Complete+_201903031016.dsn
+++ sequence=anatomical
+++ standard=MNI%1x1x1
+++ pipeline=struc,gmd,jlf,roiquant,qcanat
+++ struc_denoise_anat[1]=1
+++ struc_prior_weight[1]=0.25
+++ struc_posterior_formulation[1]='Socrates[1]'
+++ struc_keepBEImages[1]=0
+++ struc_floating_point[1]=0
+++ struc_random_seed[1]=0
+++ struc_bspline[1]=0
+++ struc_fit[1]=0.3
+++ struc_quick[1]=0
+++ struc_seg_priors[1]=1
+++ struc_rerun[1]=0
+++ struc_cleanup[1]=1
+++ struc_process[1]=ACT
+++ gmd_rerun[2]=0
+++ gmd_cleanup[2]=1
+++ newAntsPath[3]=/data/joy/BBL/applications/ANTsJLF_201603/bin/
+++ jlf_keep_warps[3]=0
+++ jlf_extract[3]=1
+++ jlf_quick[3]=1
+++ jlf_cohort[3]=SexBalanced20
+++ jlf_parallel[3]=none
+++ jlf_rerun[3]=0
+++ jlf_cleanup[3]=1
+++ roiquant_atlas[4]=miccai
+++ roiquant_vol[4]=1
+++ roiquant_rerun[4]=0
+++ roiquant_cleanup[4]=1
+++ qcanat_gm[5]=Y
+++ qcanat_gm_val[5]=2,4
+++ qcanat_wm[5]=Y
+++ qcanat_wm_val[5]=3
+++ qcanat_csf[5]=Y
+++ qcanat_csf_val[5]=1
+++ qcanat_cort[5]=Y
+++ qcanat_cort_val[5]=4
+++ qcanat_rerun[5]=0
+++ qcanat_cleanup[5]=1
+++ space[9001]=sub-ADS4107_anatomical
+++ structural[9001]=sub-ADS4107_anatomical
+++ spaces[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+++ aux_imgs[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+++ atlas[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+++ audit[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv
+++ quality[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_quality.csv
+++ out_super=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data
+++ sub=9001
+++ design[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
+++ prefix[9001]=sub-ADS4107
+++ out[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
+++ ids[9001]=sub-ADS4107
+++ scratch=
+++ img[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+++ subject[0]=sub-ADS4107
+++ out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ template=/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ standard=MNI%1x1x1
+++ img1[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+++ struct_space[9001]=sub-ADS4107_anatomical
+++ struct[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ segmentation[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ mask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ corticalThickness[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ ixfm_affine[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat
+++ referenceVolumeBrain[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ struct_std[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainNormalizedToTemplate.nii.gz
+++ str2stdmask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_str2stdmask.nii.gz
+++ referenceVolume[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+++ meanIntensity[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+++ xfm_affine[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat
+++ ixfm_warp[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz
+++ xfm_warp[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz
+++ meanIntensityBrain[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ corticalThickness_std[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThicknessNormalizedToTemplate.nii.gz
+++ template_mask[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz
+++ template_brain_prior[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz
+++ template_head[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz
+++ template_priors[9001]=/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz
+++ template_mask_dil[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz
+++ probabilityWM[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ gmd[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ probabilityGM[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ segmentation3class[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ probabilityCSF[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ mask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ intensity[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+++ labelsGMIntersect[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+++ labels[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Labels.nii.gz
++ design=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
++ prefix=sub-ADS4107
++ out=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
++ source /xcpEngine-master/core/defineLogs
+++ [[ -z '' ]]
+++ export log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG
+++ log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG
+++ export log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process
+++ log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process
+++ [[ -n roiquant ]]
+++ [[ -n /xcpEngine-master/core/CONSOLE_MODULE_RC ]]
+++ echo '

'
+++ printx /xcpEngine-master/core/CONSOLE_MODULE_RC
+++ local 'file=


###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
#                                                                 #
#  ☭$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})☭  #
#                                                                 #
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################'
+++ eval 'echo -e "


###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
#                                                                 #
#  ☭$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})☭  #
#                                                                 #
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################"'
+++++ /xcpEngine-master/core/padAndCentreString 59 ATLAS-BASED QUANTIFICATION MODULE
+ length=59
+ shift 1
+ string='ATLAS-BASED QUANTIFICATION MODULE'
+ pad=26
+ pad=13
+++ seq 1 13
++ printf '%.0s ' 1 2 3 4 5 6 7 8 9 10 11 12 13
+ pad='             '
+ string='             ATLAS-BASED QUANTIFICATION MODULE             '
+ ((  59 < 59  ))
+ printf '             ATLAS-BASED QUANTIFICATION MODULE             '
++++ echo -e '


###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
#                                                                 #
#  ☭             ATLAS-BASED QUANTIFICATION MODULE             ☭  #
#                                                                 #
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################'
+++ echo '

'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
++ ((  1 == 1  ))
++ ((  0 == 1  ))
++ outdir=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant
++ [[ ! -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant ]]
++ echo '


[I][/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz]
[O][/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant]'
++ [[ -n '' ]]
++ intermediate=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~
++ intermediate_root=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~
++ img_raw=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ img=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ mapfile quality_lines
++ qvars=(${quality_lines[0]//,/ })
++ qvals=(${quality_lines[1]//,/ })
++ printx /xcpEngine-master/core/DESIGN_MODULE_OUTPUT
++ local 'file=
# ··· outputs from ${mod_name}[${cxt}] ··· #'
++ eval 'echo -e "
# ··· outputs from ${mod_name}[${cxt}] ··· #"'
+++ echo -e '
# ··· outputs from ATLAS-BASED QUANTIFICATION MODULE[4] ··· #'
++ export 'derivatives_floating={}'
++ derivatives_floating='{}'
++ declare -A declared_d declared_o declared_c declared_s declared_q
++ routine_map='· START'
++ rerun
++ local 'rerun=roiquant_rerun[4]'
++ ((  0 == 1  ))
+ define mapbase /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas
+ is+integer 4
+ [[ 4 =~ ^[0-9]+$ ]]
+ eval 'mapbase[4]="${@:2}"'
++ mapbase[4]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas
+ is+integer 4
+ [[ 4 =~ ^[0-9]+$ ]]
+ [[ -n miccai ]]
+ subroutine @0.1
+ signpost=@0.1
+ routine_map='· START
· @0.1'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@0.1 '
+ [[ -n '' ]]
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo '· @0.1 '
· @0.1 
+ add_reference 'referenceVolume[9001]' sub-ADS4107_referenceVolume
+ local image_target image_var
+ image_var='referenceVolume[9001]'
+ image_target=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107_referenceVolume.nii.gz
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107_referenceVolume.nii.gz
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+ ((  1 == 1  ))
+ exec_sys rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107_referenceVolume.nii.gz
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo_cmd rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107_referenceVolume.nii.gz
+ local 'process_command=rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107_referenceVolume.nii.gz'
+ printx /xcpEngine-master/core/CONSOLE_COMMAND
+ local 'file=                             -   -   -
>> ${process_command}'
+ eval 'echo -e "                             -   -   -
>> ${process_command}"'
++ echo -e '                             -   -   -
>> rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107_referenceVolume.nii.gz'
                             -   -   -
>> rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107_referenceVolume.nii.gz
+ rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107_referenceVolume.nii.gz
+ local common
+ p1=(${1//\// })
+ local p1
+ p2=(${2//\// })
+ local p2
+ for f in ${!p1[@]}
+ [[ projects != projects ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ adapt_lab != adapt_lab ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ shared != shared ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ ADS != ADS ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ data != data ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ BIDS_data != BIDS_data ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ derivatives != derivatives ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ xcpEngine != xcpEngine ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ data != data ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ sub-ADS4107 != sub-ADS4107 ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ struc != roiquant ]]
+ break
+ ((  f == 0  ))
++ arithmetic 12-10-1
++ local process_command=12-10-1
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ eval 'echo -e "                             -   -   -
>> ${process_command}"'
+++ echo -e '                             -   -   -
>> 12-10-1'
                             -   -   -
>> 12-10-1
++ bc
++ echo 'scale=20; 12-10-1'
+ local nuniq=1
++ arithmetic 12-1
++ local process_command=12-1
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ eval 'echo -e "                             -   -   -
>> ${process_command}"'
+++ echo -e '                             -   -   -
>> 12-1'
                             -   -   -
>> 12-1
++ bc
++ echo 'scale=20; 12-1'
+ local dividx=11
++ join_by / projects adapt_lab shared ADS data BIDS_data derivatives xcpEngine data sub-ADS4107 roiquant
++ local d=/
++ shift
++ echo -n projects
++ shift
++ printf %s /adapt_lab /shared /ADS /data /BIDS_data /derivatives /xcpEngine /data /sub-ADS4107 /roiquant
+ local pardir=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant
+ local fname=sub-ADS4107_referenceVolume.nii.gz
+ cd /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant
++ repeat 1 ../
++ [[ 1 == 0 ]]
+++ eval echo '{1..1}'
++++ echo 1
++ local ct=1
++ shift
++ local pattern=../
++ printf ../%.0s 1
++ join_by / struc sub-ADS4107_BrainSegmentation0N4.nii.gz
++ local d=/
++ shift
++ echo -n struc
++ shift
++ printf %s /sub-ADS4107_BrainSegmentation0N4.nii.gz
+ ln -sf ../struc/sub-ADS4107_BrainSegmentation0N4.nii.gz sub-ADS4107_referenceVolume.nii.gz
+ load_atlas /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ local atlas_new
+ [[ -z '' ]]
+ atlas[cxt]='{}'
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ atlas_new='{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ json_merge 'atlas[cxt]' atlas_new
++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
++ echo '{}' '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '}' '}'
+ atlas[cxt]='{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
+ atlas_names=($(json_keys atlas[cxt]))
++ json_keys 'atlas[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '}' '}'
++ ((  1 == 2  ))
+ load_atlas /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ local atlas_new
+ [[ -z {
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
} ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ atlas_new='{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ json_merge 'atlas[cxt]' atlas_new
++ /xcpEngine-master/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '}' '}' '{' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map"' '}' '}'
+ atlas[cxt]='{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
+ atlas_names=($(json_keys atlas[cxt]))
++ json_keys 'atlas[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map"' '}' '}'
++ ((  1 == 2  ))
+ load_derivatives
+ local derivative deriv_json d_name dfloat_names
+ deriv_json=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ [[ -n '' ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ deriv[cxt]='{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+ dfloat_names=($(json_keys derivatives_floating))
++ json_keys derivatives_floating
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{}'
++ ((  1 == 2  ))
+ derivatives=($(json_keys deriv[cxt]))
++ json_keys 'deriv[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ ((  1 == 2  ))
+ [[ -n anatomical ]]
+ sequence=anatomical_
+ rerun
+ local 'rerun=roiquant_rerun[4]'
+ ((  0 == 1  ))
+ overwrite='-w 0'
+ ((   == 1  ))
/xcpEngine-master/modules/roiquant/roiquant.mod: line 95: ((: == 1 : syntax error: operand expected (error token is "== 1 ")
+ for map in ${atlas_names[@]}
+ atlas_parse aal116
+ local key keys
+ a=()
+ a[Name]=aal116
++ json_keys 'atlas[cxt]' aal116
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."aal116"|keys[]'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map"' '}' '}'
+ keys='Citation
Map
NodeIndex
NodeNames
Space
SpaceNative
Type'
+ for key in $keys
++ json_get 'atlas[cxt]' aal116 Citation
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."aal116"."Citation"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/aal116/aal116Reference.bib'
+++ echo /xcpEngine-master/atlas/aal116/aal116Reference.bib
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/aal116/aal116Reference.bib
+ for key in $keys
++ json_get 'atlas[cxt]' aal116 Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."aal116"."Map"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/aal116/aal116MNI.nii.gz'
+++ echo /xcpEngine-master/atlas/aal116/aal116MNI.nii.gz
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/aal116/aal116MNI.nii.gz
+ for key in $keys
++ json_get 'atlas[cxt]' aal116 NodeIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."aal116"."NodeIndex"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/aal116/aal116NodeIndex.1D'
+++ echo /xcpEngine-master/atlas/aal116/aal116NodeIndex.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/aal116/aal116NodeIndex.1D
+ for key in $keys
++ json_get 'atlas[cxt]' aal116 NodeNames
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."aal116"."NodeNames"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/aal116/aal116NodeNames.txt'
+++ echo /xcpEngine-master/atlas/aal116/aal116NodeNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/aal116/aal116NodeNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' aal116 Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."aal116"."Space"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' aal116 SpaceNative
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."aal116"."SpaceNative"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' aal116 Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."aal116"."Type"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ a[${key}]=Map
+ atlas_check
+ local i alist aorig a_new gchk
+ alist='roiquant_atlas[4]'
+ alist=(${!alist//,/ })
+ for i in "${alist[@]}"
+ contains aal116 'Coor$'
+ [[ aal116 =~ Coor$ ]]
+ [[ aal116 == segmentation ]]
+ [[ aal116 == global ]]
+ [[ miccai == all ]]
+ contains aal116 miccai
+ [[ aal116 =~ miccai ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ aorig='{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ a_loc='{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ json_get aorig aal116
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"aal116":."aal116"}'
++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
+ aorig='{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ json_get a_loc aal116
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"aal116":."aal116"}'
++ echo '{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
+ a_loc='{
  "aal116": null
}'
+ [[ {
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
} == {
  "aal116": null
} ]]
+ [[ -z {
  "aal116": null
} ]]
+ return 1
+ continue
+ for map in ${atlas_names[@]}
+ atlas_parse glasser360
+ local key keys
+ a=()
+ a[Name]=glasser360
++ json_keys 'atlas[cxt]' glasser360
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."glasser360"|keys[]'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map"' '}' '}'
+ keys='Citation
Map
NodeIndex
NodeNames
Space
SpaceNative
Type'
+ for key in $keys
++ json_get 'atlas[cxt]' glasser360 Citation
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."glasser360"."Citation"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/glasser360/glasser360Reference.bib'
+++ echo /xcpEngine-master/atlas/glasser360/glasser360Reference.bib
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/glasser360/glasser360Reference.bib
+ for key in $keys
++ json_get 'atlas[cxt]' glasser360 Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."glasser360"."Map"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/glasser360/glasser360MNI.nii.gz'
+++ echo /xcpEngine-master/atlas/glasser360/glasser360MNI.nii.gz
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/glasser360/glasser360MNI.nii.gz
+ for key in $keys
++ json_get 'atlas[cxt]' glasser360 NodeIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."glasser360"."NodeIndex"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/glasser360/glasser360NodeIndex.1D'
+++ echo /xcpEngine-master/atlas/glasser360/glasser360NodeIndex.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/glasser360/glasser360NodeIndex.1D
+ for key in $keys
++ json_get 'atlas[cxt]' glasser360 NodeNames
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."glasser360"."NodeNames"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/glasser360/glasser360NodeNames.txt'
+++ echo /xcpEngine-master/atlas/glasser360/glasser360NodeNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/glasser360/glasser360NodeNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' glasser360 Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."glasser360"."Space"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' glasser360 SpaceNative
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."glasser360"."SpaceNative"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' glasser360 Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."glasser360"."Type"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ a[${key}]=Map
+ atlas_check
+ local i alist aorig a_new gchk
+ alist='roiquant_atlas[4]'
+ alist=(${!alist//,/ })
+ for i in "${alist[@]}"
+ contains glasser360 'Coor$'
+ [[ glasser360 =~ Coor$ ]]
+ [[ glasser360 == segmentation ]]
+ [[ glasser360 == global ]]
+ [[ miccai == all ]]
+ contains glasser360 miccai
+ [[ glasser360 =~ miccai ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ aorig='{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ a_loc='{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ json_get aorig glasser360
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"glasser360":."glasser360"}'
++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
+ aorig='{
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ json_get a_loc glasser360
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"glasser360":."glasser360"}'
++ echo '{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
+ a_loc='{
  "glasser360": null
}'
+ [[ {
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
} == {
  "glasser360": null
} ]]
+ [[ -z {
  "glasser360": null
} ]]
+ return 1
+ continue
+ for map in ${atlas_names[@]}
+ atlas_parse gordon333
+ local key keys
+ a=()
+ a[Name]=gordon333
++ json_keys 'atlas[cxt]' gordon333
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gordon333"|keys[]'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map"' '}' '}'
+ keys='Citation
CommunityNamesAPriori
CommunityPartitionAPriori
Map
NodeIndex
NodeNames
Space
SpaceNative
Type'
+ for key in $keys
++ json_get 'atlas[cxt]' gordon333 Citation
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gordon333"."Citation"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/gordon333/gordon333Reference.bib'
+++ echo /xcpEngine-master/atlas/gordon333/gordon333Reference.bib
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/gordon333/gordon333Reference.bib
+ for key in $keys
++ json_get 'atlas[cxt]' gordon333 CommunityNamesAPriori
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gordon333"."CommunityNamesAPriori"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/gordon333/gordon333CommunityNames.txt'
+++ echo /xcpEngine-master/atlas/gordon333/gordon333CommunityNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/gordon333/gordon333CommunityNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' gordon333 CommunityPartitionAPriori
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gordon333"."CommunityPartitionAPriori"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D'
+++ echo /xcpEngine-master/atlas/gordon333/gordon333CommunityAffiliation.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/gordon333/gordon333CommunityAffiliation.1D
+ for key in $keys
++ json_get 'atlas[cxt]' gordon333 Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gordon333"."Map"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/gordon333/gordon333MNI.nii.gz'
+++ echo /xcpEngine-master/atlas/gordon333/gordon333MNI.nii.gz
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/gordon333/gordon333MNI.nii.gz
+ for key in $keys
++ json_get 'atlas[cxt]' gordon333 NodeIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gordon333"."NodeIndex"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/gordon333/gordon333NodeIndex.1D'
+++ echo /xcpEngine-master/atlas/gordon333/gordon333NodeIndex.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/gordon333/gordon333NodeIndex.1D
+ for key in $keys
++ json_get 'atlas[cxt]' gordon333 NodeNames
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gordon333"."NodeNames"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo '${BRAINATLAS}/gordon333/gordon333NodeNames.txt'
+++ echo /xcpEngine-master/atlas/gordon333/gordon333NodeNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/gordon333/gordon333NodeNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' gordon333 Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gordon333"."Space"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' gordon333 SpaceNative
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gordon333"."SpaceNative"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' gordon333 Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gordon333"."Type"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ a[${key}]=Map
+ atlas_check
+ local i alist aorig a_new gchk
+ alist='roiquant_atlas[4]'
+ alist=(${!alist//,/ })
+ for i in "${alist[@]}"
+ contains gordon333 'Coor$'
+ [[ gordon333 =~ Coor$ ]]
+ [[ gordon333 == segmentation ]]
+ [[ gordon333 == global ]]
+ [[ miccai == all ]]
+ contains gordon333 miccai
+ [[ gordon333 =~ miccai ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ aorig='{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ a_loc='{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ json_get aorig gordon333
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"gordon333":."gordon333"}'
++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
+ aorig='{
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ json_get a_loc gordon333
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"gordon333":."gordon333"}'
++ echo '{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
+ a_loc='{
  "gordon333": null
}'
+ [[ {
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
} == {
  "gordon333": null
} ]]
+ [[ -z {
  "gordon333": null
} ]]
+ return 1
+ continue
+ for map in ${atlas_names[@]}
+ atlas_parse miccai
+ local key keys
+ a=()
+ a[Name]=miccai
++ json_keys 'atlas[cxt]' miccai
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai"|keys[]'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map"' '}' '}'
+ keys='Citation
Map
NodeIndex
NodeNames
Space
Type'
+ for key in $keys
++ json_get 'atlas[cxt]' miccai Citation
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai"."Citation"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo /xcpEngine-master/atlas/miccai/miccaiReference.bib
+++ echo /xcpEngine-master/atlas/miccai/miccaiReference.bib
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/miccai/miccaiReference.bib
+ for key in $keys
++ json_get 'atlas[cxt]' miccai Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai"."Map"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
++ ((  3 == 2  ))
+ a[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ for key in $keys
++ json_get 'atlas[cxt]' miccai NodeIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai"."NodeIndex"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo /xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D
+++ echo /xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D
+ for key in $keys
++ json_get 'atlas[cxt]' miccai NodeNames
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai"."NodeNames"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo /xcpEngine-master/atlas/miccai/miccaiNodeNames.txt
+++ echo /xcpEngine-master/atlas/miccai/miccaiNodeNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' miccai Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai"."Space"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ a[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'atlas[cxt]' miccai Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai"."Type"'
+++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ a[${key}]=Map
+ atlas_check
+ local i alist aorig a_new gchk
+ alist='roiquant_atlas[4]'
+ alist=(${!alist//,/ })
+ for i in "${alist[@]}"
+ contains miccai 'Coor$'
+ [[ miccai =~ Coor$ ]]
+ [[ miccai == segmentation ]]
+ [[ miccai == global ]]
+ [[ miccai == all ]]
+ contains miccai miccai
+ [[ miccai =~ miccai ]]
+ return 0
+ [[ ! -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz ]]
+ routine @1 Regional quantification: miccai
+ signpost=@1
+ routine_map='· START
· @0.1
· @1'
+ shift
+ routine_description='Regional quantification: miccai'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1 '
+ [[ -n Regional quantification: miccai ]]
+ eval 'echo -e "


Current processing step:
${vid}${routine_description}
····································································"'
++ echo -e '


Current processing step:
@1 Regional quantification: miccai
····································································'



Current processing step:
@1 Regional quantification: miccai
····································································
+ declare_atlas_outputs
+ define rstatdir /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai
+ is+integer 4
+ [[ 4 =~ ^[0-9]+$ ]]
+ eval 'rstatdir[4]="${@:2}"'
++ rstatdir[4]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai
+ is+integer 4
+ [[ 4 =~ ^[0-9]+$ ]]
+ define rstatbase /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai
+ is+integer 4
+ [[ 4 =~ ^[0-9]+$ ]]
+ eval 'rstatbase[4]="${@:2}"'
++ rstatbase[4]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai
+ is+integer 4
+ [[ 4 =~ ^[0-9]+$ ]]
+ define nodemap /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
+ is+integer 4
+ [[ 4 =~ ^[0-9]+$ ]]
+ eval 'nodemap[4]="${@:2}"'
++ nodemap[4]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
+ is+integer 4
+ [[ 4 =~ ^[0-9]+$ ]]
+ subroutine @1.2 Mapping network to image space
+ signpost=@1.2
+ routine_map='· START
· @0.1
· @1
· @1.2'
+ shift
+ local 'subroutine_description=Mapping network to image space'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.2 '
+ [[ -n Mapping network to image space ]]
+ echo '· @1.2 Mapping network to image space'
· @1.2 Mapping network to image space
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ ((  1 == 1  ))
+ rerun
+ local 'rerun=roiquant_rerun[4]'
+ ((  0 == 1  ))
+ subroutine @1.2.1
+ signpost=@1.2.1
+ routine_map='· START
· @0.1
· @1
· @1.2
· @1.2.1'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.2.1 '
+ [[ -n '' ]]
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo '· @1.2.1 '
· @1.2.1 
+ a[Type]=done
+ mkdir -p /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai
+ case ${a[Type]} in
+ subroutine @1.2.7
+ signpost=@1.2.7
+ routine_map='· START
· @0.1
· @1
· @1.2
· @1.2.1
· @1.2.7'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.2.7 '
+ [[ -n '' ]]
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo '· @1.2.7 '
· @1.2.7 
+ add_reference 'nodemap[cxt]' miccai/sub-ADS4107_miccai
+ local image_target image_var
+ image_var='nodemap[cxt]'
+ image_target=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai.nii.gz
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai.nii.gz
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ ((  1 == 1  ))
+ exec_sys rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai.nii.gz
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo_cmd rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai.nii.gz
+ local 'process_command=rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai.nii.gz'
+ printx /xcpEngine-master/core/CONSOLE_COMMAND
+ local 'file=                             -   -   -
>> ${process_command}'
+ eval 'echo -e "                             -   -   -
>> ${process_command}"'
++ echo -e '                             -   -   -
>> rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai.nii.gz'
                             -   -   -
>> rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai.nii.gz
+ rln /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai.nii.gz
+ local common
+ p1=(${1//\// })
+ local p1
+ p2=(${2//\// })
+ local p2
+ for f in ${!p1[@]}
+ [[ projects != projects ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ adapt_lab != adapt_lab ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ shared != shared ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ ADS != ADS ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ data != data ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ BIDS_data != BIDS_data ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ derivatives != derivatives ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ xcpEngine != xcpEngine ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ data != data ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ sub-ADS4107 != sub-ADS4107 ]]
+ common=("${common[@]}" "${p1[f]}")
+ for f in ${!p1[@]}
+ [[ sub-ADS4107_atlas != roiquant ]]
+ break
+ ((  f == 0  ))
++ arithmetic 13-10-1
++ local process_command=13-10-1
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ eval 'echo -e "                             -   -   -
>> ${process_command}"'
+++ echo -e '                             -   -   -
>> 13-10-1'
                             -   -   -
>> 13-10-1
++ bc
++ echo 'scale=20; 13-10-1'
+ local nuniq=2
++ arithmetic 13-1
++ local process_command=13-1
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ eval 'echo -e "                             -   -   -
>> ${process_command}"'
+++ echo -e '                             -   -   -
>> 13-1'
                             -   -   -
>> 13-1
++ bc
++ echo 'scale=20; 13-1'
+ local dividx=12
++ join_by / projects adapt_lab shared ADS data BIDS_data derivatives xcpEngine data sub-ADS4107 roiquant miccai
++ local d=/
++ shift
++ echo -n projects
++ shift
++ printf %s /adapt_lab /shared /ADS /data /BIDS_data /derivatives /xcpEngine /data /sub-ADS4107 /roiquant /miccai
+ local pardir=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai
+ local fname=sub-ADS4107_miccai.nii.gz
+ cd /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai
++ repeat 2 ../
++ [[ 2 == 0 ]]
+++ eval echo '{1..2}'
++++ echo 1 2
++ local 'ct=1 2'
++ shift
++ local pattern=../
++ printf ../%.0s 1 2
++ join_by / sub-ADS4107_atlas sub-ADS4107_miccai.nii.gz
++ local d=/
++ shift
++ echo -n sub-ADS4107_atlas
++ shift
++ printf %s /sub-ADS4107_miccai.nii.gz
+ ln -sf ../../sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz sub-ADS4107_miccai.nii.gz
+ subroutine @1.3.3
+ signpost=@1.3.3
+ routine_map='· START
· @0.1
· @1
· @1.2
· @1.2.1
· @1.2.7
· @1.3.3'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.3.3 '
+ [[ -n '' ]]
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo '· @1.3.3 '
· @1.3.3 
+ cover=($(exec_xcp nodeCoverage.R       -i    ${mask[sub]}              -r    ${nodemap[cxt]}           -x    ${a[NodeIndex]}           -n    ${a[NodeNames]}))
++ exec_xcp nodeCoverage.R -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -x /xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D -n /xcpEngine-master/atlas/miccai/miccaiNodeNames.txt
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ echo_cmd '${XCPEDIR}/utils/nodeCoverage.R' -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -x /xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D -n /xcpEngine-master/atlas/miccai/miccaiNodeNames.txt
++ local 'process_command=${XCPEDIR}/utils/nodeCoverage.R -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -x /xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D -n /xcpEngine-master/atlas/miccai/miccaiNodeNames.txt'
++ printx /xcpEngine-master/core/CONSOLE_COMMAND
++ local 'file=                             -   -   -
>> ${process_command}'
++ eval 'echo -e "                             -   -   -
>> ${process_command}"'
+++ echo -e '                             -   -   -
>> ${XCPEDIR}/utils/nodeCoverage.R -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -x /xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D -n /xcpEngine-master/atlas/miccai/miccaiNodeNames.txt'
                             -   -   -
>> ${XCPEDIR}/utils/nodeCoverage.R -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -x /xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D -n /xcpEngine-master/atlas/miccai/miccaiNodeNames.txt
++ echo_cmd '${XCPEDIR}/utils/nodeCoverage.R' -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -x /xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D -n /xcpEngine-master/atlas/miccai/miccaiNodeNames.txt
++ /xcpEngine-master/utils/nodeCoverage.R -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -x /xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D -n /xcpEngine-master/atlas/miccai/miccaiNodeNames.txt
+ R_HOME_DIR=/usr/lib/R
+ test /usr/lib/R = /usr/lib/R
+ case "linux-gnu" in
++ uname -m
+ run_arch=x86_64
+ case "$run_arch" in
+ libnn=lib64
+ libnn_fallback=lib
+ '[' -x /usr/lib64/R/bin/exec/R ']'
+ '[' -x /usr/lib/R/bin/exec/R ']'
+ R_HOME_DIR=/usr/lib/R
+ test -n ''
+ R_HOME=/usr/lib/R
+ export R_HOME
+ R_SHARE_DIR=/usr/share/R/share
+ export R_SHARE_DIR
+ R_INCLUDE_DIR=/usr/share/R/include
+ export R_INCLUDE_DIR
+ R_DOC_DIR=/usr/share/R/doc
+ export R_DOC_DIR
+ :
+ usage='
Usage: R [options] [< infile] [> outfile]
   or: R CMD command [arguments]

Start R, a system for statistical computation and graphics, with the
specified options, or invoke an R tool via the '\''R CMD'\'' interface.

Options:
  -h, --help            Print short help message and exit
  --version             Print version info and exit
  --encoding=ENC        Specify encoding to be used for stdin
  --encoding ENC
  RHOME			Print path to R home directory and exit
  --save                Do save workspace at the end of the session
  --no-save             Don'\''t save it
  --no-environ          Don'\''t read the site and user environment files
  --no-site-file        Don'\''t read the site-wide Rprofile
  --no-init-file        Don'\''t read the user R profile
  --restore             Do restore previously saved objects at startup
  --no-restore-data     Don'\''t restore previously saved objects
  --no-restore-history  Don'\''t restore the R history file
  --no-restore          Don'\''t restore anything
  --vanilla		Combine --no-save, --no-restore, --no-site-file,
			--no-init-file and --no-environ
  --no-readline         Don'\''t use readline for command-line editing
  --max-ppsize=N        Set max size of protect stack to N
  --min-nsize=N         Set min number of fixed size obj'\''s ("cons cells") to N
  --min-vsize=N         Set vector heap minimum to N bytes; '\''4M'\'' = 4 MegaB
  -q, --quiet           Don'\''t print startup message
  --silent              Same as --quiet
  --slave               Make R run as quietly as possible
  --interactive         Force an interactive session
  --verbose             Print more information about progress
  -d, --debugger=NAME   Run R through debugger NAME
  --debugger-args=ARGS  Pass ARGS as arguments to the debugger
  -g TYPE, --gui=TYPE	Use TYPE as GUI; possible values are '\''X11'\'' (default)
			and '\''Tk'\''.
  --arch=NAME		Specify a sub-architecture
  --args                Skip the rest of the command line
  -f FILE, --file=FILE  Take input from '\''FILE'\''
  -e EXPR               Execute '\''EXPR'\'' and exit

FILE may contain spaces but not shell metacharacters.

Commands:
  BATCH			Run R in batch mode
  COMPILE		Compile files for use with R
  SHLIB			Build shared library for dynamic loading
  INSTALL		Install add-on packages
  REMOVE		Remove add-on packages
  build			Build add-on packages
  check			Check add-on packages
  LINK			Front-end for creating executable programs
  Rprof			Post-process R profiling files
  Rdconv		Convert Rd format to various other formats
  Rd2pdf		Convert Rd format to PDF
  Rd2txt		Convert Rd format to pretty text
  Stangle		Extract S/R code from Sweave documentation
  Sweave		Process Sweave documentation
  Rdiff			Diff R output ignoring headers etc
  config		Obtain configuration information about R
  javareconf		Update the Java configuration variables
  rtags                 Create Emacs-style tag files from C, R, and Rd files

Please use '\''R CMD command --help'\'' to obtain further information about
the usage of '\''command'\''.

Options --arch, --no-environ, --no-init-file, --no-site-file and --vanilla
can be placed between R and CMD, to apply to R processes run by '\''command'\''

Report bugs at bugs.r-project.org '
+ SED=/bin/sed
+ export SED
+ args=
+ debugger=
+ debugger_args=
+ gui=
+ test -n --slave
+ case ${1} in
+ args=' --slave'
+ shift
+ test -n --no-restore
+ case ${1} in
+ args=' --slave --no-restore'
+ shift
+ test -n --file=/xcpEngine-master/utils/nodeCoverage.R
+ case ${1} in
++ /bin/sed -e 's/[^=]*=//'
++ /bin/sed -e 's/ /~+~/g'
++ echo --file=/xcpEngine-master/utils/nodeCoverage.R
+ a=/xcpEngine-master/utils/nodeCoverage.R
+ args=' --slave --no-restore --file=/xcpEngine-master/utils/nodeCoverage.R'
+ shift
+ test -n --args
+ case ${1} in
+ break
+ . /usr/lib/R/etc/ldpaths
++ : /usr/lib/jvm/default-java
++ : /usr/lib/jvm/default-java/jre/lib/amd64/server
++ test -n /usr/lib/x86_64-linux-gnu
++ : /usr/lib/R/lib:/usr/lib/x86_64-linux-gnu
++ test -n /usr/lib/jvm/default-java/jre/lib/amd64/server
++ R_LD_LIBRARY_PATH=/usr/lib/R/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/default-java/jre/lib/amd64/server
++ test -z /.singularity.d/libs
++ LD_LIBRARY_PATH=/usr/lib/R/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/default-java/jre/lib/amd64/server:/.singularity.d/libs
++ export LD_LIBRARY_PATH
+ R_binary=/usr/lib/R/bin/exec/R
+ export R_ARCH
+ case "${gui}" in
+ test -x /usr/lib/R
+ :
+ test -z ''
+ exec /usr/lib/R/bin/exec/R --slave --no-restore --file=/xcpEngine-master/utils/nodeCoverage.R --args -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -x /xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D -n /xcpEngine-master/atlas/miccai/miccaiNodeNames.txt
+ echo 23 30 31 32 36 37 38 39 47 48 55 56 57 58 59 60 71 72 73 100 101 102 103 104 105 106 107 108 109 112 113 114 115 116 117 118 119 120 121 122 123 124 125 128 129 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207
+ echo R_Accumbens_Area L_Accumbens_Area R_Amygdala L_Amygdala R_Caudate L_Caudate R_Cerebellum_Exterior L_Cerebellum_Exterior R_Hippocampus L_Hippocampus R_Pallidum L_Pallidum R_Putamen L_Putamen R_Thalamus_Proper L_Thalamus_Proper Cerebellar_Vermal_Lobules_I-V Cerebellar_Vermal_Lobules_VI-VII Cerebellar_Vermal_Lobules_VIII-X R_ACgG L_ACgG R_AIns L_AIns R_AOrG L_AOrG R_AnG L_AnG R_Calc L_Calc R_CO L_CO R_Cun L_Cun R_Ent L_Ent R_FO L_FO R_FRP L_FRP R_FuG L_FuG R_GRe L_GRe R_IOG L_IOG R_ITG L_ITG R_LiG L_LiG R_LOrG L_LOrG R_MCgG L_MCgG R_MFC L_MFC R_MFG L_MFG R_MOG L_MOG R_MOrG L_MOrG R_MPoG L_MPoG R_MPrG L_MPrG R_MSFG L_MSFG R_MTG L_MTG R_OCP L_OCP R_OFuG L_OFuG R_OpIFG L_OpIFG R_OrIFG L_OrIFG R_PCgG L_PCgG R_PCu L_PCu R_PHG L_PHG R_PIns L_PIns R_PO L_PO R_PoG L_PoG R_POrG L_POrG R_PP L_PP R_PrG L_PrG R_PT L_PT R_SCA L_SCA R_SFG L_SFG R_SMC L_SMC R_SMG L_SMG R_SOG L_SOG R_SPL L_SPL R_STG L_STG R_TMP L_TMP R_TrIFG L_TrIFG R_TTG L_TTG
+ unset qargs
+ qargs='
      -a       /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
      -n       miccai
      -i       /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D
      -r       /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D
      -p       sub-ADS4107
               -w 0'
+ subroutine @1.3.4 Computing atlas statistics
+ signpost=@1.3.4
+ routine_map='· START
· @0.1
· @1
· @1.2
· @1.2.1
· @1.2.7
· @1.3.3
· @1.3.4'
+ shift
+ local 'subroutine_description=Computing atlas statistics'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.3.4 '
+ [[ -n Computing atlas statistics ]]
+ echo '· @1.3.4 Computing atlas statistics'
· @1.3.4 Computing atlas statistics
+ apply_exec Statistic:mean /dev/null xcp quantifyAtlas -v %INPUT -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ local deriv derivative derivatives echo_var final_cmd match output output_long property value values process_generic process_specific
+ declare -A d
+ contains Statistic:mean :
+ [[ Statistic:mean =~ : ]]
++ strslice Statistic:mean 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:mean
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ property=Statistic
++ strslice Statistic:mean 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:mean
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=mean
++ c=' mean'
+++ echo mean
++ c=mean
++ i=mean
++ i=mean
++ unset c
++ [[ -n '' ]]
++ echo mean
+ values=mean
+ values=(${values//|/ })
+ output=/dev/null
+ [[ / == \/ ]]
+ output_long=/dev/null.nii.gz
+ shift 2
+ contains xcp ECHO:
+ [[ xcp =~ ECHO: ]]
+ process_generic='xcp quantifyAtlas -v %INPUT -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ load_derivatives
+ local derivative deriv_json d_name dfloat_names
+ deriv_json=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ [[ -n '' ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ deriv[cxt]='{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+ dfloat_names=($(json_keys derivatives_floating))
++ json_keys derivatives_floating
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{}'
++ ((  1 == 2  ))
+ derivatives=($(json_keys deriv[cxt]))
++ json_keys 'deriv[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ ((  1 == 2  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse corticalThickness
+ local key keys
+ d=()
+ d[Name]=corticalThickness
++ json_keys 'deriv[cxt]' corticalThickness
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains mean mean
+ [[ mean =~ mean ]]
+ match=1
+ break
+ ((  1 == 1  ))
+ [[ -n '' ]]
+ process_specific='xcp quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ process_specific='xcp quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ process_specific='xcp quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_corticalThickness -d anatomical_corticalThickness -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ process_specific='xcp quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_corticalThickness -d anatomical_corticalThickness -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ exec_xcp quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_corticalThickness -d anatomical_corticalThickness -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo_cmd '${XCPEDIR}/utils/quantifyAtlas' -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_corticalThickness -d anatomical_corticalThickness -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ local 'process_command=${XCPEDIR}/utils/quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_corticalThickness -d anatomical_corticalThickness -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ printx /xcpEngine-master/core/CONSOLE_COMMAND
+ local 'file=                             -   -   -
>> ${process_command}'
+ eval 'echo -e "                             -   -   -
>> ${process_command}"'
++ echo -e '                             -   -   -
>> ${XCPEDIR}/utils/quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_corticalThickness -d anatomical_corticalThickness -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
                             -   -   -
>> ${XCPEDIR}/utils/quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_corticalThickness -d anatomical_corticalThickness -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ echo_cmd '${XCPEDIR}/utils/quantifyAtlas' -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_corticalThickness -d anatomical_corticalThickness -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ /xcpEngine-master/utils/quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_corticalThickness -d anatomical_corticalThickness -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ source /xcpEngine-master/core/constants
++ readonly 'RED=\033[0;31m'
++ RED='\033[0;31m'
++ readonly 'CYA=\033[0;36m'
++ CYA='\033[0;36m'
++ readonly 'LGR=\033[0;37m'
++ LGR='\033[0;37m'
++ readonly 'RCL=\033[0m'
++ RCL='\033[0m'
++ readonly ORIENTATION_ITK=RAI
++ ORIENTATION_ITK=RAI
++ readonly SIGMA=2.35482004503
++ SIGMA=2.35482004503
++ readonly PI=3.14159265359
++ PI=3.14159265359
++ readonly NBASE=2.71828182846
++ NBASE=2.71828182846
++ readonly PHI=1.61803398875
++ PHI=1.61803398875
++ [[ ! -d '' ]]
++ readonly BRAINSPACE=/xcpEngine-master/space
++ BRAINSPACE=/xcpEngine-master/space
++ [[ ! -d '' ]]
++ readonly BRAINATLAS=/xcpEngine-master/atlas
++ BRAINATLAS=/xcpEngine-master/atlas
++ [[ -z /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process ]]
++ unset s d a
++ declare -A s d a
+ source /xcpEngine-master/core/functions/library.sh
++ LIBRARY=/xcpEngine-master/core/functions
++ source /xcpEngine-master/core/functions/abort_stream
++ source /xcpEngine-master/core/functions/abspath
++ source /xcpEngine-master/core/functions/add_reference
++ source /xcpEngine-master/core/functions/apply_exec
++ source /xcpEngine-master/core/functions/arithmetic
++ source /xcpEngine-master/core/functions/assign
++ source /xcpEngine-master/core/functions/atlas
++ source /xcpEngine-master/core/functions/atlas_check
++ source /xcpEngine-master/core/functions/atlas_parse
++ source /xcpEngine-master/core/functions/atlas_set
++ source /xcpEngine-master/core/functions/cleanup
++ source /xcpEngine-master/core/functions/configure
++ source /xcpEngine-master/core/functions/configures
++ source /xcpEngine-master/core/functions/contains
++ source /xcpEngine-master/core/functions/define
++ source /xcpEngine-master/core/functions/derivative
++ source /xcpEngine-master/core/functions/derivative_cxt
++ source /xcpEngine-master/core/functions/derivative_floats
++ source /xcpEngine-master/core/functions/derivative_inherit
++ source /xcpEngine-master/core/functions/derivative_parse
++ source /xcpEngine-master/core/functions/derivative_set
++ source /xcpEngine-master/core/functions/doi2bib
++ source /xcpEngine-master/core/functions/echo_cmd
++ source /xcpEngine-master/core/functions/exec_afni
++ source /xcpEngine-master/core/functions/exec_ants
++ source /xcpEngine-master/core/functions/exec_c3d
++ source /xcpEngine-master/core/functions/exec_fsl
++ source /xcpEngine-master/core/functions/exec_sys
++ source /xcpEngine-master/core/functions/exec_xcp
++ source /xcpEngine-master/core/functions/final
++ source /xcpEngine-master/core/functions/import_image
++ source /xcpEngine-master/core/functions/import_metadata
++ source /xcpEngine-master/core/functions/input
++ source /xcpEngine-master/core/functions/is_1D
++ source /xcpEngine-master/core/functions/is_image
++ source /xcpEngine-master/core/functions/is_integer
++ source /xcpEngine-master/core/functions/is+integer
++ source /xcpEngine-master/core/functions/is_numeric
++ source /xcpEngine-master/core/functions/is+numeric
++ source /xcpEngine-master/core/functions/join_by
++ source /xcpEngine-master/core/functions/json_get
++ source /xcpEngine-master/core/functions/json_get_array
++ source /xcpEngine-master/core/functions/json_keys
++ source /xcpEngine-master/core/functions/json_merge
++ source /xcpEngine-master/core/functions/json_multiset
++ source /xcpEngine-master/core/functions/json_object
++ source /xcpEngine-master/core/functions/json_print
++ source /xcpEngine-master/core/functions/json_rm
++ source /xcpEngine-master/core/functions/json_set
++ source /xcpEngine-master/core/functions/json_set_array
++ source /xcpEngine-master/core/functions/lc_prefix
++ source /xcpEngine-master/core/functions/load_atlas
++ source /xcpEngine-master/core/functions/load_derivatives
++ source /xcpEngine-master/core/functions/matchexact
++ source /xcpEngine-master/core/functions/matching
++ source /xcpEngine-master/core/functions/ninstances
++ source /xcpEngine-master/core/functions/output
++ source /xcpEngine-master/core/functions/printx
++ source /xcpEngine-master/core/functions/proc_afni
++ source /xcpEngine-master/core/functions/proc_ants
++ source /xcpEngine-master/core/functions/proc_c3d
++ source /xcpEngine-master/core/functions/proc_cmd
++ source /xcpEngine-master/core/functions/proc_fsl
++ source /xcpEngine-master/core/functions/proc_xcp
++ source /xcpEngine-master/core/functions/process
++ source /xcpEngine-master/core/functions/processed
++ source /xcpEngine-master/core/functions/qc
++ source /xcpEngine-master/core/functions/quality_metric
++ source /xcpEngine-master/core/functions/repeat
++ source /xcpEngine-master/core/functions/require
++ source /xcpEngine-master/core/functions/rerun
++ source /xcpEngine-master/core/functions/rln
++ source /xcpEngine-master/core/functions/routine
++ source /xcpEngine-master/core/functions/routine_end
++ source /xcpEngine-master/core/functions/set_space
++ source /xcpEngine-master/core/functions/space_get
++ source /xcpEngine-master/core/functions/space_set
++ source /xcpEngine-master/core/functions/strslice
++ source /xcpEngine-master/core/functions/subroutine
++ source /xcpEngine-master/core/functions/subject_parse
++ source /xcpEngine-master/core/functions/transform_set
++ source /xcpEngine-master/core/functions/verbose
++ source /xcpEngine-master/core/functions/warpspace
++ source /xcpEngine-master/core/functions/write_atlas
++ source /xcpEngine-master/core/functions/write_config_safe
++ source /xcpEngine-master/core/functions/write_config
++ source /xcpEngine-master/core/functions/write_derivative
++ source /xcpEngine-master/core/functions/write_output
++ source /xcpEngine-master/core/functions/zscore_image
+ stats=mean
+ overwrite=1
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ voxel=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ ((  1 == 1  ))
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ stats=mean
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ opath=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ oroot=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_corticalThickness-quantifyAtlas
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ dname=anatomical_corticalThickness_
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ atlas=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ ((  1 == 1  ))
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ aname=miccai
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ index=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ rname=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ prpnd=sub-ADS4107
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ overwrite=0
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ ((  overwrite == 0  ))
+ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv ]]
+ echo '[already complete]'
+ exit 0
+ is_image /dev/null.nii.gz
+ [[ -n /dev/null.nii.gz ]]
+++ readlink -f /dev/null.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /dev/null.nii.gz
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse gmd
+ local key keys
+ d=()
+ d[Name]=gmd
++ json_keys 'deriv[cxt]' gmd
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains mean mean
+ [[ mean =~ mean ]]
+ match=1
+ break
+ ((  1 == 1  ))
+ [[ -n '' ]]
+ process_specific='xcp quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ process_specific='xcp quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ process_specific='xcp quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_gmd -d anatomical_gmd -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ process_specific='xcp quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_gmd -d anatomical_gmd -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ exec_xcp quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_gmd -d anatomical_gmd -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo_cmd '${XCPEDIR}/utils/quantifyAtlas' -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_gmd -d anatomical_gmd -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ local 'process_command=${XCPEDIR}/utils/quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_gmd -d anatomical_gmd -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ printx /xcpEngine-master/core/CONSOLE_COMMAND
+ local 'file=                             -   -   -
>> ${process_command}'
+ eval 'echo -e "                             -   -   -
>> ${process_command}"'
++ echo -e '                             -   -   -
>> ${XCPEDIR}/utils/quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_gmd -d anatomical_gmd -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
                             -   -   -
>> ${XCPEDIR}/utils/quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_gmd -d anatomical_gmd -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ echo_cmd '${XCPEDIR}/utils/quantifyAtlas' -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_gmd -d anatomical_gmd -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ /xcpEngine-master/utils/quantifyAtlas -v /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz -s mean -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_gmd -d anatomical_gmd -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ source /xcpEngine-master/core/constants
++ readonly 'RED=\033[0;31m'
++ RED='\033[0;31m'
++ readonly 'CYA=\033[0;36m'
++ CYA='\033[0;36m'
++ readonly 'LGR=\033[0;37m'
++ LGR='\033[0;37m'
++ readonly 'RCL=\033[0m'
++ RCL='\033[0m'
++ readonly ORIENTATION_ITK=RAI
++ ORIENTATION_ITK=RAI
++ readonly SIGMA=2.35482004503
++ SIGMA=2.35482004503
++ readonly PI=3.14159265359
++ PI=3.14159265359
++ readonly NBASE=2.71828182846
++ NBASE=2.71828182846
++ readonly PHI=1.61803398875
++ PHI=1.61803398875
++ [[ ! -d '' ]]
++ readonly BRAINSPACE=/xcpEngine-master/space
++ BRAINSPACE=/xcpEngine-master/space
++ [[ ! -d '' ]]
++ readonly BRAINATLAS=/xcpEngine-master/atlas
++ BRAINATLAS=/xcpEngine-master/atlas
++ [[ -z /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process ]]
++ unset s d a
++ declare -A s d a
+ source /xcpEngine-master/core/functions/library.sh
++ LIBRARY=/xcpEngine-master/core/functions
++ source /xcpEngine-master/core/functions/abort_stream
++ source /xcpEngine-master/core/functions/abspath
++ source /xcpEngine-master/core/functions/add_reference
++ source /xcpEngine-master/core/functions/apply_exec
++ source /xcpEngine-master/core/functions/arithmetic
++ source /xcpEngine-master/core/functions/assign
++ source /xcpEngine-master/core/functions/atlas
++ source /xcpEngine-master/core/functions/atlas_check
++ source /xcpEngine-master/core/functions/atlas_parse
++ source /xcpEngine-master/core/functions/atlas_set
++ source /xcpEngine-master/core/functions/cleanup
++ source /xcpEngine-master/core/functions/configure
++ source /xcpEngine-master/core/functions/configures
++ source /xcpEngine-master/core/functions/contains
++ source /xcpEngine-master/core/functions/define
++ source /xcpEngine-master/core/functions/derivative
++ source /xcpEngine-master/core/functions/derivative_cxt
++ source /xcpEngine-master/core/functions/derivative_floats
++ source /xcpEngine-master/core/functions/derivative_inherit
++ source /xcpEngine-master/core/functions/derivative_parse
++ source /xcpEngine-master/core/functions/derivative_set
++ source /xcpEngine-master/core/functions/doi2bib
++ source /xcpEngine-master/core/functions/echo_cmd
++ source /xcpEngine-master/core/functions/exec_afni
++ source /xcpEngine-master/core/functions/exec_ants
++ source /xcpEngine-master/core/functions/exec_c3d
++ source /xcpEngine-master/core/functions/exec_fsl
++ source /xcpEngine-master/core/functions/exec_sys
++ source /xcpEngine-master/core/functions/exec_xcp
++ source /xcpEngine-master/core/functions/final
++ source /xcpEngine-master/core/functions/import_image
++ source /xcpEngine-master/core/functions/import_metadata
++ source /xcpEngine-master/core/functions/input
++ source /xcpEngine-master/core/functions/is_1D
++ source /xcpEngine-master/core/functions/is_image
++ source /xcpEngine-master/core/functions/is_integer
++ source /xcpEngine-master/core/functions/is+integer
++ source /xcpEngine-master/core/functions/is_numeric
++ source /xcpEngine-master/core/functions/is+numeric
++ source /xcpEngine-master/core/functions/join_by
++ source /xcpEngine-master/core/functions/json_get
++ source /xcpEngine-master/core/functions/json_get_array
++ source /xcpEngine-master/core/functions/json_keys
++ source /xcpEngine-master/core/functions/json_merge
++ source /xcpEngine-master/core/functions/json_multiset
++ source /xcpEngine-master/core/functions/json_object
++ source /xcpEngine-master/core/functions/json_print
++ source /xcpEngine-master/core/functions/json_rm
++ source /xcpEngine-master/core/functions/json_set
++ source /xcpEngine-master/core/functions/json_set_array
++ source /xcpEngine-master/core/functions/lc_prefix
++ source /xcpEngine-master/core/functions/load_atlas
++ source /xcpEngine-master/core/functions/load_derivatives
++ source /xcpEngine-master/core/functions/matchexact
++ source /xcpEngine-master/core/functions/matching
++ source /xcpEngine-master/core/functions/ninstances
++ source /xcpEngine-master/core/functions/output
++ source /xcpEngine-master/core/functions/printx
++ source /xcpEngine-master/core/functions/proc_afni
++ source /xcpEngine-master/core/functions/proc_ants
++ source /xcpEngine-master/core/functions/proc_c3d
++ source /xcpEngine-master/core/functions/proc_cmd
++ source /xcpEngine-master/core/functions/proc_fsl
++ source /xcpEngine-master/core/functions/proc_xcp
++ source /xcpEngine-master/core/functions/process
++ source /xcpEngine-master/core/functions/processed
++ source /xcpEngine-master/core/functions/qc
++ source /xcpEngine-master/core/functions/quality_metric
++ source /xcpEngine-master/core/functions/repeat
++ source /xcpEngine-master/core/functions/require
++ source /xcpEngine-master/core/functions/rerun
++ source /xcpEngine-master/core/functions/rln
++ source /xcpEngine-master/core/functions/routine
++ source /xcpEngine-master/core/functions/routine_end
++ source /xcpEngine-master/core/functions/set_space
++ source /xcpEngine-master/core/functions/space_get
++ source /xcpEngine-master/core/functions/space_set
++ source /xcpEngine-master/core/functions/strslice
++ source /xcpEngine-master/core/functions/subroutine
++ source /xcpEngine-master/core/functions/subject_parse
++ source /xcpEngine-master/core/functions/transform_set
++ source /xcpEngine-master/core/functions/verbose
++ source /xcpEngine-master/core/functions/warpspace
++ source /xcpEngine-master/core/functions/write_atlas
++ source /xcpEngine-master/core/functions/write_config_safe
++ source /xcpEngine-master/core/functions/write_config
++ source /xcpEngine-master/core/functions/write_derivative
++ source /xcpEngine-master/core/functions/write_output
++ source /xcpEngine-master/core/functions/zscore_image
+ stats=mean
+ overwrite=1
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ voxel=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ ((  1 == 1  ))
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ stats=mean
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ opath=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ oroot=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mean_gmd-quantifyAtlas
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ dname=anatomical_gmd_
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ atlas=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ ((  1 == 1  ))
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ aname=miccai
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ index=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ rname=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ prpnd=sub-ADS4107
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ overwrite=0
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ ((  overwrite == 0  ))
+ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv ]]
+ echo '[already complete]'
+ exit 0
+ is_image /dev/null.nii.gz
+ [[ -n /dev/null.nii.gz ]]
+++ readlink -f /dev/null.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /dev/null.nii.gz
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse intensity
+ local key keys
+ d=()
+ d[Name]=intensity
++ json_keys 'deriv[cxt]' intensity
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 3
+++ echo 3
++ ((  3 == 2  ))
+ d[${key}]=3
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo jlf
+++ echo jlf
++ ((  3 == 2  ))
+ d[${key}]=jlf
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse mask
+ local key keys
+ d=()
+ d[Name]=mask
++ json_keys 'deriv[cxt]' mask
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' mask Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' mask Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' mask Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' mask Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Mask
+++ echo Mask
++ ((  3 == 2  ))
+ d[${key}]=Mask
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityCSF
+ local key keys
+ d=()
+ d[Name]=probabilityCSF
++ json_keys 'deriv[cxt]' probabilityCSF
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityGM
+ local key keys
+ d=()
+ d[Name]=probabilityGM
++ json_keys 'deriv[cxt]' probabilityGM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityWM
+ local key keys
+ d=()
+ d[Name]=probabilityWM
++ json_keys 'deriv[cxt]' probabilityWM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation
+ local key keys
+ d=()
+ d[Name]=segmentation
++ json_keys 'deriv[cxt]' segmentation
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation3class
+ local key keys
+ d=()
+ d[Name]=segmentation3class
++ json_keys 'deriv[cxt]' segmentation3class
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ apply_exec Statistic:mean /dev/null sys atlas_set miccai RegionalMean%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_%NAME.csv
+ local deriv derivative derivatives echo_var final_cmd match output output_long property value values process_generic process_specific
+ declare -A d
+ contains Statistic:mean :
+ [[ Statistic:mean =~ : ]]
++ strslice Statistic:mean 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:mean
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ property=Statistic
++ strslice Statistic:mean 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:mean
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=mean
++ c=' mean'
+++ echo mean
++ c=mean
++ i=mean
++ i=mean
++ unset c
++ [[ -n '' ]]
++ echo mean
+ values=mean
+ values=(${values//|/ })
+ output=/dev/null
+ [[ / == \/ ]]
+ output_long=/dev/null.nii.gz
+ shift 2
+ contains sys ECHO:
+ [[ sys =~ ECHO: ]]
+ process_generic='sys atlas_set miccai RegionalMean%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_%NAME.csv'
+ load_derivatives
+ local derivative deriv_json d_name dfloat_names
+ deriv_json=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ [[ -n '' ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ deriv[cxt]='{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+ dfloat_names=($(json_keys derivatives_floating))
++ json_keys derivatives_floating
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{}'
++ ((  1 == 2  ))
+ derivatives=($(json_keys deriv[cxt]))
++ json_keys 'deriv[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ ((  1 == 2  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse corticalThickness
+ local key keys
+ d=()
+ d[Name]=corticalThickness
++ json_keys 'deriv[cxt]' corticalThickness
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains mean mean
+ [[ mean =~ mean ]]
+ match=1
+ break
+ ((  1 == 1  ))
+ [[ -n '' ]]
+ process_specific='sys atlas_set miccai RegionalMean%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_%NAME.csv'
+ process_specific='sys atlas_set miccai RegionalMean%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_%NAME.csv'
+ process_specific='sys atlas_set miccai RegionalMean%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv'
+ process_specific='sys atlas_set miccai RegionalMeanCorticalThickness /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv'
+ exec_sys atlas_set miccai RegionalMeanCorticalThickness /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo_cmd atlas_set miccai RegionalMeanCorticalThickness /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv
+ local 'process_command=atlas_set miccai RegionalMeanCorticalThickness /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv'
+ printx /xcpEngine-master/core/CONSOLE_COMMAND
+ local 'file=                             -   -   -
>> ${process_command}'
+ eval 'echo -e "                             -   -   -
>> ${process_command}"'
++ echo -e '                             -   -   -
>> atlas_set miccai RegionalMeanCorticalThickness /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv'
                             -   -   -
>> atlas_set miccai RegionalMeanCorticalThickness /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv
+ atlas_set miccai RegionalMeanCorticalThickness /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv
+ json_set 'atlas[cxt]' miccai RegionalMeanCorticalThickness /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai" += {"RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv"}'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'atlas[cxt]=${json_new[@]}'
++ atlas[cxt]='{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv" } }'
+ is_image /dev/null.nii.gz
+ [[ -n /dev/null.nii.gz ]]
+++ readlink -f /dev/null.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /dev/null.nii.gz
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse gmd
+ local key keys
+ d=()
+ d[Name]=gmd
++ json_keys 'deriv[cxt]' gmd
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains mean mean
+ [[ mean =~ mean ]]
+ match=1
+ break
+ ((  1 == 1  ))
+ [[ -n '' ]]
+ process_specific='sys atlas_set miccai RegionalMean%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_%NAME.csv'
+ process_specific='sys atlas_set miccai RegionalMean%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_%NAME.csv'
+ process_specific='sys atlas_set miccai RegionalMean%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv'
+ process_specific='sys atlas_set miccai RegionalMeanGmd /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv'
+ exec_sys atlas_set miccai RegionalMeanGmd /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo_cmd atlas_set miccai RegionalMeanGmd /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv
+ local 'process_command=atlas_set miccai RegionalMeanGmd /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv'
+ printx /xcpEngine-master/core/CONSOLE_COMMAND
+ local 'file=                             -   -   -
>> ${process_command}'
+ eval 'echo -e "                             -   -   -
>> ${process_command}"'
++ echo -e '                             -   -   -
>> atlas_set miccai RegionalMeanGmd /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv'
                             -   -   -
>> atlas_set miccai RegionalMeanGmd /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv
+ atlas_set miccai RegionalMeanGmd /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv
+ json_set 'atlas[cxt]' miccai RegionalMeanGmd /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai" += {"RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv"}'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"RegionalMeanCorticalThickness":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'atlas[cxt]=${json_new[@]}'
++ atlas[cxt]='{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv" } }'
+ is_image /dev/null.nii.gz
+ [[ -n /dev/null.nii.gz ]]
+++ readlink -f /dev/null.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /dev/null.nii.gz
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse intensity
+ local key keys
+ d=()
+ d[Name]=intensity
++ json_keys 'deriv[cxt]' intensity
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 3
+++ echo 3
++ ((  3 == 2  ))
+ d[${key}]=3
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo jlf
+++ echo jlf
++ ((  3 == 2  ))
+ d[${key}]=jlf
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse mask
+ local key keys
+ d=()
+ d[Name]=mask
++ json_keys 'deriv[cxt]' mask
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' mask Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' mask Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' mask Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' mask Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Mask
+++ echo Mask
++ ((  3 == 2  ))
+ d[${key}]=Mask
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityCSF
+ local key keys
+ d=()
+ d[Name]=probabilityCSF
++ json_keys 'deriv[cxt]' probabilityCSF
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityGM
+ local key keys
+ d=()
+ d[Name]=probabilityGM
++ json_keys 'deriv[cxt]' probabilityGM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityWM
+ local key keys
+ d=()
+ d[Name]=probabilityWM
++ json_keys 'deriv[cxt]' probabilityWM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation
+ local key keys
+ d=()
+ d[Name]=segmentation
++ json_keys 'deriv[cxt]' segmentation
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation3class
+ local key keys
+ d=()
+ d[Name]=segmentation3class
++ json_keys 'deriv[cxt]' segmentation3class
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mean == all ]]
+ contains null mean
+ [[ null =~ mean ]]
+ ((  0 == 1  ))
+ subroutine @1.3.5
+ signpost=@1.3.5
+ routine_map='· START
· @0.1
· @1
· @1.2
· @1.2.1
· @1.2.7
· @1.3.3
· @1.3.4
· @1.3.5'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.3.5 '
+ [[ -n '' ]]
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo '· @1.3.5 '
· @1.3.5 
+ apply_exec Statistic:median /dev/null xcp quantifyAtlas -v %INPUT -s median -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_median_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_median_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ local deriv derivative derivatives echo_var final_cmd match output output_long property value values process_generic process_specific
+ declare -A d
+ contains Statistic:median :
+ [[ Statistic:median =~ : ]]
++ strslice Statistic:median 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:median
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ property=Statistic
++ strslice Statistic:median 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:median
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=median
++ c=' median'
+++ echo median
++ c=median
++ i=median
++ i=median
++ unset c
++ [[ -n '' ]]
++ echo median
+ values=median
+ values=(${values//|/ })
+ output=/dev/null
+ [[ / == \/ ]]
+ output_long=/dev/null.nii.gz
+ shift 2
+ contains xcp ECHO:
+ [[ xcp =~ ECHO: ]]
+ process_generic='xcp quantifyAtlas -v %INPUT -s median -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_median_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_median_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ load_derivatives
+ local derivative deriv_json d_name dfloat_names
+ deriv_json=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ [[ -n '' ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ deriv[cxt]='{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+ dfloat_names=($(json_keys derivatives_floating))
++ json_keys derivatives_floating
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{}'
++ ((  1 == 2  ))
+ derivatives=($(json_keys deriv[cxt]))
++ json_keys 'deriv[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ ((  1 == 2  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse corticalThickness
+ local key keys
+ d=()
+ d[Name]=corticalThickness
++ json_keys 'deriv[cxt]' corticalThickness
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains mean median
+ [[ mean =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse gmd
+ local key keys
+ d=()
+ d[Name]=gmd
++ json_keys 'deriv[cxt]' gmd
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains mean median
+ [[ mean =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse intensity
+ local key keys
+ d=()
+ d[Name]=intensity
++ json_keys 'deriv[cxt]' intensity
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 3
+++ echo 3
++ ((  3 == 2  ))
+ d[${key}]=3
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo jlf
+++ echo jlf
++ ((  3 == 2  ))
+ d[${key}]=jlf
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse mask
+ local key keys
+ d=()
+ d[Name]=mask
++ json_keys 'deriv[cxt]' mask
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' mask Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' mask Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' mask Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' mask Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Mask
+++ echo Mask
++ ((  3 == 2  ))
+ d[${key}]=Mask
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityCSF
+ local key keys
+ d=()
+ d[Name]=probabilityCSF
++ json_keys 'deriv[cxt]' probabilityCSF
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityGM
+ local key keys
+ d=()
+ d[Name]=probabilityGM
++ json_keys 'deriv[cxt]' probabilityGM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityWM
+ local key keys
+ d=()
+ d[Name]=probabilityWM
++ json_keys 'deriv[cxt]' probabilityWM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation
+ local key keys
+ d=()
+ d[Name]=segmentation
++ json_keys 'deriv[cxt]' segmentation
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation3class
+ local key keys
+ d=()
+ d[Name]=segmentation3class
++ json_keys 'deriv[cxt]' segmentation3class
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ apply_exec Statistic:median /dev/null sys atlas_set miccai RegionalMedian%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_median_%NAME.csv
+ local deriv derivative derivatives echo_var final_cmd match output output_long property value values process_generic process_specific
+ declare -A d
+ contains Statistic:median :
+ [[ Statistic:median =~ : ]]
++ strslice Statistic:median 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:median
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ property=Statistic
++ strslice Statistic:median 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:median
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=median
++ c=' median'
+++ echo median
++ c=median
++ i=median
++ i=median
++ unset c
++ [[ -n '' ]]
++ echo median
+ values=median
+ values=(${values//|/ })
+ output=/dev/null
+ [[ / == \/ ]]
+ output_long=/dev/null.nii.gz
+ shift 2
+ contains sys ECHO:
+ [[ sys =~ ECHO: ]]
+ process_generic='sys atlas_set miccai RegionalMedian%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_median_%NAME.csv'
+ load_derivatives
+ local derivative deriv_json d_name dfloat_names
+ deriv_json=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ [[ -n '' ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ deriv[cxt]='{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+ dfloat_names=($(json_keys derivatives_floating))
++ json_keys derivatives_floating
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{}'
++ ((  1 == 2  ))
+ derivatives=($(json_keys deriv[cxt]))
++ json_keys 'deriv[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ ((  1 == 2  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse corticalThickness
+ local key keys
+ d=()
+ d[Name]=corticalThickness
++ json_keys 'deriv[cxt]' corticalThickness
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains mean median
+ [[ mean =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse gmd
+ local key keys
+ d=()
+ d[Name]=gmd
++ json_keys 'deriv[cxt]' gmd
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains mean median
+ [[ mean =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse intensity
+ local key keys
+ d=()
+ d[Name]=intensity
++ json_keys 'deriv[cxt]' intensity
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 3
+++ echo 3
++ ((  3 == 2  ))
+ d[${key}]=3
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo jlf
+++ echo jlf
++ ((  3 == 2  ))
+ d[${key}]=jlf
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse mask
+ local key keys
+ d=()
+ d[Name]=mask
++ json_keys 'deriv[cxt]' mask
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' mask Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' mask Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' mask Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' mask Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Mask
+++ echo Mask
++ ((  3 == 2  ))
+ d[${key}]=Mask
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityCSF
+ local key keys
+ d=()
+ d[Name]=probabilityCSF
++ json_keys 'deriv[cxt]' probabilityCSF
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityGM
+ local key keys
+ d=()
+ d[Name]=probabilityGM
++ json_keys 'deriv[cxt]' probabilityGM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityWM
+ local key keys
+ d=()
+ d[Name]=probabilityWM
++ json_keys 'deriv[cxt]' probabilityWM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation
+ local key keys
+ d=()
+ d[Name]=segmentation
++ json_keys 'deriv[cxt]' segmentation
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation3class
+ local key keys
+ d=()
+ d[Name]=segmentation3class
++ json_keys 'deriv[cxt]' segmentation3class
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ median == all ]]
+ contains null median
+ [[ null =~ median ]]
+ ((  0 == 1  ))
+ subroutine @1.3.6
+ signpost=@1.3.6
+ routine_map='· START
· @0.1
· @1
· @1.2
· @1.2.1
· @1.2.7
· @1.3.3
· @1.3.4
· @1.3.5
· @1.3.6'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.3.6 '
+ [[ -n '' ]]
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo '· @1.3.6 '
· @1.3.6 
+ apply_exec Statistic:mode /dev/null xcp quantifyAtlas -v %INPUT -s mode -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mode_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mode_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ local deriv derivative derivatives echo_var final_cmd match output output_long property value values process_generic process_specific
+ declare -A d
+ contains Statistic:mode :
+ [[ Statistic:mode =~ : ]]
++ strslice Statistic:mode 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:mode
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ property=Statistic
++ strslice Statistic:mode 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:mode
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=mode
++ c=' mode'
+++ echo mode
++ c=mode
++ i=mode
++ i=mode
++ unset c
++ [[ -n '' ]]
++ echo mode
+ values=mode
+ values=(${values//|/ })
+ output=/dev/null
+ [[ / == \/ ]]
+ output_long=/dev/null.nii.gz
+ shift 2
+ contains xcp ECHO:
+ [[ xcp =~ ECHO: ]]
+ process_generic='xcp quantifyAtlas -v %INPUT -s mode -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mode_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_mode_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ load_derivatives
+ local derivative deriv_json d_name dfloat_names
+ deriv_json=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ [[ -n '' ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ deriv[cxt]='{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+ dfloat_names=($(json_keys derivatives_floating))
++ json_keys derivatives_floating
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{}'
++ ((  1 == 2  ))
+ derivatives=($(json_keys deriv[cxt]))
++ json_keys 'deriv[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ ((  1 == 2  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse corticalThickness
+ local key keys
+ d=()
+ d[Name]=corticalThickness
++ json_keys 'deriv[cxt]' corticalThickness
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains mean mode
+ [[ mean =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse gmd
+ local key keys
+ d=()
+ d[Name]=gmd
++ json_keys 'deriv[cxt]' gmd
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains mean mode
+ [[ mean =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse intensity
+ local key keys
+ d=()
+ d[Name]=intensity
++ json_keys 'deriv[cxt]' intensity
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 3
+++ echo 3
++ ((  3 == 2  ))
+ d[${key}]=3
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo jlf
+++ echo jlf
++ ((  3 == 2  ))
+ d[${key}]=jlf
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse mask
+ local key keys
+ d=()
+ d[Name]=mask
++ json_keys 'deriv[cxt]' mask
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' mask Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' mask Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' mask Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' mask Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Mask
+++ echo Mask
++ ((  3 == 2  ))
+ d[${key}]=Mask
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityCSF
+ local key keys
+ d=()
+ d[Name]=probabilityCSF
++ json_keys 'deriv[cxt]' probabilityCSF
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityGM
+ local key keys
+ d=()
+ d[Name]=probabilityGM
++ json_keys 'deriv[cxt]' probabilityGM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityWM
+ local key keys
+ d=()
+ d[Name]=probabilityWM
++ json_keys 'deriv[cxt]' probabilityWM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation
+ local key keys
+ d=()
+ d[Name]=segmentation
++ json_keys 'deriv[cxt]' segmentation
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation3class
+ local key keys
+ d=()
+ d[Name]=segmentation3class
++ json_keys 'deriv[cxt]' segmentation3class
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ apply_exec Statistic:mode /dev/null sys atlas_set miccai RegionalMode%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mode_%NAME.csv
+ local deriv derivative derivatives echo_var final_cmd match output output_long property value values process_generic process_specific
+ declare -A d
+ contains Statistic:mode :
+ [[ Statistic:mode =~ : ]]
++ strslice Statistic:mode 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:mode
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ property=Statistic
++ strslice Statistic:mode 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:mode
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=mode
++ c=' mode'
+++ echo mode
++ c=mode
++ i=mode
++ i=mode
++ unset c
++ [[ -n '' ]]
++ echo mode
+ values=mode
+ values=(${values//|/ })
+ output=/dev/null
+ [[ / == \/ ]]
+ output_long=/dev/null.nii.gz
+ shift 2
+ contains sys ECHO:
+ [[ sys =~ ECHO: ]]
+ process_generic='sys atlas_set miccai RegionalMode%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mode_%NAME.csv'
+ load_derivatives
+ local derivative deriv_json d_name dfloat_names
+ deriv_json=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ [[ -n '' ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ deriv[cxt]='{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+ dfloat_names=($(json_keys derivatives_floating))
++ json_keys derivatives_floating
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{}'
++ ((  1 == 2  ))
+ derivatives=($(json_keys deriv[cxt]))
++ json_keys 'deriv[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ ((  1 == 2  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse corticalThickness
+ local key keys
+ d=()
+ d[Name]=corticalThickness
++ json_keys 'deriv[cxt]' corticalThickness
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains mean mode
+ [[ mean =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse gmd
+ local key keys
+ d=()
+ d[Name]=gmd
++ json_keys 'deriv[cxt]' gmd
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains mean mode
+ [[ mean =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse intensity
+ local key keys
+ d=()
+ d[Name]=intensity
++ json_keys 'deriv[cxt]' intensity
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 3
+++ echo 3
++ ((  3 == 2  ))
+ d[${key}]=3
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo jlf
+++ echo jlf
++ ((  3 == 2  ))
+ d[${key}]=jlf
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse mask
+ local key keys
+ d=()
+ d[Name]=mask
++ json_keys 'deriv[cxt]' mask
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' mask Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' mask Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' mask Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' mask Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Mask
+++ echo Mask
++ ((  3 == 2  ))
+ d[${key}]=Mask
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityCSF
+ local key keys
+ d=()
+ d[Name]=probabilityCSF
++ json_keys 'deriv[cxt]' probabilityCSF
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityGM
+ local key keys
+ d=()
+ d[Name]=probabilityGM
++ json_keys 'deriv[cxt]' probabilityGM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityWM
+ local key keys
+ d=()
+ d[Name]=probabilityWM
++ json_keys 'deriv[cxt]' probabilityWM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation
+ local key keys
+ d=()
+ d[Name]=segmentation
++ json_keys 'deriv[cxt]' segmentation
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation3class
+ local key keys
+ d=()
+ d[Name]=segmentation3class
++ json_keys 'deriv[cxt]' segmentation3class
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ mode == all ]]
+ contains null mode
+ [[ null =~ mode ]]
+ ((  0 == 1  ))
+ subroutine @1.3.7
+ signpost=@1.3.7
+ routine_map='· START
· @0.1
· @1
· @1.2
· @1.2.1
· @1.2.7
· @1.3.3
· @1.3.4
· @1.3.5
· @1.3.6
· @1.3.7'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.3.7 '
+ [[ -n '' ]]
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo '· @1.3.7 '
· @1.3.7 
+ apply_exec Statistic:minmax /dev/null xcp quantifyAtlas -v %INPUT -s minmax -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_minmax_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_minmax_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ local deriv derivative derivatives echo_var final_cmd match output output_long property value values process_generic process_specific
+ declare -A d
+ contains Statistic:minmax :
+ [[ Statistic:minmax =~ : ]]
++ strslice Statistic:minmax 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:minmax
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ property=Statistic
++ strslice Statistic:minmax 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:minmax
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=minmax
++ c=' minmax'
+++ echo minmax
++ c=minmax
++ i=minmax
++ i=minmax
++ unset c
++ [[ -n '' ]]
++ echo minmax
+ values=minmax
+ values=(${values//|/ })
+ output=/dev/null
+ [[ / == \/ ]]
+ output_long=/dev/null.nii.gz
+ shift 2
+ contains xcp ECHO:
+ [[ xcp =~ ECHO: ]]
+ process_generic='xcp quantifyAtlas -v %INPUT -s minmax -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_minmax_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_minmax_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ load_derivatives
+ local derivative deriv_json d_name dfloat_names
+ deriv_json=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ [[ -n '' ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ deriv[cxt]='{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+ dfloat_names=($(json_keys derivatives_floating))
++ json_keys derivatives_floating
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{}'
++ ((  1 == 2  ))
+ derivatives=($(json_keys deriv[cxt]))
++ json_keys 'deriv[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ ((  1 == 2  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse corticalThickness
+ local key keys
+ d=()
+ d[Name]=corticalThickness
++ json_keys 'deriv[cxt]' corticalThickness
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains mean minmax
+ [[ mean =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse gmd
+ local key keys
+ d=()
+ d[Name]=gmd
++ json_keys 'deriv[cxt]' gmd
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains mean minmax
+ [[ mean =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse intensity
+ local key keys
+ d=()
+ d[Name]=intensity
++ json_keys 'deriv[cxt]' intensity
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 3
+++ echo 3
++ ((  3 == 2  ))
+ d[${key}]=3
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo jlf
+++ echo jlf
++ ((  3 == 2  ))
+ d[${key}]=jlf
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse mask
+ local key keys
+ d=()
+ d[Name]=mask
++ json_keys 'deriv[cxt]' mask
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' mask Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' mask Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' mask Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' mask Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Mask
+++ echo Mask
++ ((  3 == 2  ))
+ d[${key}]=Mask
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityCSF
+ local key keys
+ d=()
+ d[Name]=probabilityCSF
++ json_keys 'deriv[cxt]' probabilityCSF
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityGM
+ local key keys
+ d=()
+ d[Name]=probabilityGM
++ json_keys 'deriv[cxt]' probabilityGM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityWM
+ local key keys
+ d=()
+ d[Name]=probabilityWM
++ json_keys 'deriv[cxt]' probabilityWM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation
+ local key keys
+ d=()
+ d[Name]=segmentation
++ json_keys 'deriv[cxt]' segmentation
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation3class
+ local key keys
+ d=()
+ d[Name]=segmentation3class
++ json_keys 'deriv[cxt]' segmentation3class
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ apply_exec Statistic:minmax /dev/null sys atlas_set miccai RegionalMinMax%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_minmax_%NAME.csv
+ local deriv derivative derivatives echo_var final_cmd match output output_long property value values process_generic process_specific
+ declare -A d
+ contains Statistic:minmax :
+ [[ Statistic:minmax =~ : ]]
++ strslice Statistic:minmax 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:minmax
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ property=Statistic
++ strslice Statistic:minmax 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:minmax
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=minmax
++ c=' minmax'
+++ echo minmax
++ c=minmax
++ i=minmax
++ i=minmax
++ unset c
++ [[ -n '' ]]
++ echo minmax
+ values=minmax
+ values=(${values//|/ })
+ output=/dev/null
+ [[ / == \/ ]]
+ output_long=/dev/null.nii.gz
+ shift 2
+ contains sys ECHO:
+ [[ sys =~ ECHO: ]]
+ process_generic='sys atlas_set miccai RegionalMinMax%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_minmax_%NAME.csv'
+ load_derivatives
+ local derivative deriv_json d_name dfloat_names
+ deriv_json=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ [[ -n '' ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ deriv[cxt]='{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+ dfloat_names=($(json_keys derivatives_floating))
++ json_keys derivatives_floating
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{}'
++ ((  1 == 2  ))
+ derivatives=($(json_keys deriv[cxt]))
++ json_keys 'deriv[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ ((  1 == 2  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse corticalThickness
+ local key keys
+ d=()
+ d[Name]=corticalThickness
++ json_keys 'deriv[cxt]' corticalThickness
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains mean minmax
+ [[ mean =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse gmd
+ local key keys
+ d=()
+ d[Name]=gmd
++ json_keys 'deriv[cxt]' gmd
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains mean minmax
+ [[ mean =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse intensity
+ local key keys
+ d=()
+ d[Name]=intensity
++ json_keys 'deriv[cxt]' intensity
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 3
+++ echo 3
++ ((  3 == 2  ))
+ d[${key}]=3
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo jlf
+++ echo jlf
++ ((  3 == 2  ))
+ d[${key}]=jlf
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse mask
+ local key keys
+ d=()
+ d[Name]=mask
++ json_keys 'deriv[cxt]' mask
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' mask Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' mask Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' mask Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' mask Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Mask
+++ echo Mask
++ ((  3 == 2  ))
+ d[${key}]=Mask
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityCSF
+ local key keys
+ d=()
+ d[Name]=probabilityCSF
++ json_keys 'deriv[cxt]' probabilityCSF
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityGM
+ local key keys
+ d=()
+ d[Name]=probabilityGM
++ json_keys 'deriv[cxt]' probabilityGM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityWM
+ local key keys
+ d=()
+ d[Name]=probabilityWM
++ json_keys 'deriv[cxt]' probabilityWM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation
+ local key keys
+ d=()
+ d[Name]=segmentation
++ json_keys 'deriv[cxt]' segmentation
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation3class
+ local key keys
+ d=()
+ d[Name]=segmentation3class
++ json_keys 'deriv[cxt]' segmentation3class
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ minmax == all ]]
+ contains null minmax
+ [[ null =~ minmax ]]
+ ((  0 == 1  ))
+ subroutine @1.3.8
+ signpost=@1.3.8
+ routine_map='· START
· @0.1
· @1
· @1.2
· @1.2.1
· @1.2.7
· @1.3.3
· @1.3.4
· @1.3.5
· @1.3.6
· @1.3.7
· @1.3.8'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.3.8 '
+ [[ -n '' ]]
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo '· @1.3.8 '
· @1.3.8 
+ apply_exec Statistic:stdev /dev/null xcp quantifyAtlas -v %INPUT -s stdev -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_stdev_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_stdev_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ local deriv derivative derivatives echo_var final_cmd match output output_long property value values process_generic process_specific
+ declare -A d
+ contains Statistic:stdev :
+ [[ Statistic:stdev =~ : ]]
++ strslice Statistic:stdev 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:stdev
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ property=Statistic
++ strslice Statistic:stdev 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:stdev
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=stdev
++ c=' stdev'
+++ echo stdev
++ c=stdev
++ i=stdev
++ i=stdev
++ unset c
++ [[ -n '' ]]
++ echo stdev
+ values=stdev
+ values=(${values//|/ })
+ output=/dev/null
+ [[ / == \/ ]]
+ output_long=/dev/null.nii.gz
+ shift 2
+ contains xcp ECHO:
+ [[ xcp =~ ECHO: ]]
+ process_generic='xcp quantifyAtlas -v %INPUT -s stdev -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_stdev_%NAME.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_stdev_%NAME -d anatomical_%NAME -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ load_derivatives
+ local derivative deriv_json d_name dfloat_names
+ deriv_json=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ [[ -n '' ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ deriv[cxt]='{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+ dfloat_names=($(json_keys derivatives_floating))
++ json_keys derivatives_floating
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{}'
++ ((  1 == 2  ))
+ derivatives=($(json_keys deriv[cxt]))
++ json_keys 'deriv[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ ((  1 == 2  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse corticalThickness
+ local key keys
+ d=()
+ d[Name]=corticalThickness
++ json_keys 'deriv[cxt]' corticalThickness
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains mean stdev
+ [[ mean =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse gmd
+ local key keys
+ d=()
+ d[Name]=gmd
++ json_keys 'deriv[cxt]' gmd
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains mean stdev
+ [[ mean =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse intensity
+ local key keys
+ d=()
+ d[Name]=intensity
++ json_keys 'deriv[cxt]' intensity
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 3
+++ echo 3
++ ((  3 == 2  ))
+ d[${key}]=3
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo jlf
+++ echo jlf
++ ((  3 == 2  ))
+ d[${key}]=jlf
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse mask
+ local key keys
+ d=()
+ d[Name]=mask
++ json_keys 'deriv[cxt]' mask
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' mask Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' mask Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' mask Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' mask Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Mask
+++ echo Mask
++ ((  3 == 2  ))
+ d[${key}]=Mask
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityCSF
+ local key keys
+ d=()
+ d[Name]=probabilityCSF
++ json_keys 'deriv[cxt]' probabilityCSF
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityGM
+ local key keys
+ d=()
+ d[Name]=probabilityGM
++ json_keys 'deriv[cxt]' probabilityGM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityWM
+ local key keys
+ d=()
+ d[Name]=probabilityWM
++ json_keys 'deriv[cxt]' probabilityWM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation
+ local key keys
+ d=()
+ d[Name]=segmentation
++ json_keys 'deriv[cxt]' segmentation
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation3class
+ local key keys
+ d=()
+ d[Name]=segmentation3class
++ json_keys 'deriv[cxt]' segmentation3class
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ apply_exec Statistic:stdev /dev/null sys atlas_set miccai RegionalSD%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_stdev_%NAME.csv
+ local deriv derivative derivatives echo_var final_cmd match output output_long property value values process_generic process_specific
+ declare -A d
+ contains Statistic:stdev :
+ [[ Statistic:stdev =~ : ]]
++ strslice Statistic:stdev 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:stdev
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=Statistic
++ c=' Statistic'
+++ echo Statistic
++ c=Statistic
++ i=Statistic
++ i=Statistic
++ unset c
++ [[ -n '' ]]
++ echo Statistic
+ property=Statistic
++ strslice Statistic:stdev 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=Statistic:stdev
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=stdev
++ c=' stdev'
+++ echo stdev
++ c=stdev
++ i=stdev
++ i=stdev
++ unset c
++ [[ -n '' ]]
++ echo stdev
+ values=stdev
+ values=(${values//|/ })
+ output=/dev/null
+ [[ / == \/ ]]
+ output_long=/dev/null.nii.gz
+ shift 2
+ contains sys ECHO:
+ [[ sys =~ ECHO: ]]
+ process_generic='sys atlas_set miccai RegionalSD%CAPNAME /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_stdev_%NAME.csv'
+ load_derivatives
+ local derivative deriv_json d_name dfloat_names
+ deriv_json=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ [[ -n '' ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+ deriv[cxt]='{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
+ dfloat_names=($(json_keys derivatives_floating))
++ json_keys derivatives_floating
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{}'
++ ((  1 == 2  ))
+ derivatives=($(json_keys deriv[cxt]))
++ json_keys 'deriv[cxt]'
++ ((  1 == 1  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output 'keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
++ ((  1 == 2  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse corticalThickness
+ local key keys
+ d=()
+ d[Name]=corticalThickness
++ json_keys 'deriv[cxt]' corticalThickness
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' corticalThickness Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."corticalThickness"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains mean stdev
+ [[ mean =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse gmd
+ local key keys
+ d=()
+ d[Name]=gmd
++ json_keys 'deriv[cxt]' gmd
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' gmd ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo mean
+++ echo mean
++ ((  3 == 2  ))
+ d[${key}]=mean
+ for key in $keys
++ json_get 'deriv[cxt]' gmd Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."gmd"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains mean stdev
+ [[ mean =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse intensity
+ local key keys
+ d=()
+ d[Name]=intensity
++ json_keys 'deriv[cxt]' intensity
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 3
+++ echo 3
++ ((  3 == 2  ))
+ d[${key}]=3
+ for key in $keys
++ json_get 'deriv[cxt]' intensity ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo jlf
+++ echo jlf
++ ((  3 == 2  ))
+ d[${key}]=jlf
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' intensity Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."intensity"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse mask
+ local key keys
+ d=()
+ d[Name]=mask
++ json_keys 'deriv[cxt]' mask
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' mask Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' mask ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' mask Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' mask Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' mask Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."mask"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Mask
+++ echo Mask
++ ((  3 == 2  ))
+ d[${key}]=Mask
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityCSF
+ local key keys
+ d=()
+ d[Name]=probabilityCSF
++ json_keys 'deriv[cxt]' probabilityCSF
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityCSF Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityCSF"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityGM
+ local key keys
+ d=()
+ d[Name]=probabilityGM
++ json_keys 'deriv[cxt]' probabilityGM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityGM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityGM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse probabilityWM
+ local key keys
+ d=()
+ d[Name]=probabilityWM
++ json_keys 'deriv[cxt]' probabilityWM
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' probabilityWM Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."probabilityWM"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation
+ local key keys
+ d=()
+ d[Name]=segmentation
++ json_keys 'deriv[cxt]' segmentation
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 1
+++ echo 1
++ ((  3 == 2  ))
+ d[${key}]=1
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo struc
+++ echo struc
++ ((  3 == 2  ))
+ d[${key}]=struc
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ for derivative in ${derivatives[@]}
+ match=0
+ derivative_parse segmentation3class
+ local key keys
+ d=()
+ d[Name]=segmentation3class
++ json_keys 'deriv[cxt]' segmentation3class
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"|keys[]'
++ echo '{' '"corticalThickness":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"gmd":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"mean",' '"Type":' '"Map"' '},' '"intensity":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",' '"ProvenanceIndex":' '"3",' '"ProvenanceName":' '"jlf",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"mask":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Mask"' '},' '"probabilityCSF":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityGM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"probabilityWM":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",' '"ProvenanceIndex":' '"1",' '"ProvenanceName":' '"struc",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '},' '"segmentation3class":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",' '"ProvenanceIndex":' '"2",' '"ProvenanceName":' '"gmd",' '"Space":' '"sub-ADS4107_anatomical",' '"Statistic":' '"null",' '"Type":' '"Map"' '}' '}'
+ keys='Map
ProvenanceIndex
ProvenanceName
Space
Statistic
Type'
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Map"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
++ ((  3 == 2  ))
+ d[${key}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceIndex"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo 2
+++ echo 2
++ ((  3 == 2  ))
+ d[${key}]=2
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class ProvenanceName
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."ProvenanceName"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo gmd
+++ echo gmd
++ ((  3 == 2  ))
+ d[${key}]=gmd
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Space"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo sub-ADS4107_anatomical
+++ echo sub-ADS4107_anatomical
++ ((  3 == 2  ))
+ d[${key}]=sub-ADS4107_anatomical
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Statistic
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Statistic"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo null
+++ echo null
++ ((  3 == 2  ))
+ d[${key}]=null
+ for key in $keys
++ json_get 'deriv[cxt]' segmentation3class Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."segmentation3class"."Type"'
+++ echo '{
  "corticalThickness": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "gmd": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "mean",
    "Type": "Map"
  },
  "intensity": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz",
    "ProvenanceIndex": "3",
    "ProvenanceName": "jlf",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "mask": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Mask"
  },
  "probabilityCSF": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityGM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "probabilityWM": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz",
    "ProvenanceIndex": "1",
    "ProvenanceName": "struc",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  },
  "segmentation3class": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz",
    "ProvenanceIndex": "2",
    "ProvenanceName": "gmd",
    "Space": "sub-ADS4107_anatomical",
    "Statistic": "null",
    "Type": "Map"
  }
}'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ d[${key}]=Map
+ for value in "${values[@]}"
+ [[ stdev == all ]]
+ contains null stdev
+ [[ null =~ stdev ]]
+ ((  0 == 1  ))
+ ((  1 == 1  ))
+ subroutine @1.3.9
+ signpost=@1.3.9
+ routine_map='· START
· @0.1
· @1
· @1.2
· @1.2.1
· @1.2.7
· @1.3.3
· @1.3.4
· @1.3.5
· @1.3.6
· @1.3.7
· @1.3.8
· @1.3.9'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.3.9 '
+ [[ -n '' ]]
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo '· @1.3.9 '
· @1.3.9 
+ exec_xcp quantifyAtlas -s vol -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_vol -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ echo_cmd '${XCPEDIR}/utils/quantifyAtlas' -s vol -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_vol -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ local 'process_command=${XCPEDIR}/utils/quantifyAtlas -s vol -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_vol -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
+ printx /xcpEngine-master/core/CONSOLE_COMMAND
+ local 'file=                             -   -   -
>> ${process_command}'
+ eval 'echo -e "                             -   -   -
>> ${process_command}"'
++ echo -e '                             -   -   -
>> ${XCPEDIR}/utils/quantifyAtlas -s vol -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_vol -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0'
                             -   -   -
>> ${XCPEDIR}/utils/quantifyAtlas -s vol -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_vol -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ echo_cmd '${XCPEDIR}/utils/quantifyAtlas' -s vol -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_vol -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ /xcpEngine-master/utils/quantifyAtlas -s vol -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv -t /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_vol -a /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz -n miccai -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D -r /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D -p sub-ADS4107 -w 0
+ source /xcpEngine-master/core/constants
++ readonly 'RED=\033[0;31m'
++ RED='\033[0;31m'
++ readonly 'CYA=\033[0;36m'
++ CYA='\033[0;36m'
++ readonly 'LGR=\033[0;37m'
++ LGR='\033[0;37m'
++ readonly 'RCL=\033[0m'
++ RCL='\033[0m'
++ readonly ORIENTATION_ITK=RAI
++ ORIENTATION_ITK=RAI
++ readonly SIGMA=2.35482004503
++ SIGMA=2.35482004503
++ readonly PI=3.14159265359
++ PI=3.14159265359
++ readonly NBASE=2.71828182846
++ NBASE=2.71828182846
++ readonly PHI=1.61803398875
++ PHI=1.61803398875
++ [[ ! -d '' ]]
++ readonly BRAINSPACE=/xcpEngine-master/space
++ BRAINSPACE=/xcpEngine-master/space
++ [[ ! -d '' ]]
++ readonly BRAINATLAS=/xcpEngine-master/atlas
++ BRAINATLAS=/xcpEngine-master/atlas
++ [[ -z /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process ]]
++ unset s d a
++ declare -A s d a
+ source /xcpEngine-master/core/functions/library.sh
++ LIBRARY=/xcpEngine-master/core/functions
++ source /xcpEngine-master/core/functions/abort_stream
++ source /xcpEngine-master/core/functions/abspath
++ source /xcpEngine-master/core/functions/add_reference
++ source /xcpEngine-master/core/functions/apply_exec
++ source /xcpEngine-master/core/functions/arithmetic
++ source /xcpEngine-master/core/functions/assign
++ source /xcpEngine-master/core/functions/atlas
++ source /xcpEngine-master/core/functions/atlas_check
++ source /xcpEngine-master/core/functions/atlas_parse
++ source /xcpEngine-master/core/functions/atlas_set
++ source /xcpEngine-master/core/functions/cleanup
++ source /xcpEngine-master/core/functions/configure
++ source /xcpEngine-master/core/functions/configures
++ source /xcpEngine-master/core/functions/contains
++ source /xcpEngine-master/core/functions/define
++ source /xcpEngine-master/core/functions/derivative
++ source /xcpEngine-master/core/functions/derivative_cxt
++ source /xcpEngine-master/core/functions/derivative_floats
++ source /xcpEngine-master/core/functions/derivative_inherit
++ source /xcpEngine-master/core/functions/derivative_parse
++ source /xcpEngine-master/core/functions/derivative_set
++ source /xcpEngine-master/core/functions/doi2bib
++ source /xcpEngine-master/core/functions/echo_cmd
++ source /xcpEngine-master/core/functions/exec_afni
++ source /xcpEngine-master/core/functions/exec_ants
++ source /xcpEngine-master/core/functions/exec_c3d
++ source /xcpEngine-master/core/functions/exec_fsl
++ source /xcpEngine-master/core/functions/exec_sys
++ source /xcpEngine-master/core/functions/exec_xcp
++ source /xcpEngine-master/core/functions/final
++ source /xcpEngine-master/core/functions/import_image
++ source /xcpEngine-master/core/functions/import_metadata
++ source /xcpEngine-master/core/functions/input
++ source /xcpEngine-master/core/functions/is_1D
++ source /xcpEngine-master/core/functions/is_image
++ source /xcpEngine-master/core/functions/is_integer
++ source /xcpEngine-master/core/functions/is+integer
++ source /xcpEngine-master/core/functions/is_numeric
++ source /xcpEngine-master/core/functions/is+numeric
++ source /xcpEngine-master/core/functions/join_by
++ source /xcpEngine-master/core/functions/json_get
++ source /xcpEngine-master/core/functions/json_get_array
++ source /xcpEngine-master/core/functions/json_keys
++ source /xcpEngine-master/core/functions/json_merge
++ source /xcpEngine-master/core/functions/json_multiset
++ source /xcpEngine-master/core/functions/json_object
++ source /xcpEngine-master/core/functions/json_print
++ source /xcpEngine-master/core/functions/json_rm
++ source /xcpEngine-master/core/functions/json_set
++ source /xcpEngine-master/core/functions/json_set_array
++ source /xcpEngine-master/core/functions/lc_prefix
++ source /xcpEngine-master/core/functions/load_atlas
++ source /xcpEngine-master/core/functions/load_derivatives
++ source /xcpEngine-master/core/functions/matchexact
++ source /xcpEngine-master/core/functions/matching
++ source /xcpEngine-master/core/functions/ninstances
++ source /xcpEngine-master/core/functions/output
++ source /xcpEngine-master/core/functions/printx
++ source /xcpEngine-master/core/functions/proc_afni
++ source /xcpEngine-master/core/functions/proc_ants
++ source /xcpEngine-master/core/functions/proc_c3d
++ source /xcpEngine-master/core/functions/proc_cmd
++ source /xcpEngine-master/core/functions/proc_fsl
++ source /xcpEngine-master/core/functions/proc_xcp
++ source /xcpEngine-master/core/functions/process
++ source /xcpEngine-master/core/functions/processed
++ source /xcpEngine-master/core/functions/qc
++ source /xcpEngine-master/core/functions/quality_metric
++ source /xcpEngine-master/core/functions/repeat
++ source /xcpEngine-master/core/functions/require
++ source /xcpEngine-master/core/functions/rerun
++ source /xcpEngine-master/core/functions/rln
++ source /xcpEngine-master/core/functions/routine
++ source /xcpEngine-master/core/functions/routine_end
++ source /xcpEngine-master/core/functions/set_space
++ source /xcpEngine-master/core/functions/space_get
++ source /xcpEngine-master/core/functions/space_set
++ source /xcpEngine-master/core/functions/strslice
++ source /xcpEngine-master/core/functions/subroutine
++ source /xcpEngine-master/core/functions/subject_parse
++ source /xcpEngine-master/core/functions/transform_set
++ source /xcpEngine-master/core/functions/verbose
++ source /xcpEngine-master/core/functions/warpspace
++ source /xcpEngine-master/core/functions/write_atlas
++ source /xcpEngine-master/core/functions/write_config_safe
++ source /xcpEngine-master/core/functions/write_config
++ source /xcpEngine-master/core/functions/write_derivative
++ source /xcpEngine-master/core/functions/write_output
++ source /xcpEngine-master/core/functions/zscore_image
+ stats=mean
+ overwrite=1
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ stats=vol
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ opath=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ oroot=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_vol-quantifyAtlas
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ atlas=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+ ((  1 == 1  ))
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ aname=miccai
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ index=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ rname=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ prpnd=sub-ADS4107
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ case $OPTION in
+ overwrite=0
+ getopts a:o:v:s:i:n:t:d:p:r:w: OPTION
+ ((  overwrite == 0  ))
+ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv ]]
+ echo '[already complete]'
+ exit 0
+ atlas_set miccai RegionalVolume /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv
+ json_set 'atlas[cxt]' miccai RegionalVolume /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai" += {"RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv"}'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"RegionalMeanCorticalThickness":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv",' '"RegionalMeanGmd":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'atlas[cxt]=${json_new[@]}'
++ atlas[cxt]='{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
+ update_networks
+ atlas_set miccai Map /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
+ json_set 'atlas[cxt]' miccai Map /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai" += {"Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz"}'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"RegionalMeanCorticalThickness":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv",' '"RegionalMeanGmd":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv",' '"RegionalVolume":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'atlas[cxt]=${json_new[@]}'
++ atlas[cxt]='{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
+ atlas_set miccai Space sub-ADS4107_anatomical
+ json_set 'atlas[cxt]' miccai Space sub-ADS4107_anatomical
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."miccai" += {"Space": "sub-ADS4107_anatomical"}'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"RegionalMeanCorticalThickness":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv",' '"RegionalMeanGmd":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv",' '"RegionalVolume":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'atlas[cxt]=${json_new[@]}'
++ atlas[cxt]='{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
+ routine_end
+ [[ -n Regional quantification: miccai ]]
+ eval 'echo -e "····································································
Processing step complete:
${routine_description}"'
++ echo -e '····································································
Processing step complete:
Regional quantification: miccai'
+ unset routine_description
+ for map in ${atlas_names[@]}
+ atlas_parse power264
+ local key keys
+ a=()
+ a[Name]=power264
++ json_keys 'atlas[cxt]' power264
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264"|keys[]'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"RegionalMeanCorticalThickness":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv",' '"RegionalMeanGmd":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv",' '"RegionalVolume":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv"' '}' '}'
+ keys='Citation
CommunityNamesAPriori
CommunityPartitionAPriori
Map
NodeIndex
NodeNames
Space
SpaceNative
Type'
+ for key in $keys
++ json_get 'atlas[cxt]' power264 Citation
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264"."Citation"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/power264/power264Reference.bib'
+++ echo /xcpEngine-master/atlas/power264/power264Reference.bib
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/power264/power264Reference.bib
+ for key in $keys
++ json_get 'atlas[cxt]' power264 CommunityNamesAPriori
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264"."CommunityNamesAPriori"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/power264/power264CommunityNames.txt'
+++ echo /xcpEngine-master/atlas/power264/power264CommunityNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/power264/power264CommunityNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' power264 CommunityPartitionAPriori
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264"."CommunityPartitionAPriori"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/power264/power264CommunityAffiliation.1D'
+++ echo /xcpEngine-master/atlas/power264/power264CommunityAffiliation.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/power264/power264CommunityAffiliation.1D
+ for key in $keys
++ json_get 'atlas[cxt]' power264 Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264"."Map"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/power264/power264MNI.nii.gz'
+++ echo /xcpEngine-master/atlas/power264/power264MNI.nii.gz
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/power264/power264MNI.nii.gz
+ for key in $keys
++ json_get 'atlas[cxt]' power264 NodeIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264"."NodeIndex"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/power264/power264NodeIndex.1D'
+++ echo /xcpEngine-master/atlas/power264/power264NodeIndex.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/power264/power264NodeIndex.1D
+ for key in $keys
++ json_get 'atlas[cxt]' power264 NodeNames
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264"."NodeNames"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/power264/power264NodeNames.txt'
+++ echo /xcpEngine-master/atlas/power264/power264NodeNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/power264/power264NodeNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' power264 Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264"."Space"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' power264 SpaceNative
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264"."SpaceNative"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' power264 Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264"."Type"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ a[${key}]=Map
+ atlas_check
+ local i alist aorig a_new gchk
+ alist='roiquant_atlas[4]'
+ alist=(${!alist//,/ })
+ for i in "${alist[@]}"
+ contains power264 'Coor$'
+ [[ power264 =~ Coor$ ]]
+ [[ power264 == segmentation ]]
+ [[ power264 == global ]]
+ [[ miccai == all ]]
+ contains power264 miccai
+ [[ power264 =~ miccai ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ aorig='{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ a_loc='{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ json_get aorig power264
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"power264":."power264"}'
++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
+ aorig='{
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ json_get a_loc power264
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"power264":."power264"}'
++ echo '{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
+ a_loc='{
  "power264": null
}'
+ [[ {
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
} == {
  "power264": null
} ]]
+ [[ -z {
  "power264": null
} ]]
+ return 1
+ continue
+ for map in ${atlas_names[@]}
+ atlas_parse power264Coor
+ local key keys
+ a=()
+ a[Name]=power264Coor
++ json_keys 'atlas[cxt]' power264Coor
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264Coor"|keys[]'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"RegionalMeanCorticalThickness":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv",' '"RegionalMeanGmd":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv",' '"RegionalVolume":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv"' '}' '}'
+ keys='Citation
CommunityNamesAPriori
CommunityPartitionAPriori
Map
NodeIndex
NodeNames
Space
SpaceNative
Type'
+ for key in $keys
++ json_get 'atlas[cxt]' power264Coor Citation
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264Coor"."Citation"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/power264/power264Reference.bib'
+++ echo /xcpEngine-master/atlas/power264/power264Reference.bib
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/power264/power264Reference.bib
+ for key in $keys
++ json_get 'atlas[cxt]' power264Coor CommunityNamesAPriori
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264Coor"."CommunityNamesAPriori"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/power264/power264CommunityNames.txt'
+++ echo /xcpEngine-master/atlas/power264/power264CommunityNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/power264/power264CommunityNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' power264Coor CommunityPartitionAPriori
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264Coor"."CommunityPartitionAPriori"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/power264/power264CommunityAffiliation.1D'
+++ echo /xcpEngine-master/atlas/power264/power264CommunityAffiliation.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/power264/power264CommunityAffiliation.1D
+ for key in $keys
++ json_get 'atlas[cxt]' power264Coor Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264Coor"."Map"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/power264/power264CoorMNI.sclib'
+++ echo /xcpEngine-master/atlas/power264/power264CoorMNI.sclib
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/power264/power264CoorMNI.sclib
+ for key in $keys
++ json_get 'atlas[cxt]' power264Coor NodeIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264Coor"."NodeIndex"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/power264/power264NodeIndex.1D'
+++ echo /xcpEngine-master/atlas/power264/power264NodeIndex.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/power264/power264NodeIndex.1D
+ for key in $keys
++ json_get 'atlas[cxt]' power264Coor NodeNames
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264Coor"."NodeNames"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/power264/power264NodeNames.txt'
+++ echo /xcpEngine-master/atlas/power264/power264NodeNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/power264/power264NodeNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' power264Coor Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264Coor"."Space"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' power264Coor SpaceNative
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264Coor"."SpaceNative"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' power264Coor Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."power264Coor"."Type"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo Coor
+++ echo Coor
++ ((  3 == 2  ))
+ a[${key}]=Coor
+ atlas_check
+ local i alist aorig a_new gchk
+ alist='roiquant_atlas[4]'
+ alist=(${!alist//,/ })
+ for i in "${alist[@]}"
+ contains power264Coor 'Coor$'
+ [[ power264Coor =~ Coor$ ]]
+ [[ power264Coor == miccai ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ aorig='{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ a_loc='{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ json_get aorig power264Coor
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"power264Coor":."power264Coor"}'
++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
+ aorig='{
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  }
}'
++ json_get a_loc power264Coor
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"power264Coor":."power264Coor"}'
++ echo '{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
+ a_loc='{
  "power264Coor": null
}'
+ [[ {
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  }
} == {
  "power264Coor": null
} ]]
+ [[ -z {
  "power264Coor": null
} ]]
+ return 1
+ continue
+ for map in ${atlas_names[@]}
+ atlas_parse schaefer100
+ local key keys
+ a=()
+ a[Name]=schaefer100
++ json_keys 'atlas[cxt]' schaefer100
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer100"|keys[]'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"RegionalMeanCorticalThickness":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv",' '"RegionalMeanGmd":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv",' '"RegionalVolume":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv"' '}' '}'
+ keys='Citation
CommunityNamesAPriori17
CommunityNamesAPriori7
CommunityPartitionAPriori17
CommunityPartitionAPriori7
Map
NodeIndex
NodeNames
Space
SpaceNative
Type'
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer100 Citation
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer100"."Citation"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer100/schaefer100Reference.bib'
+++ echo /xcpEngine-master/atlas/schaefer100/schaefer100Reference.bib
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer100/schaefer100Reference.bib
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer100 CommunityNamesAPriori17
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer100"."CommunityNamesAPriori17"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt'
+++ echo /xcpEngine-master/atlas/schaefer100/schaefer100x17CommunityNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer100/schaefer100x17CommunityNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer100 CommunityNamesAPriori7
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer100"."CommunityNamesAPriori7"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt'
+++ echo /xcpEngine-master/atlas/schaefer100/schaefer100x7CommunityNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer100/schaefer100x7CommunityNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer100 CommunityPartitionAPriori17
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer100"."CommunityPartitionAPriori17"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D'
+++ echo /xcpEngine-master/atlas/schaefer100/schaefer100x17CommunityAffiliation.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer100/schaefer100x17CommunityAffiliation.1D
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer100 CommunityPartitionAPriori7
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer100"."CommunityPartitionAPriori7"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D'
+++ echo /xcpEngine-master/atlas/schaefer100/schaefer100x7CommunityAffiliation.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer100/schaefer100x7CommunityAffiliation.1D
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer100 Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer100"."Map"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz'
+++ echo /xcpEngine-master/atlas/schaefer100/schaefer100MNI.nii.gz
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer100/schaefer100MNI.nii.gz
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer100 NodeIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer100"."NodeIndex"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D'
+++ echo /xcpEngine-master/atlas/schaefer100/schaefer100NodeIndex.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer100/schaefer100NodeIndex.1D
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer100 NodeNames
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer100"."NodeNames"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt'
+++ echo /xcpEngine-master/atlas/schaefer100/schaefer100NodeNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer100/schaefer100NodeNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer100 Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer100"."Space"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer100 SpaceNative
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer100"."SpaceNative"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer100 Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer100"."Type"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ a[${key}]=Map
+ atlas_check
+ local i alist aorig a_new gchk
+ alist='roiquant_atlas[4]'
+ alist=(${!alist//,/ })
+ for i in "${alist[@]}"
+ contains schaefer100 'Coor$'
+ [[ schaefer100 =~ Coor$ ]]
+ [[ schaefer100 == segmentation ]]
+ [[ schaefer100 == global ]]
+ [[ miccai == all ]]
+ contains schaefer100 miccai
+ [[ schaefer100 =~ miccai ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ aorig='{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ a_loc='{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ json_get aorig schaefer100
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"schaefer100":."schaefer100"}'
++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
+ aorig='{
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ json_get a_loc schaefer100
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"schaefer100":."schaefer100"}'
++ echo '{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
+ a_loc='{
  "schaefer100": null
}'
+ [[ {
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
} == {
  "schaefer100": null
} ]]
+ [[ -z {
  "schaefer100": null
} ]]
+ return 1
+ continue
+ for map in ${atlas_names[@]}
+ atlas_parse schaefer200
+ local key keys
+ a=()
+ a[Name]=schaefer200
++ json_keys 'atlas[cxt]' schaefer200
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer200"|keys[]'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"RegionalMeanCorticalThickness":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv",' '"RegionalMeanGmd":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv",' '"RegionalVolume":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv"' '}' '}'
+ keys='Citation
CommunityNamesAPriori17
CommunityNamesAPriori7
CommunityPartitionAPriori17
CommunityPartitionAPriori7
Map
NodeIndex
NodeNames
Space
SpaceNative
Type'
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer200 Citation
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer200"."Citation"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer200/schaefer200Reference.bib'
+++ echo /xcpEngine-master/atlas/schaefer200/schaefer200Reference.bib
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer200/schaefer200Reference.bib
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer200 CommunityNamesAPriori17
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer200"."CommunityNamesAPriori17"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt'
+++ echo /xcpEngine-master/atlas/schaefer200/schaefer200x17CommunityNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer200/schaefer200x17CommunityNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer200 CommunityNamesAPriori7
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer200"."CommunityNamesAPriori7"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt'
+++ echo /xcpEngine-master/atlas/schaefer200/schaefer200x7CommunityNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer200/schaefer200x7CommunityNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer200 CommunityPartitionAPriori17
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer200"."CommunityPartitionAPriori17"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D'
+++ echo /xcpEngine-master/atlas/schaefer200/schaefer200x17CommunityAffiliation.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer200/schaefer200x17CommunityAffiliation.1D
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer200 CommunityPartitionAPriori7
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer200"."CommunityPartitionAPriori7"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D'
+++ echo /xcpEngine-master/atlas/schaefer200/schaefer200x7CommunityAffiliation.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer200/schaefer200x7CommunityAffiliation.1D
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer200 Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer200"."Map"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz'
+++ echo /xcpEngine-master/atlas/schaefer200/schaefer200MNI.nii.gz
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer200/schaefer200MNI.nii.gz
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer200 NodeIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer200"."NodeIndex"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D'
+++ echo /xcpEngine-master/atlas/schaefer200/schaefer200NodeIndex.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer200/schaefer200NodeIndex.1D
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer200 NodeNames
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer200"."NodeNames"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt'
+++ echo /xcpEngine-master/atlas/schaefer200/schaefer200NodeNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer200/schaefer200NodeNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer200 Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer200"."Space"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer200 SpaceNative
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer200"."SpaceNative"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer200 Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer200"."Type"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ a[${key}]=Map
+ atlas_check
+ local i alist aorig a_new gchk
+ alist='roiquant_atlas[4]'
+ alist=(${!alist//,/ })
+ for i in "${alist[@]}"
+ contains schaefer200 'Coor$'
+ [[ schaefer200 =~ Coor$ ]]
+ [[ schaefer200 == segmentation ]]
+ [[ schaefer200 == global ]]
+ [[ miccai == all ]]
+ contains schaefer200 miccai
+ [[ schaefer200 =~ miccai ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ aorig='{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ a_loc='{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ json_get aorig schaefer200
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"schaefer200":."schaefer200"}'
++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
+ aorig='{
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ json_get a_loc schaefer200
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"schaefer200":."schaefer200"}'
++ echo '{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
+ a_loc='{
  "schaefer200": null
}'
+ [[ {
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
} == {
  "schaefer200": null
} ]]
+ [[ -z {
  "schaefer200": null
} ]]
+ return 1
+ continue
+ for map in ${atlas_names[@]}
+ atlas_parse schaefer400
+ local key keys
+ a=()
+ a[Name]=schaefer400
++ json_keys 'atlas[cxt]' schaefer400
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer400"|keys[]'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"RegionalMeanCorticalThickness":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv",' '"RegionalMeanGmd":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv",' '"RegionalVolume":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv"' '}' '}'
+ keys='Citation
CommunityNamesAPriori17
CommunityNamesAPriori7
CommunityPartitionAPriori17
CommunityPartitionAPriori7
Map
NodeIndex
NodeNames
Space
SpaceNative
Type'
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer400 Citation
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer400"."Citation"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer400/schaefer400Reference.bib'
+++ echo /xcpEngine-master/atlas/schaefer400/schaefer400Reference.bib
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer400/schaefer400Reference.bib
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer400 CommunityNamesAPriori17
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer400"."CommunityNamesAPriori17"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt'
+++ echo /xcpEngine-master/atlas/schaefer400/schaefer400x17CommunityNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer400/schaefer400x17CommunityNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer400 CommunityNamesAPriori7
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer400"."CommunityNamesAPriori7"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt'
+++ echo /xcpEngine-master/atlas/schaefer400/schaefer400x7CommunityNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer400/schaefer400x7CommunityNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer400 CommunityPartitionAPriori17
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer400"."CommunityPartitionAPriori17"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D'
+++ echo /xcpEngine-master/atlas/schaefer400/schaefer400x17CommunityAffiliation.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer400/schaefer400x17CommunityAffiliation.1D
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer400 CommunityPartitionAPriori7
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer400"."CommunityPartitionAPriori7"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D'
+++ echo /xcpEngine-master/atlas/schaefer400/schaefer400x7CommunityAffiliation.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer400/schaefer400x7CommunityAffiliation.1D
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer400 Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer400"."Map"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz'
+++ echo /xcpEngine-master/atlas/schaefer400/schaefer400MNI.nii.gz
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer400/schaefer400MNI.nii.gz
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer400 NodeIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer400"."NodeIndex"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D'
+++ echo /xcpEngine-master/atlas/schaefer400/schaefer400NodeIndex.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer400/schaefer400NodeIndex.1D
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer400 NodeNames
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer400"."NodeNames"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt'
+++ echo /xcpEngine-master/atlas/schaefer400/schaefer400NodeNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/schaefer400/schaefer400NodeNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer400 Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer400"."Space"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer400 SpaceNative
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer400"."SpaceNative"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' schaefer400 Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."schaefer400"."Type"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ a[${key}]=Map
+ atlas_check
+ local i alist aorig a_new gchk
+ alist='roiquant_atlas[4]'
+ alist=(${!alist//,/ })
+ for i in "${alist[@]}"
+ contains schaefer400 'Coor$'
+ [[ schaefer400 =~ Coor$ ]]
+ [[ schaefer400 == segmentation ]]
+ [[ schaefer400 == global ]]
+ [[ miccai == all ]]
+ contains schaefer400 miccai
+ [[ schaefer400 =~ miccai ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ aorig='{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ a_loc='{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ json_get aorig schaefer400
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"schaefer400":."schaefer400"}'
++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
+ aorig='{
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ json_get a_loc schaefer400
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"schaefer400":."schaefer400"}'
++ echo '{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
+ a_loc='{
  "schaefer400": null
}'
+ [[ {
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
} == {
  "schaefer400": null
} ]]
+ [[ -z {
  "schaefer400": null
} ]]
+ return 1
+ continue
+ for map in ${atlas_names[@]}
+ atlas_parse sharma
+ local key keys
+ a=()
+ a[Name]=sharma
++ json_keys 'atlas[cxt]' sharma
++ ((  2 == 1  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."sharma"|keys[]'
++ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"RegionalMeanCorticalThickness":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv",' '"RegionalMeanGmd":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv",' '"RegionalVolume":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv"' '}' '}'
+ keys='Map
NodeIndex
NodeNames
Space
SpaceNative
Type'
+ for key in $keys
++ json_get 'atlas[cxt]' sharma Map
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."sharma"."Map"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/sharma/sharmaMNI.nii.gz'
+++ echo /xcpEngine-master/atlas/sharma/sharmaMNI.nii.gz
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/sharma/sharmaMNI.nii.gz
+ for key in $keys
++ json_get 'atlas[cxt]' sharma NodeIndex
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."sharma"."NodeIndex"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/sharma/sharmaNodeIndex.1D'
+++ echo /xcpEngine-master/atlas/sharma/sharmaNodeIndex.1D
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/sharma/sharmaNodeIndex.1D
+ for key in $keys
++ json_get 'atlas[cxt]' sharma NodeNames
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."sharma"."NodeNames"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo '${BRAINATLAS}/sharma/sharmaNodeNames.txt'
+++ echo /xcpEngine-master/atlas/sharma/sharmaNodeNames.txt
++ ((  3 == 2  ))
+ a[${key}]=/xcpEngine-master/atlas/sharma/sharmaNodeNames.txt
+ for key in $keys
++ json_get 'atlas[cxt]' sharma Space
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."sharma"."Space"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' sharma SpaceNative
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."sharma"."SpaceNative"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo MNI
+++ echo MNI
++ ((  3 == 2  ))
+ a[${key}]=MNI
+ for key in $keys
++ json_get 'atlas[cxt]' sharma Type
++ ((  3 == 3  ))
+++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '."sharma"."Type"'
+++ echo '{ "aal116": { "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib", "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D", "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "glasser360": { "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib", "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D", "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "gordon333": { "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D", "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D", "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "power264Coor": { "Citation": "${BRAINATLAS}/power264/power264Reference.bib", "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt", "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D", "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib", "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D", "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Coor" }, "schaefer100": { "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer200": { "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "schaefer400": { "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib", "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt", "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt", "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D", "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D", "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz", "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D", "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "sharma": { "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz", "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D", "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt", "Space": "MNI", "SpaceNative": "MNI", "Type": "Map" }, "miccai": { "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib", "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz", "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D", "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt", "Space": "sub-ADS4107_anatomical", "Type": "Map", "RegionalMeanCorticalThickness": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv", "RegionalMeanGmd": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv", "RegionalVolume": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv" } }'
++ eval echo Map
+++ echo Map
++ ((  3 == 2  ))
+ a[${key}]=Map
+ atlas_check
+ local i alist aorig a_new gchk
+ alist='roiquant_atlas[4]'
+ alist=(${!alist//,/ })
+ for i in "${alist[@]}"
+ contains sharma 'Coor$'
+ [[ sharma =~ Coor$ ]]
+ [[ sharma == segmentation ]]
+ [[ sharma == global ]]
+ [[ miccai == all ]]
+ contains sharma miccai
+ [[ sharma =~ miccai ]]
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ aorig='{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ a_loc='{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
++ json_get aorig sharma
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"sharma":."sharma"}'
++ echo '{
  "aal116": {
    "Citation": "${BRAINATLAS}/aal116/aal116Reference.bib",
    "Map": "${BRAINATLAS}/aal116/aal116MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/aal116/aal116NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/aal116/aal116NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "glasser360": {
    "Citation": "${BRAINATLAS}/glasser360/glasser360Reference.bib",
    "Map": "${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/glasser360/glasser360NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "gordon333": {
    "Citation": "${BRAINATLAS}/gordon333/gordon333Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/gordon333/gordon333NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "power264Coor": {
    "Citation": "${BRAINATLAS}/power264/power264Reference.bib",
    "CommunityNamesAPriori": "${BRAINATLAS}/power264/power264CommunityNames.txt",
    "CommunityPartitionAPriori": "${BRAINATLAS}/power264/power264CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/power264/power264CoorMNI.sclib",
    "NodeIndex": "${BRAINATLAS}/power264/power264NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/power264/power264NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Coor"
  },
  "schaefer100": {
    "Citation": "${BRAINATLAS}/schaefer100/schaefer100Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer200": {
    "Citation": "${BRAINATLAS}/schaefer200/schaefer200Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "schaefer400": {
    "Citation": "${BRAINATLAS}/schaefer400/schaefer400Reference.bib",
    "CommunityNamesAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",
    "CommunityNamesAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",
    "CommunityPartitionAPriori17": "${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",
    "CommunityPartitionAPriori7": "${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",
    "Map": "${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  },
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
+ aorig='{
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
}'
++ json_get a_loc sharma
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine-master/thirdparty/jq/jq-linux64 --raw-output '{"sharma":."sharma"}'
++ echo '{
  "miccai": {
    "Citation": "/xcpEngine-master/atlas/miccai/miccaiReference.bib",
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz",
    "NodeIndex": "/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",
    "NodeNames": "/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",
    "Space": "sub-ADS4107_anatomical",
    "Type": "Map"
  }
}'
+ a_loc='{
  "sharma": null
}'
+ [[ {
  "sharma": {
    "Map": "${BRAINATLAS}/sharma/sharmaMNI.nii.gz",
    "NodeIndex": "${BRAINATLAS}/sharma/sharmaNodeIndex.1D",
    "NodeNames": "${BRAINATLAS}/sharma/sharmaNodeNames.txt",
    "Space": "MNI",
    "SpaceNative": "MNI",
    "Type": "Map"
  }
} == {
  "sharma": null
} ]]
+ [[ -z {
  "sharma": null
} ]]
+ return 1
+ continue
+ completion
+ write_atlas
+ local path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ [[ -n '' ]]
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+ json_print 'atlas[cxt]'
+ /xcpEngine-master/thirdparty/jq/jq-linux64 --sort-keys .
+ echo '{' '"aal116":' '{' '"Citation":' '"${BRAINATLAS}/aal116/aal116Reference.bib",' '"Map":' '"${BRAINATLAS}/aal116/aal116MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/aal116/aal116NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/aal116/aal116NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"glasser360":' '{' '"Citation":' '"${BRAINATLAS}/glasser360/glasser360Reference.bib",' '"Map":' '"${BRAINATLAS}/glasser360/glasser360MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/glasser360/glasser360NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/glasser360/glasser360NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"gordon333":' '{' '"Citation":' '"${BRAINATLAS}/gordon333/gordon333Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/gordon333/gordon333CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/gordon333/gordon333MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/gordon333/gordon333NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/gordon333/gordon333NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"power264Coor":' '{' '"Citation":' '"${BRAINATLAS}/power264/power264Reference.bib",' '"CommunityNamesAPriori":' '"${BRAINATLAS}/power264/power264CommunityNames.txt",' '"CommunityPartitionAPriori":' '"${BRAINATLAS}/power264/power264CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/power264/power264CoorMNI.sclib",' '"NodeIndex":' '"${BRAINATLAS}/power264/power264NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/power264/power264NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Coor"' '},' '"schaefer100":' '{' '"Citation":' '"${BRAINATLAS}/schaefer100/schaefer100Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer100/schaefer100x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer100/schaefer100x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer100/schaefer100MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer100/schaefer100NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer100/schaefer100NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer200":' '{' '"Citation":' '"${BRAINATLAS}/schaefer200/schaefer200Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer200/schaefer200x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer200/schaefer200x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer200/schaefer200MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer200/schaefer200NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer200/schaefer200NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"schaefer400":' '{' '"Citation":' '"${BRAINATLAS}/schaefer400/schaefer400Reference.bib",' '"CommunityNamesAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityNames.txt",' '"CommunityNamesAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityNames.txt",' '"CommunityPartitionAPriori17":' '"${BRAINATLAS}/schaefer400/schaefer400x17CommunityAffiliation.1D",' '"CommunityPartitionAPriori7":' '"${BRAINATLAS}/schaefer400/schaefer400x7CommunityAffiliation.1D",' '"Map":' '"${BRAINATLAS}/schaefer400/schaefer400MNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/schaefer400/schaefer400NodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/schaefer400/schaefer400NodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"sharma":' '{' '"Map":' '"${BRAINATLAS}/sharma/sharmaMNI.nii.gz",' '"NodeIndex":' '"${BRAINATLAS}/sharma/sharmaNodeIndex.1D",' '"NodeNames":' '"${BRAINATLAS}/sharma/sharmaNodeNames.txt",' '"Space":' '"MNI",' '"SpaceNative":' '"MNI",' '"Type":' '"Map"' '},' '"miccai":' '{' '"Citation":' '"/xcpEngine-master/atlas/miccai/miccaiReference.bib",' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_miccai.nii.gz",' '"NodeIndex":' '"/xcpEngine-master/atlas/miccai/miccaiNodeIndex.1D",' '"NodeNames":' '"/xcpEngine-master/atlas/miccai/miccaiNodeNames.txt",' '"Space":' '"sub-ADS4107_anatomical",' '"Type":' '"Map",' '"RegionalMeanCorticalThickness":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_corticalThickness.csv",' '"RegionalMeanGmd":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_mean_gmd.csv",' '"RegionalVolume":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/miccai/sub-ADS4107_miccai_vol.csv"' '}' '}'
+ source /xcpEngine-master/core/auditComplete
++ id_var=(${ids[sub]//,/ })
++ modaudit=6
++ previous=5
++ mapfile subjaudit
++ auditvals=(${subjaudit[1]//,/ })
++ auditvals=(${auditvals[@]:0:$previous} 1 ${auditvals[@]:$modaudit:${#auditvals[@]}})
+++ join_by , sub-ADS4107 1 1 1 1 1 0
+++ local d=,
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s ,1 ,1 ,1 ,1 ,1 ,0
++ subjaudit[1]=sub-ADS4107,1,1,1,1,1,0
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv
++ echo id0,localiser,struc,gmd,jlf,roiquant,qcanat
++ echo sub-ADS4107,1,1,1,1,1,0
+ source /xcpEngine-master/core/updateQuality
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_quality.csv
+++ join_by , id0 regCoverage regCrossCorr regDice regJaccard meanGMD
+++ local d=,
+++ shift
+++ echo -n id0
+++ shift
+++ printf %s ,regCoverage ,regCrossCorr ,regDice ,regJaccard ,meanGMD
++ qvars=id0,regCoverage,regCrossCorr,regDice,regJaccard,meanGMD
+++ join_by , sub-ADS4107 0.9992316 0.9669719 0.9751511 0.9515071 0.793882
+++ local d=,
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s ,0.9992316 ,0.9669719 ,0.9751511 ,0.9515071 ,0.793882
++ qvals=sub-ADS4107,0.9992316,0.9669719,0.9751511,0.9515071,0.793882
++ echo id0,regCoverage,regCrossCorr,regDice,regJaccard,meanGMD
++ echo sub-ADS4107,0.9992316,0.9669719,0.9751511,0.9515071,0.793882
+ source /xcpEngine-master/core/moduleEnd
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ echo '


Module Workflow Map
····································································
· START
· @0.1
· @1
· @1.2
· @1.2.1
· @1.2.7
· @1.3.3
· @1.3.4
· @1.3.5
· @1.3.6
· @1.3.7
· @1.3.8
· @1.3.9
· FINISH
····································································'
++ intermediate=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~
++ cleanup
++ local 'cleanup=roiquant_cleanup[4]'
++ ((  1 == 1  ))
++ rm -rf /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_idx.1D /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/roiquant/sub-ADS4107~TEMP~_miccai_names.1D
++ echo '

Module complete'
++ exit 0
++ export SHELLOPTS
++ source /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
+++ analysis=struc-ACCELERATOR
+++ design=/projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/anat-Complete+_201903031016.dsn
+++ sequence=anatomical
+++ standard=MNI%1x1x1
+++ pipeline=struc,gmd,jlf,roiquant,qcanat
+++ struc_denoise_anat[1]=1
+++ struc_prior_weight[1]=0.25
+++ struc_posterior_formulation[1]='Socrates[1]'
+++ struc_keepBEImages[1]=0
+++ struc_floating_point[1]=0
+++ struc_random_seed[1]=0
+++ struc_bspline[1]=0
+++ struc_fit[1]=0.3
+++ struc_quick[1]=0
+++ struc_seg_priors[1]=1
+++ struc_rerun[1]=0
+++ struc_cleanup[1]=1
+++ struc_process[1]=ACT
+++ gmd_rerun[2]=0
+++ gmd_cleanup[2]=1
+++ newAntsPath[3]=/data/joy/BBL/applications/ANTsJLF_201603/bin/
+++ jlf_keep_warps[3]=0
+++ jlf_extract[3]=1
+++ jlf_quick[3]=1
+++ jlf_cohort[3]=SexBalanced20
+++ jlf_parallel[3]=none
+++ jlf_rerun[3]=0
+++ jlf_cleanup[3]=1
+++ roiquant_atlas[4]=miccai
+++ roiquant_vol[4]=1
+++ roiquant_rerun[4]=0
+++ roiquant_cleanup[4]=1
+++ qcanat_gm[5]=Y
+++ qcanat_gm_val[5]=2,4
+++ qcanat_wm[5]=Y
+++ qcanat_wm_val[5]=3
+++ qcanat_csf[5]=Y
+++ qcanat_csf_val[5]=1
+++ qcanat_cort[5]=Y
+++ qcanat_cort_val[5]=4
+++ qcanat_rerun[5]=0
+++ qcanat_cleanup[5]=1
+++ space[9001]=sub-ADS4107_anatomical
+++ structural[9001]=sub-ADS4107_anatomical
+++ spaces[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_spaces.json
+++ aux_imgs[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_derivatives.json
+++ atlas[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_atlas/sub-ADS4107_atlas.json
+++ audit[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv
+++ quality[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_quality.csv
+++ out_super=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data
+++ sub=9001
+++ design[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
+++ prefix[9001]=sub-ADS4107
+++ out[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
+++ ids[9001]=sub-ADS4107
+++ scratch=
+++ img[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+++ subject[0]=sub-ADS4107
+++ out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ template=/xcpEngine-master/space/MNI/MNI-1x1x1.nii.gz
+++ standard=MNI%1x1x1
+++ img1[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
+++ struct_space[9001]=sub-ADS4107_anatomical
+++ struct[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ segmentation[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+++ mask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ corticalThickness[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThickness.nii.gz
+++ ixfm_affine[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject1GenericAffine.mat
+++ referenceVolumeBrain[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ struct_std[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainNormalizedToTemplate.nii.gz
+++ str2stdmask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_str2stdmask.nii.gz
+++ referenceVolume[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+++ meanIntensity[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation0N4.nii.gz
+++ xfm_affine[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate0GenericAffine.mat
+++ ixfm_warp[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_TemplateToSubject0Warp.nii.gz
+++ xfm_warp[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_SubjectToTemplate1Warp.nii.gz
+++ meanIntensityBrain[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
+++ corticalThickness_std[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_CorticalThicknessNormalizedToTemplate.nii.gz
+++ template_mask[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1Mask.nii.gz
+++ template_brain_prior[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1BrainPrior.nii.gz
+++ template_head[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1Head.nii.gz
+++ template_priors[9001]=/xcpEngine-master/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz
+++ template_mask_dil[9001]=/xcpEngine-master/space/MNI/MNI-1x1x1MaskDilated.nii.gz
+++ probabilityWM[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityWM.nii.gz
+++ gmd[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_gmd.nii.gz
+++ probabilityGM[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityGM.nii.gz
+++ segmentation3class[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_segmentation3class.nii.gz
+++ probabilityCSF[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/gmd/sub-ADS4107_probabilityCSF.nii.gz
+++ mask[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainExtractionMask.nii.gz
+++ intensity[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Intensity.nii.gz
+++ labelsGMIntersect[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_LabelsGMIntersect.nii.gz
+++ labels[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/jlf/sub-ADS4107_Labels.nii.gz
++ design=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.dsn
++ prefix=sub-ADS4107
++ out=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107
++ source /xcpEngine-master/core/defineLogs
+++ [[ -z '' ]]
+++ export log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG
+++ log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG
+++ export log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process
+++ log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/struc-ACCELERATOR_201903080240_sub-ADS4107LOG-process
+++ [[ -n qcanat ]]
+++ [[ -n /xcpEngine-master/core/CONSOLE_MODULE_AFGR ]]
+++ echo '

'
+++ printx /xcpEngine-master/core/CONSOLE_MODULE_AFGR
+++ local 'file=###################################################################
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
#                                                                 #
#  ☭$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})☭  #
#                                                                 #
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
###################################################################'
+++ eval 'echo -e "###################################################################
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
#                                                                 #
#  ☭$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})☭  #
#                                                                 #
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
###################################################################"'
+++++ /xcpEngine-master/core/padAndCentreString 59 VOLUMETRIC ANATOMICAL QUALITY ASSESSMENT MODULE
+ length=59
+ shift 1
+ string='VOLUMETRIC ANATOMICAL QUALITY ASSESSMENT MODULE'
+ pad=12
+ pad=6
+++ seq 1 6
++ printf '%.0s ' 1 2 3 4 5 6
+ pad='      '
+ string='      VOLUMETRIC ANATOMICAL QUALITY ASSESSMENT MODULE      '
+ ((  59 < 59  ))
+ printf '      VOLUMETRIC ANATOMICAL QUALITY ASSESSMENT MODULE      '
++++ echo -e '###################################################################
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
#                                                                 #
#  ☭      VOLUMETRIC ANATOMICAL QUALITY ASSESSMENT MODULE      ☭  #
#                                                                 #
# ✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡ #
###################################################################'
+++ echo '

'
++ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz ]]
++++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
+++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_ExtractedBrain0N4.nii.gz
++ ((  1 == 1  ))
++ ((  0 == 1  ))
++ outdir=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat
++ [[ ! -e /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat ]]
++ echo '


[I][/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz]
[O][/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat]'
++ [[ -n '' ]]
++ intermediate=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107~TEMP~
++ intermediate_root=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107~TEMP~
++ img_raw=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz
++ img=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107.nii.gz
++ mapfile quality_lines
++ qvars=(${quality_lines[0]//,/ })
++ qvals=(${quality_lines[1]//,/ })
++ printx /xcpEngine-master/core/DESIGN_MODULE_OUTPUT
++ local 'file=
# ··· outputs from ${mod_name}[${cxt}] ··· #'
++ eval 'echo -e "
# ··· outputs from ${mod_name}[${cxt}] ··· #"'
+++ echo -e '
# ··· outputs from VOLUMETRIC ANATOMICAL QUALITY ASSESSMENT MODULE[5] ··· #'
++ export 'derivatives_floating={}'
++ derivatives_floating='{}'
++ declare -A declared_d declared_o declared_c declared_s declared_q
++ routine_map='· START'
++ rerun
++ local 'rerun=qcanat_rerun[5]'
++ ((  0 == 1  ))
+ define csfMask /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_csfMask.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ eval 'csfMask[5]="${@:2}"'
++ csfMask[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_csfMask.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ define gmMask /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ eval 'gmMask[5]="${@:2}"'
++ gmMask[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ define wmMask /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ eval 'wmMask[5]="${@:2}"'
++ wmMask[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ define cortMask /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ eval 'cortMask[5]="${@:2}"'
++ cortMask[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ define segmentationQA /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_segmentationQA.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ eval 'segmentationQA[5]="${@:2}"'
++ segmentationQA[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_segmentationQA.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ define mniFGMask /xcpEngine-master/modules/qcanat/mniForeGroundMask.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ eval 'mniFGMask[5]="${@:2}"'
++ mniFGMask[5]=/xcpEngine-master/modules/qcanat/mniForeGroundMask.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ define coordsCSV /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_landmarksCoords.csv
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ eval 'coordsCSV[5]="${@:2}"'
++ coordsCSV[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_landmarksCoords.csv
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ define affine_mni2sub /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_0GenericAffine.mat
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ eval 'affine_mni2sub[5]="${@:2}"'
++ affine_mni2sub[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_0GenericAffine.mat
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ define foreground /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ eval 'foreground[5]="${@:2}"'
++ foreground[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ define mniCoords /xcpEngine-master/modules/qcanat/mniCoords.sclib
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ eval 'mniCoords[5]="${@:2}"'
++ mniCoords[5]=/xcpEngine-master/modules/qcanat/mniCoords.sclib
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ define subCoords /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_mniCoords.sclib
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ eval 'subCoords[5]="${@:2}"'
++ subCoords[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_mniCoords.sclib
+ is+integer 5
+ [[ 5 =~ ^[0-9]+$ ]]
+ qc FBER FGBGEnergyRatio sub-ADS4107_qc_FBER.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_FBER.txt
+ eval 'FBER[5]=${path}'
++ FBER[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_FBER.txt
+ declared_q[${2}]=FBER
+ qc SNR SignalToNoiseRatio sub-ADS4107_qc_SNR.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_SNR.txt
+ eval 'SNR[5]=${path}'
++ SNR[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_SNR.txt
+ declared_q[${2}]=SNR
+ qc CNR ContrastToNoiseRatio sub-ADS4107_qc_CNR.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_CNR.txt
+ eval 'CNR[5]=${path}'
++ CNR[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_CNR.txt
+ declared_q[${2}]=CNR
+ qc CORTCON CorticalContrasts sub-ADS4107_qc_CORTCON.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_CORTCON.txt
+ eval 'CORTCON[5]=${path}'
++ CORTCON[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_CORTCON.txt
+ declared_q[${2}]=CORTCON
+ qc EFC EntropyFocusCriterion sub-ADS4107_qc_EFC.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_EFC.txt
+ eval 'EFC[5]=${path}'
++ EFC[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_EFC.txt
+ declared_q[${2}]=EFC
+ qc GMKURT GreyMatterKurtosis sub-ADS4107_qc_GMKURT.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_GMKURT.txt
+ eval 'GMKURT[5]=${path}'
++ GMKURT[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_GMKURT.txt
+ declared_q[${2}]=GMKURT
+ qc GMSKEW GreyMatterSkewness sub-ADS4107_qc_GMSKEW.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_GMSKEW.txt
+ eval 'GMSKEW[5]=${path}'
++ GMSKEW[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_GMSKEW.txt
+ declared_q[${2}]=GMSKEW
+ qc WMKURT WhiteMatterKurtosis sub-ADS4107_qc_WMKURT.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_WMKURT.txt
+ eval 'WMKURT[5]=${path}'
++ WMKURT[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_WMKURT.txt
+ declared_q[${2}]=WMKURT
+ qc WMSKEW WhiteMatterSkewness sub-ADS4107_qc_WMSKEW.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_WMSKEW.txt
+ eval 'WMSKEW[5]=${path}'
++ WMSKEW[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_WMSKEW.txt
+ declared_q[${2}]=WMSKEW
+ qc BGKURT BackgroundKurtosis sub-ADS4107_qc_BGKURT.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_BGKURT.txt
+ eval 'BGKURT[5]=${path}'
++ BGKURT[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_BGKURT.txt
+ declared_q[${2}]=BGKURT
+ qc BGSKEW BackgroundSkewness sub-ADS4107_qc_BGSKEW.txt
+ local path
+ [[ s == \/ ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_BGSKEW.txt
+ eval 'BGSKEW[5]=${path}'
++ BGSKEW[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_BGSKEW.txt
+ declared_q[${2}]=BGSKEW
+ input image segmentation as segmentationQA
+ local input input_try type
+ [[ image == image ]]
+ type=image
+ shift
+ [[ segmentation == 1dim ]]
+ [[ segmentation == files ]]
+ [[ segmentation == value ]]
+ [[ -z image ]]
+ ((  3 > 0  ))
+ [[ -z '' ]]
+ input_try='segmentation[9001]'
+ case $type in
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ ((  1 == 1  ))
+ input=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ ((  3   >  1   ))
+ shift
+ [[ as == as ]]
+ shift
+ break
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz ]]
+ configure segmentationQA /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ eval 'segmentationQA[5]="${@:2}"'
++ segmentationQA[5]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ declared_c[${1}]=segmentationQA
+ routine @1 Extracting tissue masks
+ signpost=@1
+ routine_map='· START
· @1'
+ shift
+ routine_description='Extracting tissue masks'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1 '
+ [[ -n Extracting tissue masks ]]
+ eval 'echo -e "


Current processing step:
${vid}${routine_description}
····································································"'
++ echo -e '


Current processing step:
@1 Extracting tissue masks
····································································'



Current processing step:
@1 Extracting tissue masks
····································································
+ allValsCheck=0
+ declare -A tissue_classes
+ tissue_classes=([gm]="grey matter" [wm]="white matter" [csf]="cerebrospinal fluid" [cort]="cerebral cortex")
+ for class in "${!tissue_classes[@]}"
+ class_val='qcanat_cort_val[5]'
+ class_mask='cortMask[5]'
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ ((  1 == 1  ))
+ [[ -n 4 ]]
+ subroutine @1.1a Successfully identified cerebral cortex
+ signpost=@1.1a
+ routine_map='· START
· @1
· @1.1a'
+ shift
+ local 'subroutine_description=Successfully identified cerebral cortex'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.1a '
+ [[ -n Successfully identified cerebral cortex ]]
+ echo '· @1.1a Successfully identified cerebral cortex'
· @1.1a Successfully identified cerebral cortex
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
+ ((  1 == 1  ))
+ rerun
+ local 'rerun=qcanat_rerun[5]'
+ ((  0 == 1  ))
+ ((  allValsCheck++  ))
+ for class in "${!tissue_classes[@]}"
+ class_val='qcanat_wm_val[5]'
+ class_mask='wmMask[5]'
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ ((  1 == 1  ))
+ [[ -n 3 ]]
+ subroutine @1.1a Successfully identified white matter
+ signpost=@1.1a
+ routine_map='· START
· @1
· @1.1a
· @1.1a'
+ shift
+ local 'subroutine_description=Successfully identified white matter'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.1a '
+ [[ -n Successfully identified white matter ]]
+ echo '· @1.1a Successfully identified white matter'
· @1.1a Successfully identified white matter
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz
+ ((  1 == 1  ))
+ rerun
+ local 'rerun=qcanat_rerun[5]'
+ ((  0 == 1  ))
+ ((  allValsCheck++  ))
+ for class in "${!tissue_classes[@]}"
+ class_val='qcanat_gm_val[5]'
+ class_mask='gmMask[5]'
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ ((  1 == 1  ))
+ [[ -n 2,4 ]]
+ subroutine @1.1a Successfully identified grey matter
+ signpost=@1.1a
+ routine_map='· START
· @1
· @1.1a
· @1.1a
· @1.1a'
+ shift
+ local 'subroutine_description=Successfully identified grey matter'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.1a '
+ [[ -n Successfully identified grey matter ]]
+ echo '· @1.1a Successfully identified grey matter'
· @1.1a Successfully identified grey matter
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz
+ ((  1 == 1  ))
+ rerun
+ local 'rerun=qcanat_rerun[5]'
+ ((  0 == 1  ))
+ ((  allValsCheck++  ))
+ for class in "${!tissue_classes[@]}"
+ class_val='qcanat_csf_val[5]'
+ class_mask='csfMask[5]'
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz
+ ((  1 == 1  ))
+ [[ -n 1 ]]
+ subroutine @1.1a Successfully identified cerebrospinal fluid
+ signpost=@1.1a
+ routine_map='· START
· @1
· @1.1a
· @1.1a
· @1.1a
· @1.1a'
+ shift
+ local 'subroutine_description=Successfully identified cerebrospinal fluid'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.1a '
+ [[ -n Successfully identified cerebrospinal fluid ]]
+ echo '· @1.1a Successfully identified cerebrospinal fluid'
· @1.1a Successfully identified cerebrospinal fluid
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_csfMask.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_csfMask.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_csfMask.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_csfMask.nii.gz
+ ((  1 == 1  ))
+ rerun
+ local 'rerun=qcanat_rerun[5]'
+ ((  0 == 1  ))
+ ((  allValsCheck++  ))
+ ((  4 < 3 ))
+ routine_end
+ [[ -n Extracting tissue masks ]]
+ eval 'echo -e "····································································
Processing step complete:
${routine_description}"'
++ echo -e '····································································
Processing step complete:
Extracting tissue masks'
+ unset routine_description
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz
+ ((  1 == 1  ))
+ rerun
+ local 'rerun=qcanat_rerun[5]'
+ ((  0 == 1  ))
+ routine @3 Computing measures of anatomical quality
+ signpost=@3
+ routine_map='· START
· @1
· @1.1a
· @1.1a
· @1.1a
· @1.1a
· @3'
+ shift
+ routine_description='Computing measures of anatomical quality'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@3 '
+ [[ -n Computing measures of anatomical quality ]]
+ eval 'echo -e "


Current processing step:
${vid}${routine_description}
····································································"'
++ echo -e '


Current processing step:
@3 Computing measures of anatomical quality
····································································'



Current processing step:
@3 Computing measures of anatomical quality
····································································
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
+ ((  1 == 1  ))
+ subroutine @3.1 Using cortical mask
+ signpost=@3.1
+ routine_map='· START
· @1
· @1.1a
· @1.1a
· @1.1a
· @1.1a
· @3
· @3.1'
+ shift
+ local 'subroutine_description=Using cortical mask'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@3.1 '
+ [[ -n Using cortical mask ]]
+ echo '· @3.1 Using cortical mask'
· @3.1 Using cortical mask
+ argCortMask='-c /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz'
+ qcvals=($(exec_xcp qcanat.R     -i    ${img_raw}              -m    ${gmMask[cxt]}          -w    ${wmMask[cxt]}          -f    ${foreground[cxt]}      ${argCortMask}))
++ exec_xcp qcanat.R -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz -m /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz -w /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz -c /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ echo_cmd '${XCPEDIR}/utils/qcanat.R' -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz -m /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz -w /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz -c /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
++ local 'process_command=${XCPEDIR}/utils/qcanat.R -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz -m /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz -w /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz -c /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz'
++ printx /xcpEngine-master/core/CONSOLE_COMMAND
++ local 'file=                             -   -   -
>> ${process_command}'
++ eval 'echo -e "                             -   -   -
>> ${process_command}"'
+++ echo -e '                             -   -   -
>> ${XCPEDIR}/utils/qcanat.R -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz -m /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz -w /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz -c /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz'
                             -   -   -
>> ${XCPEDIR}/utils/qcanat.R -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz -m /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz -w /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz -c /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
++ echo_cmd '${XCPEDIR}/utils/qcanat.R' -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz -m /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz -w /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz -c /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
++ /xcpEngine-master/utils/qcanat.R -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz -m /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz -w /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz -c /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
+ R_HOME_DIR=/usr/lib/R
+ test /usr/lib/R = /usr/lib/R
+ case "linux-gnu" in
++ uname -m
+ run_arch=x86_64
+ case "$run_arch" in
+ libnn=lib64
+ libnn_fallback=lib
+ '[' -x /usr/lib64/R/bin/exec/R ']'
+ '[' -x /usr/lib/R/bin/exec/R ']'
+ R_HOME_DIR=/usr/lib/R
+ test -n ''
+ R_HOME=/usr/lib/R
+ export R_HOME
+ R_SHARE_DIR=/usr/share/R/share
+ export R_SHARE_DIR
+ R_INCLUDE_DIR=/usr/share/R/include
+ export R_INCLUDE_DIR
+ R_DOC_DIR=/usr/share/R/doc
+ export R_DOC_DIR
+ :
+ usage='
Usage: R [options] [< infile] [> outfile]
   or: R CMD command [arguments]

Start R, a system for statistical computation and graphics, with the
specified options, or invoke an R tool via the '\''R CMD'\'' interface.

Options:
  -h, --help            Print short help message and exit
  --version             Print version info and exit
  --encoding=ENC        Specify encoding to be used for stdin
  --encoding ENC
  RHOME			Print path to R home directory and exit
  --save                Do save workspace at the end of the session
  --no-save             Don'\''t save it
  --no-environ          Don'\''t read the site and user environment files
  --no-site-file        Don'\''t read the site-wide Rprofile
  --no-init-file        Don'\''t read the user R profile
  --restore             Do restore previously saved objects at startup
  --no-restore-data     Don'\''t restore previously saved objects
  --no-restore-history  Don'\''t restore the R history file
  --no-restore          Don'\''t restore anything
  --vanilla		Combine --no-save, --no-restore, --no-site-file,
			--no-init-file and --no-environ
  --no-readline         Don'\''t use readline for command-line editing
  --max-ppsize=N        Set max size of protect stack to N
  --min-nsize=N         Set min number of fixed size obj'\''s ("cons cells") to N
  --min-vsize=N         Set vector heap minimum to N bytes; '\''4M'\'' = 4 MegaB
  -q, --quiet           Don'\''t print startup message
  --silent              Same as --quiet
  --slave               Make R run as quietly as possible
  --interactive         Force an interactive session
  --verbose             Print more information about progress
  -d, --debugger=NAME   Run R through debugger NAME
  --debugger-args=ARGS  Pass ARGS as arguments to the debugger
  -g TYPE, --gui=TYPE	Use TYPE as GUI; possible values are '\''X11'\'' (default)
			and '\''Tk'\''.
  --arch=NAME		Specify a sub-architecture
  --args                Skip the rest of the command line
  -f FILE, --file=FILE  Take input from '\''FILE'\''
  -e EXPR               Execute '\''EXPR'\'' and exit

FILE may contain spaces but not shell metacharacters.

Commands:
  BATCH			Run R in batch mode
  COMPILE		Compile files for use with R
  SHLIB			Build shared library for dynamic loading
  INSTALL		Install add-on packages
  REMOVE		Remove add-on packages
  build			Build add-on packages
  check			Check add-on packages
  LINK			Front-end for creating executable programs
  Rprof			Post-process R profiling files
  Rdconv		Convert Rd format to various other formats
  Rd2pdf		Convert Rd format to PDF
  Rd2txt		Convert Rd format to pretty text
  Stangle		Extract S/R code from Sweave documentation
  Sweave		Process Sweave documentation
  Rdiff			Diff R output ignoring headers etc
  config		Obtain configuration information about R
  javareconf		Update the Java configuration variables
  rtags                 Create Emacs-style tag files from C, R, and Rd files

Please use '\''R CMD command --help'\'' to obtain further information about
the usage of '\''command'\''.

Options --arch, --no-environ, --no-init-file, --no-site-file and --vanilla
can be placed between R and CMD, to apply to R processes run by '\''command'\''

Report bugs at bugs.r-project.org '
+ SED=/bin/sed
+ export SED
+ args=
+ debugger=
+ debugger_args=
+ gui=
+ test -n --slave
+ case ${1} in
+ args=' --slave'
+ shift
+ test -n --no-restore
+ case ${1} in
+ args=' --slave --no-restore'
+ shift
+ test -n --file=/xcpEngine-master/utils/qcanat.R
+ case ${1} in
++ /bin/sed -e 's/[^=]*=//'
++ /bin/sed -e 's/ /~+~/g'
++ echo --file=/xcpEngine-master/utils/qcanat.R
+ a=/xcpEngine-master/utils/qcanat.R
+ args=' --slave --no-restore --file=/xcpEngine-master/utils/qcanat.R'
+ shift
+ test -n --args
+ case ${1} in
+ break
+ . /usr/lib/R/etc/ldpaths
++ : /usr/lib/jvm/default-java
++ : /usr/lib/jvm/default-java/jre/lib/amd64/server
++ test -n /usr/lib/x86_64-linux-gnu
++ : /usr/lib/R/lib:/usr/lib/x86_64-linux-gnu
++ test -n /usr/lib/jvm/default-java/jre/lib/amd64/server
++ R_LD_LIBRARY_PATH=/usr/lib/R/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/default-java/jre/lib/amd64/server
++ test -z /.singularity.d/libs
++ LD_LIBRARY_PATH=/usr/lib/R/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/default-java/jre/lib/amd64/server:/.singularity.d/libs
++ export LD_LIBRARY_PATH
+ R_binary=/usr/lib/R/bin/exec/R
+ export R_ARCH
+ case "${gui}" in
+ test -x /usr/lib/R
+ :
+ test -z ''
+ exec /usr/lib/R/bin/exec/R --slave --no-restore --file=/xcpEngine-master/utils/qcanat.R --args -i /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS4107/anat/sub-ADS4107_desc-preproc_T1w.nii.gz -m /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_gmMask.nii.gz -w /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_wmMask.nii.gz -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_foreground.nii.gz -c /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_cortexMask.nii.gz
· [Foreground-background energy ratio:   0.9745452 ]
· [Signal-to-noise ratio:                1.961175 ]
· [Contrast-to-noise ratio:              0.149816 ]
· [Cortical contrasts:                   0.04042387 ]
· [Entropy focus criterion:              0.6692791 ]
· [Grey matter kurtosis:                 7.403469 ]
· [Grey matter skewness:                 0.7079001 ]
· [White matter kurtosis:                9.262118 ]
· [White matter skewness:                -0.07486158 ]
· [Background kurtosis:                  5.451023 ]
· [Background skewness:                  1.819596 ]
+ subroutine @3.2 Organising estimates
+ signpost=@3.2
+ routine_map='· START
· @1
· @1.1a
· @1.1a
· @1.1a
· @1.1a
· @3
· @3.1
· @3.2'
+ shift
+ local 'subroutine_description=Organising estimates'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@3.2 '
+ [[ -n Organising estimates ]]
+ echo '· @3.2 Organising estimates'
· @3.2 Organising estimates
+ declare -A qcanat
+ for i in ${qcvals[@]}
++ strslice FBER:0.9745452 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=FBER:0.9745452
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=FBER
++ c=' FBER'
+++ echo FBER
++ c=FBER
++ i=FBER
++ i=FBER
++ unset c
++ [[ -n '' ]]
++ echo FBER
+ var=FBER
++ strslice FBER:0.9745452 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=FBER:0.9745452
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=0.9745452
++ c=' 0.9745452'
+++ echo 0.9745452
++ c=0.9745452
++ i=0.9745452
++ i=0.9745452
++ unset c
++ [[ -n '' ]]
++ echo 0.9745452
+ val=0.9745452
+ qcanat[$var]=0.9745452
+ for i in ${qcvals[@]}
++ strslice SNR:1.961175 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=SNR:1.961175
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=SNR
++ c=' SNR'
+++ echo SNR
++ c=SNR
++ i=SNR
++ i=SNR
++ unset c
++ [[ -n '' ]]
++ echo SNR
+ var=SNR
++ strslice SNR:1.961175 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=SNR:1.961175
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=1.961175
++ c=' 1.961175'
+++ echo 1.961175
++ c=1.961175
++ i=1.961175
++ i=1.961175
++ unset c
++ [[ -n '' ]]
++ echo 1.961175
+ val=1.961175
+ qcanat[$var]=1.961175
+ for i in ${qcvals[@]}
++ strslice CNR:0.149816 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=CNR:0.149816
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=CNR
++ c=' CNR'
+++ echo CNR
++ c=CNR
++ i=CNR
++ i=CNR
++ unset c
++ [[ -n '' ]]
++ echo CNR
+ var=CNR
++ strslice CNR:0.149816 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=CNR:0.149816
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=0.149816
++ c=' 0.149816'
+++ echo 0.149816
++ c=0.149816
++ i=0.149816
++ i=0.149816
++ unset c
++ [[ -n '' ]]
++ echo 0.149816
+ val=0.149816
+ qcanat[$var]=0.149816
+ for i in ${qcvals[@]}
++ strslice CORTCON:0.04042387 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=CORTCON:0.04042387
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=CORTCON
++ c=' CORTCON'
+++ echo CORTCON
++ c=CORTCON
++ i=CORTCON
++ i=CORTCON
++ unset c
++ [[ -n '' ]]
++ echo CORTCON
+ var=CORTCON
++ strslice CORTCON:0.04042387 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=CORTCON:0.04042387
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=0.04042387
++ c=' 0.04042387'
+++ echo 0.04042387
++ c=0.04042387
++ i=0.04042387
++ i=0.04042387
++ unset c
++ [[ -n '' ]]
++ echo 0.04042387
+ val=0.04042387
+ qcanat[$var]=0.04042387
+ for i in ${qcvals[@]}
++ strslice EFC:0.6692791 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=EFC:0.6692791
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=EFC
++ c=' EFC'
+++ echo EFC
++ c=EFC
++ i=EFC
++ i=EFC
++ unset c
++ [[ -n '' ]]
++ echo EFC
+ var=EFC
++ strslice EFC:0.6692791 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=EFC:0.6692791
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=0.6692791
++ c=' 0.6692791'
+++ echo 0.6692791
++ c=0.6692791
++ i=0.6692791
++ i=0.6692791
++ unset c
++ [[ -n '' ]]
++ echo 0.6692791
+ val=0.6692791
+ qcanat[$var]=0.6692791
+ for i in ${qcvals[@]}
++ strslice GMKURT:7.403469 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=GMKURT:7.403469
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=GMKURT
++ c=' GMKURT'
+++ echo GMKURT
++ c=GMKURT
++ i=GMKURT
++ i=GMKURT
++ unset c
++ [[ -n '' ]]
++ echo GMKURT
+ var=GMKURT
++ strslice GMKURT:7.403469 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=GMKURT:7.403469
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=7.403469
++ c=' 7.403469'
+++ echo 7.403469
++ c=7.403469
++ i=7.403469
++ i=7.403469
++ unset c
++ [[ -n '' ]]
++ echo 7.403469
+ val=7.403469
+ qcanat[$var]=7.403469
+ for i in ${qcvals[@]}
++ strslice GMSKEW:0.7079001 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=GMSKEW:0.7079001
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=GMSKEW
++ c=' GMSKEW'
+++ echo GMSKEW
++ c=GMSKEW
++ i=GMSKEW
++ i=GMSKEW
++ unset c
++ [[ -n '' ]]
++ echo GMSKEW
+ var=GMSKEW
++ strslice GMSKEW:0.7079001 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=GMSKEW:0.7079001
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=0.7079001
++ c=' 0.7079001'
+++ echo 0.7079001
++ c=0.7079001
++ i=0.7079001
++ i=0.7079001
++ unset c
++ [[ -n '' ]]
++ echo 0.7079001
+ val=0.7079001
+ qcanat[$var]=0.7079001
+ for i in ${qcvals[@]}
++ strslice WMKURT:9.262118 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=WMKURT:9.262118
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=WMKURT
++ c=' WMKURT'
+++ echo WMKURT
++ c=WMKURT
++ i=WMKURT
++ i=WMKURT
++ unset c
++ [[ -n '' ]]
++ echo WMKURT
+ var=WMKURT
++ strslice WMKURT:9.262118 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=WMKURT:9.262118
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=9.262118
++ c=' 9.262118'
+++ echo 9.262118
++ c=9.262118
++ i=9.262118
++ i=9.262118
++ unset c
++ [[ -n '' ]]
++ echo 9.262118
+ val=9.262118
+ qcanat[$var]=9.262118
+ for i in ${qcvals[@]}
++ strslice WMSKEW:-0.07486158 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=WMSKEW:-0.07486158
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=WMSKEW
++ c=' WMSKEW'
+++ echo WMSKEW
++ c=WMSKEW
++ i=WMSKEW
++ i=WMSKEW
++ unset c
++ [[ -n '' ]]
++ echo WMSKEW
+ var=WMSKEW
++ strslice WMSKEW:-0.07486158 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=WMSKEW:-0.07486158
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=-0.07486158
++ c=' -0.07486158'
+++ echo -0.07486158
++ c=-0.07486158
++ i=-0.07486158
++ i=-0.07486158
++ unset c
++ [[ -n '' ]]
++ echo -0.07486158
+ val=-0.07486158
+ qcanat[$var]=-0.07486158
+ for i in ${qcvals[@]}
++ strslice BGKURT:5.451023 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=BGKURT:5.451023
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=BGKURT
++ c=' BGKURT'
+++ echo BGKURT
++ c=BGKURT
++ i=BGKURT
++ i=BGKURT
++ unset c
++ [[ -n '' ]]
++ echo BGKURT
+ var=BGKURT
++ strslice BGKURT:5.451023 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=BGKURT:5.451023
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=5.451023
++ c=' 5.451023'
+++ echo 5.451023
++ c=5.451023
++ i=5.451023
++ i=5.451023
++ unset c
++ [[ -n '' ]]
++ echo 5.451023
+ val=5.451023
+ qcanat[$var]=5.451023
+ for i in ${qcvals[@]}
++ strslice BGSKEW:1.819596 1 :
++ local bounds c d domains e i l m o q r s sliced
++ i=BGSKEW:1.819596
++ shift
++ [[ -n 1 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 1
++ [[ 1 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=1
++ sliced=(${i//${d}/ })
++ ((  1 >  2  ))
++ ((  1 >  2  ))
++ ((  1 < -2  ))
++ ((  1 < -2  ))
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 1
++ [[ 1 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=0
++ e=0
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=BGSKEW
++ c=' BGSKEW'
+++ echo BGSKEW
++ c=BGSKEW
++ i=BGSKEW
++ i=BGSKEW
++ unset c
++ [[ -n '' ]]
++ echo BGSKEW
+ var=BGSKEW
++ strslice BGSKEW:1.819596 2 :
++ local bounds c d domains e i l m o q r s sliced
++ i=BGSKEW:1.819596
++ shift
++ [[ -n 2 ]]
++ d=,
++ domains=(${1//,/ })
++ shift
++ for m in "${domains[@]}"
++ bounds=(${m//:/ })
++ is_integer 2
++ [[ 2 =~ ^-?[0-9]+$ ]]
++ q=(${1//:/ })
++ q=(${q//,/ })
++ [[ -n : ]]
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ d=:
++ shift
++ is_integer
++ [[ '' =~ ^-?[0-9]+$ ]]
++ bounds[1]=2
++ sliced=(${i//${d}/ })
++ ((  2 >  2  ))
++ ((  2 >  2  ))
++ ((  2 < -2  ))
++ ((  2 < -2  ))
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ s=+
++ is+integer 2
++ [[ 2 =~ ^[0-9]+$ ]]
++ e=+
++ case ${s}${e} in
++ s=1
++ e=1
++ r=0
++ unset o bounds
++ is+integer 0
++ [[ 0 =~ ^[0-9]+$ ]]
++ l=1
++ o=1.819596
++ c=' 1.819596'
+++ echo 1.819596
++ c=1.819596
++ i=1.819596
++ i=1.819596
++ unset c
++ [[ -n '' ]]
++ echo 1.819596
+ val=1.819596
+ qcanat[$var]=1.819596
+ for i in ${!qcanat[@]}
+ qcfile='GMSKEW[5]'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_GMSKEW.txt
+ echo 0.7079001
+ for i in ${!qcanat[@]}
+ qcfile='CORTCON[5]'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_CORTCON.txt
+ echo 0.04042387
+ for i in ${!qcanat[@]}
+ qcfile='GMKURT[5]'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_GMKURT.txt
+ echo 7.403469
+ for i in ${!qcanat[@]}
+ qcfile='CNR[5]'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_CNR.txt
+ echo 0.149816
+ for i in ${!qcanat[@]}
+ qcfile='BGSKEW[5]'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_BGSKEW.txt
+ echo 1.819596
+ for i in ${!qcanat[@]}
+ qcfile='WMSKEW[5]'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_WMSKEW.txt
+ echo -0.07486158
+ for i in ${!qcanat[@]}
+ qcfile='WMKURT[5]'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_WMKURT.txt
+ echo 9.262118
+ for i in ${!qcanat[@]}
+ qcfile='EFC[5]'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_EFC.txt
+ echo 0.6692791
+ for i in ${!qcanat[@]}
+ qcfile='BGKURT[5]'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_BGKURT.txt
+ echo 5.451023
+ for i in ${!qcanat[@]}
+ qcfile='FBER[5]'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_FBER.txt
+ echo 0.9745452
+ for i in ${!qcanat[@]}
+ qcfile='SNR[5]'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_SNR.txt
+ echo 1.961175
+ routine_end
+ [[ -n Computing measures of anatomical quality ]]
+ eval 'echo -e "····································································
Processing step complete:
${routine_description}"'
++ echo -e '····································································
Processing step complete:
Computing measures of anatomical quality'
+ unset routine_description
+ completion
+ source /xcpEngine-master/core/auditComplete
++ id_var=(${ids[sub]//,/ })
++ modaudit=7
++ previous=6
++ mapfile subjaudit
++ auditvals=(${subjaudit[1]//,/ })
++ auditvals=(${auditvals[@]:0:$previous} 1 ${auditvals[@]:$modaudit:${#auditvals[@]}})
+++ join_by , sub-ADS4107 1 1 1 1 1 1
+++ local d=,
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s ,1 ,1 ,1 ,1 ,1 ,1
++ subjaudit[1]=sub-ADS4107,1,1,1,1,1,1
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_logs/sub-ADS4107_audit.csv
++ echo id0,localiser,struc,gmd,jlf,roiquant,qcanat
++ echo sub-ADS4107,1,1,1,1,1,1
+ source /xcpEngine-master/core/updateQuality
++ for i in ${!declared_q[@]}
++ quality_metric BackgroundKurtosis BGKURT
++ local 'quality_value_file=BGKURT[5]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_BGKURT.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ for i in ${!declared_q[@]}
++ quality_metric GreyMatterSkewness GMSKEW
++ local 'quality_value_file=GMSKEW[5]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_GMSKEW.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ for i in ${!declared_q[@]}
++ quality_metric GreyMatterKurtosis GMKURT
++ local 'quality_value_file=GMKURT[5]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_GMKURT.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ for i in ${!declared_q[@]}
++ quality_metric CorticalContrasts CORTCON
++ local 'quality_value_file=CORTCON[5]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_CORTCON.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ for i in ${!declared_q[@]}
++ quality_metric SignalToNoiseRatio SNR
++ local 'quality_value_file=SNR[5]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_SNR.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ for i in ${!declared_q[@]}
++ quality_metric EntropyFocusCriterion EFC
++ local 'quality_value_file=EFC[5]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_EFC.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ for i in ${!declared_q[@]}
++ quality_metric FGBGEnergyRatio FBER
++ local 'quality_value_file=FBER[5]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_FBER.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ for i in ${!declared_q[@]}
++ quality_metric WhiteMatterSkewness WMSKEW
++ local 'quality_value_file=WMSKEW[5]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_WMSKEW.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ for i in ${!declared_q[@]}
++ quality_metric ContrastToNoiseRatio CNR
++ local 'quality_value_file=CNR[5]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_CNR.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ for i in ${!declared_q[@]}
++ quality_metric WhiteMatterKurtosis WMKURT
++ local 'quality_value_file=WMKURT[5]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_WMKURT.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ for i in ${!declared_q[@]}
++ quality_metric BackgroundSkewness BGSKEW
++ local 'quality_value_file=BGSKEW[5]'
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107_qc_BGSKEW.txt ]]
++ qvars=(${qvars[@]} ${1})
++ qvals=(${qvals[@]} $(<${!quality_value_file}))
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/sub-ADS4107_quality.csv
+++ join_by , id0 regCoverage regCrossCorr regDice regJaccard meanGMD BackgroundKurtosis GreyMatterSkewness GreyMatterKurtosis CorticalContrasts SignalToNoiseRatio EntropyFocusCriterion FGBGEnergyRatio WhiteMatterSkewness ContrastToNoiseRatio WhiteMatterKurtosis BackgroundSkewness
+++ local d=,
+++ shift
+++ echo -n id0
+++ shift
+++ printf %s ,regCoverage ,regCrossCorr ,regDice ,regJaccard ,meanGMD ,BackgroundKurtosis ,GreyMatterSkewness ,GreyMatterKurtosis ,CorticalContrasts ,SignalToNoiseRatio ,EntropyFocusCriterion ,FGBGEnergyRatio ,WhiteMatterSkewness ,ContrastToNoiseRatio ,WhiteMatterKurtosis ,BackgroundSkewness
++ qvars=id0,regCoverage,regCrossCorr,regDice,regJaccard,meanGMD,BackgroundKurtosis,GreyMatterSkewness,GreyMatterKurtosis,CorticalContrasts,SignalToNoiseRatio,EntropyFocusCriterion,FGBGEnergyRatio,WhiteMatterSkewness,ContrastToNoiseRatio,WhiteMatterKurtosis,BackgroundSkewness
+++ join_by , sub-ADS4107 0.9992316 0.9669719 0.9751511 0.9515071 0.793882 5.451023 0.7079001 7.403469 0.04042387 1.961175 0.6692791 0.9745452 -0.07486158 0.149816 9.262118 1.819596
+++ local d=,
+++ shift
+++ echo -n sub-ADS4107
+++ shift
+++ printf %s ,0.9992316 ,0.9669719 ,0.9751511 ,0.9515071 ,0.793882 ,5.451023 ,0.7079001 ,7.403469 ,0.04042387 ,1.961175 ,0.6692791 ,0.9745452 ,-0.07486158 ,0.149816 ,9.262118 ,1.819596
++ qvals=sub-ADS4107,0.9992316,0.9669719,0.9751511,0.9515071,0.793882,5.451023,0.7079001,7.403469,0.04042387,1.961175,0.6692791,0.9745452,-0.07486158,0.149816,9.262118,1.819596
++ echo id0,regCoverage,regCrossCorr,regDice,regJaccard,meanGMD,BackgroundKurtosis,GreyMatterSkewness,GreyMatterKurtosis,CorticalContrasts,SignalToNoiseRatio,EntropyFocusCriterion,FGBGEnergyRatio,WhiteMatterSkewness,ContrastToNoiseRatio,WhiteMatterKurtosis,BackgroundSkewness
++ echo sub-ADS4107,0.9992316,0.9669719,0.9751511,0.9515071,0.793882,5.451023,0.7079001,7.403469,0.04042387,1.961175,0.6692791,0.9745452,-0.07486158,0.149816,9.262118,1.819596
+ source /xcpEngine-master/core/moduleEnd
++ for i in ${!declared_c[@]}
++ write_config segmentationQA
++ local 'config=segmentationQA[5]'
++ echo 'segmentationQA[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/struc/sub-ADS4107_BrainSegmentation.nii.gz'
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ echo '


Module Workflow Map
····································································
· START
· @1
· @1.1a
· @1.1a
· @1.1a
· @1.1a
· @3
· @3.1
· @3.2
· FINISH
····································································'
++ intermediate=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107~TEMP~
++ cleanup
++ local 'cleanup=qcanat_cleanup[5]'
++ ((  1 == 1  ))
++ rm -rf '/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS4107/qcanat/sub-ADS4107~TEMP~*'
++ echo '

Module complete'
++ exit 0
rm: cannot remove ‘/projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/anat_cohort.csv.sub-ADS4107.csv,’: No such file or directory
