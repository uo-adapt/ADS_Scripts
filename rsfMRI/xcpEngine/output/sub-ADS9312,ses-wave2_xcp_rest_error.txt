Lmod has detected the following error: These module(s) exist but cannot be
loaded as requested: "c3d"
   Try: "module spider c3d" to see how to load the module(s).



++ export SHELLOPTS
++ declare -A declared_d declared_o declared_c declared_s declared_q
++ subject_parse sub-ADS9312,ses-wave2,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/ses-wave2/func/sub-ADS9312_ses-wave2_task-rest_space-T1w_desc-preproc_bold.nii.gz,/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat /projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/rest_cohort.csv.sub-ADS9312,ses-wave2.csv
++ local abs_test i id_vals idx subject_vals subject_vars v val_full
++ unset subject 'prefix[sub]' 'out[sub]'
++ cohort_vars=()
++ subject_vals=(${1//,/ })
++ read -r subject_vars
++ subject_vars=(${subject_vars//,/ })
++ i=0
++ for v in "${subject_vars[@]}"
++ contains id0 '^id[0-9]*$'
++ [[ id0 =~ ^id[0-9]*$ ]]
++ idx=0
++ eval 'subject[idx]=${subject_vals[i]}'
+++ subject[idx]=sub-ADS9312
++ id_vals=("${id_vals[@]}" "${subject[idx]}")
++ ((  i++  ))
++ for v in "${subject_vars[@]}"
++ contains id1 '^id[0-9]*$'
++ [[ id1 =~ ^id[0-9]*$ ]]
++ idx=1
++ eval 'subject[idx]=${subject_vals[i]}'
+++ subject[idx]=ses-wave2
++ id_vals=("${id_vals[@]}" "${subject[idx]}")
++ ((  i++  ))
++ for v in "${subject_vars[@]}"
++ contains img '^id[0-9]*$'
++ [[ img =~ ^id[0-9]*$ ]]
++ cohort_vars+=(${v}[${sub}])
++ eval 'img[9001]=${subject_vals[i]}'
+++ img[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/ses-wave2/func/sub-ADS9312_ses-wave2_task-rest_space-T1w_desc-preproc_bold.nii.gz
++ [[ -n '' ]]
++ ((  i++  ))
++ for v in "${subject_vars[@]}"
++ contains anat '^id[0-9]*$'
++ [[ anat =~ ^id[0-9]*$ ]]
++ cohort_vars+=(${v}[${sub}])
++ eval 'anat[9001]=${subject_vals[i]}'
+++ anat[9001]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat
++ [[ -n '' ]]
++ ((  i++  ))
++ ((  2 == 0  ))
+++ join_by , sub-ADS9312 ses-wave2
+++ local d=,
+++ shift
+++ echo -n sub-ADS9312
+++ shift
+++ printf %s ,ses-wave2
++ ids[sub]=sub-ADS9312,ses-wave2
+++ join_by _ sub-ADS9312 ses-wave2
+++ local d=_
+++ shift
+++ echo -n sub-ADS9312
+++ shift
+++ printf %s _ses-wave2
++ prefix[sub]=sub-ADS9312_ses-wave2
+++ join_by / sub-ADS9312 ses-wave2
+++ local d=/
+++ shift
+++ echo -n sub-ADS9312
+++ shift
+++ printf %s /ses-wave2
++ out[sub]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2
++ source /projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/fc-ICA-AROMA_201903131537.dsn
++++ whoami
+++ analysis=fc_pettitta
+++ design=/projects/adapt_lab/shared/ADS/Scripts/rsfMRI/xcpEngine/fc-ICA-AROMA_201903131537.dsn
+++ sequence=anatomical
+++ standard=MNI%2x2x2
+++ pipeline=prestats,confound2,regress,fcon,reho,alff,roiquant,norm,qcfc
+++ prestats_rerun[1]=0
+++ prestats_cleanup[1]=1
+++ prestats_process[1]=FMP
+++ confound2_rps[2]=0
+++ confound2_rms[2]=0
+++ confound2_wm[2]=1
+++ confound_wm_ero[2]=5
+++ confound2_csf[2]=1
+++ confound_csf_ero[2]=10
+++ confound2_gsr[2]=1
+++ confound2_acompcor[2]=0
+++ confound2_tcompcor[2]=0
+++ confound2_aroma[2]=1
+++ confound2_past[2]=0
+++ confound2_dx[2]=0
+++ confound2_sq[2]=1
+++ confound2_censor[2]=0
+++ confound2_censor_contig[2]=0
+++ confound2_rerun[2]=0
+++ confound2_cleanup[2]=1
+++ regress_tmpf[3]=butterworth
+++ regress_hipass[3]=0.01
+++ regress_lopass[3]=0.08
+++ regress_tmpf_order[3]=1
+++ regress_tmpf_pass[3]=2
+++ regress_tmpf_ripple[3]=0.5
+++ regress_tmpf_ripple2[3]=20
+++ regress_dmdt[3]=2
+++ regress_1ddt[3]=1
+++ regress_smo[3]=2
+++ regress_sptf[3]=susan
+++ regress_usan[3]=default
+++ regress_usan_space[3]=
+++ regress_rerun[3]=0
+++ regress_cleanup[3]=1
+++ regress_process[3]=DMT-TMP-REG
+++ fcon_atlas[4]=gordon333
+++ fcon_metric[4]=corrcoef
+++ fcon_thr[4]=N
+++ fcon_window[4]=10
+++ fcon_pad[4]=FALSE
+++ fcon_rerun[4]=0
+++ fcon_cleanup[4]=1
+++ reho_nhood[5]=vertices
+++ reho_roikw[5]=0
+++ reho_sptf[5]=susan
+++ reho_smo[5]=2
+++ reho_rerun[5]=0
+++ reho_cleanup[5]=1
+++ alff_hipass[6]=0.01
+++ alff_lopass[6]=0.08
+++ alff_sptf[6]=susan
+++ alff_smo[6]=2
+++ alff_rerun[6]=0
+++ alff_cleanup[6]=1
+++ roiquant_atlas[7]=gordon333
+++ roiquant_globals[7]=1
+++ roiquant_vol[7]=1
+++ roiquant_rerun[7]=0
+++ roiquant_cleanup[7]=1
+++ norm_primary[8]=1
+++ norm_rerun[8]=0
+++ norm_cleanup[8]=1
+++ qcfc_atlas[9]=gordon333
+++ qcfc_sig[9]=fdr
+++ qcfc_rerun[9]=0
+++ qcfc_cleanup[9]=1
++ source /xcpEngine/core/defineLogs
+++ [[ -z '' ]]
+++ export log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_logs/fc_pettitta_201905142126_sub-ADS9312_ses-wave2LOG
+++ log=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_logs/fc_pettitta_201905142126_sub-ADS9312_ses-wave2LOG
+++ export log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_logs/fc_pettitta_201905142126_sub-ADS9312_ses-wave2LOG-process
+++ log_proc=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_logs/fc_pettitta_201905142126_sub-ADS9312_ses-wave2LOG-process
+++ [[ -n localiser ]]
+++ [[ -n /xcpEngine/core/CONSOLE_MODULE_RC ]]
+++ echo '

'
+++ printx /xcpEngine/core/CONSOLE_MODULE_RC
+++ local 'file=


###################################################################
#  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  #
#                                                                 #
#  ⊗$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})⊗  #
#                                                                 #
#  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  #
###################################################################'
+++ eval 'echo -e "


###################################################################
#  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  #
#                                                                 #
#  ⊗$(${XCPEDIR}/core/padAndCentreString 59 ${mod_name})⊗  #
#                                                                 #
#  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  #
###################################################################"'
+++++ /xcpEngine/core/padAndCentreString 59 XCP ENGINE LOCALISER
+ length=59
+ shift 1
+ string='XCP ENGINE LOCALISER'
+ pad=39
+ pad=19
+++ seq 1 19
++ printf '%.0s ' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
+ pad='                   '
+ string='                   XCP ENGINE LOCALISER                   '
+ ((  58 < 59  ))
+ string='                   XCP ENGINE LOCALISER                    '
+ printf '                   XCP ENGINE LOCALISER                    '
++++ echo -e '


###################################################################
#  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  #
#                                                                 #
#  ⊗                   XCP ENGINE LOCALISER                    ⊗  #
#                                                                 #
#  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  ⊗  #
###################################################################'
+++ echo '

'
+ routine @1 Localising subject metadata...
+ signpost=@1
+ routine_map='
· @1'
+ shift
+ routine_description='Localising subject metadata...'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1 '
+ [[ -n Localising subject metadata... ]]
+ eval 'echo -e "


Current processing step:
${vid}${routine_description}
····································································"'
++ echo -e '


Current processing step:
@1 Localising subject metadata...
····································································'



Current processing step:
@1 Localising subject metadata...
····································································
+ subroutine @1.1 '[Parsing' subject 'identifiers]'
+ signpost=@1.1
+ routine_map='
· @1
· @1.1'
+ shift
+ local 'subroutine_description=[Parsing subject identifiers]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.1 '
+ [[ -n [Parsing subject identifiers] ]]
+ echo '· @1.1 [Parsing subject identifiers]'
· @1.1 [Parsing subject identifiers]
+ source /xcpEngine/core/assignDirect
++ for a in "${asgt[@]}"
++ contains out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group '^-'
++ [[ out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group =~ ^- ]]
+++ strslice out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group 1 =
+++ local bounds c d domains e i l m o q r s sliced
+++ i=out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ shift
+++ [[ -n 1 ]]
+++ d=,
+++ domains=(${1//,/ })
+++ shift
+++ for m in "${domains[@]}"
+++ bounds=(${m//:/ })
+++ is_integer 1
+++ [[ 1 =~ ^-?[0-9]+$ ]]
+++ q=(${1//:/ })
+++ q=(${q//,/ })
+++ [[ -n = ]]
+++ is_integer =
+++ [[ = =~ ^-?[0-9]+$ ]]
+++ d==
+++ shift
+++ is_integer
+++ [[ '' =~ ^-?[0-9]+$ ]]
+++ bounds[1]=1
+++ sliced=(${i//${d}/ })
+++ ((  1 >  2  ))
+++ ((  1 >  2  ))
+++ ((  1 < -2  ))
+++ ((  1 < -2  ))
+++ is+integer 1
+++ [[ 1 =~ ^[0-9]+$ ]]
+++ s=+
+++ is+integer 1
+++ [[ 1 =~ ^[0-9]+$ ]]
+++ e=+
+++ case ${s}${e} in
+++ s=0
+++ e=0
+++ r=0
+++ unset o bounds
+++ is+integer 0
+++ [[ 0 =~ ^[0-9]+$ ]]
+++ l=1
+++ o=out_group
+++ c=' out_group'
++++ echo out_group
+++ c=out_group
+++ i=out_group
+++ i=out_group
+++ unset c
+++ [[ -n '' ]]
+++ echo out_group
++ a_var=out_group
+++ strslice out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group 2 =
+++ local bounds c d domains e i l m o q r s sliced
+++ i=out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ shift
+++ [[ -n 2 ]]
+++ d=,
+++ domains=(${1//,/ })
+++ shift
+++ for m in "${domains[@]}"
+++ bounds=(${m//:/ })
+++ is_integer 2
+++ [[ 2 =~ ^-?[0-9]+$ ]]
+++ q=(${1//:/ })
+++ q=(${q//,/ })
+++ [[ -n = ]]
+++ is_integer =
+++ [[ = =~ ^-?[0-9]+$ ]]
+++ d==
+++ shift
+++ is_integer
+++ [[ '' =~ ^-?[0-9]+$ ]]
+++ bounds[1]=2
+++ sliced=(${i//${d}/ })
+++ ((  2 >  2  ))
+++ ((  2 >  2  ))
+++ ((  2 < -2  ))
+++ ((  2 < -2  ))
+++ is+integer 2
+++ [[ 2 =~ ^[0-9]+$ ]]
+++ s=+
+++ is+integer 2
+++ [[ 2 =~ ^[0-9]+$ ]]
+++ e=+
+++ case ${s}${e} in
+++ s=1
+++ e=1
+++ r=0
+++ unset o bounds
+++ is+integer 0
+++ [[ 0 =~ ^[0-9]+$ ]]
+++ l=1
+++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group'
++++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
+++ unset c
+++ [[ -n '' ]]
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
++ a_val=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
++ eval 'out_group=${a_val}'
+++ out_group=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group
++ for a in "${asgt[@]}"
++ contains atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json '^-'
++ [[ atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json =~ ^- ]]
+++ strslice atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json 1 =
+++ local bounds c d domains e i l m o q r s sliced
+++ i=atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ shift
+++ [[ -n 1 ]]
+++ d=,
+++ domains=(${1//,/ })
+++ shift
+++ for m in "${domains[@]}"
+++ bounds=(${m//:/ })
+++ is_integer 1
+++ [[ 1 =~ ^-?[0-9]+$ ]]
+++ q=(${1//:/ })
+++ q=(${q//,/ })
+++ [[ -n = ]]
+++ is_integer =
+++ [[ = =~ ^-?[0-9]+$ ]]
+++ d==
+++ shift
+++ is_integer
+++ [[ '' =~ ^-?[0-9]+$ ]]
+++ bounds[1]=1
+++ sliced=(${i//${d}/ })
+++ ((  1 >  2  ))
+++ ((  1 >  2  ))
+++ ((  1 < -2  ))
+++ ((  1 < -2  ))
+++ is+integer 1
+++ [[ 1 =~ ^[0-9]+$ ]]
+++ s=+
+++ is+integer 1
+++ [[ 1 =~ ^[0-9]+$ ]]
+++ e=+
+++ case ${s}${e} in
+++ s=0
+++ e=0
+++ r=0
+++ unset o bounds
+++ is+integer 0
+++ [[ 0 =~ ^[0-9]+$ ]]
+++ l=1
+++ o=atlas_orig
+++ c=' atlas_orig'
++++ echo atlas_orig
+++ c=atlas_orig
+++ i=atlas_orig
+++ i=atlas_orig
+++ unset c
+++ [[ -n '' ]]
+++ echo atlas_orig
++ a_var=atlas_orig
+++ strslice atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json 2 =
+++ local bounds c d domains e i l m o q r s sliced
+++ i=atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ shift
+++ [[ -n 2 ]]
+++ d=,
+++ domains=(${1//,/ })
+++ shift
+++ for m in "${domains[@]}"
+++ bounds=(${m//:/ })
+++ is_integer 2
+++ [[ 2 =~ ^-?[0-9]+$ ]]
+++ q=(${1//:/ })
+++ q=(${q//,/ })
+++ [[ -n = ]]
+++ is_integer =
+++ [[ = =~ ^-?[0-9]+$ ]]
+++ d==
+++ shift
+++ is_integer
+++ [[ '' =~ ^-?[0-9]+$ ]]
+++ bounds[1]=2
+++ sliced=(${i//${d}/ })
+++ ((  2 >  2  ))
+++ ((  2 >  2  ))
+++ ((  2 < -2  ))
+++ ((  2 < -2  ))
+++ is+integer 2
+++ [[ 2 =~ ^[0-9]+$ ]]
+++ s=+
+++ is+integer 2
+++ [[ 2 =~ ^[0-9]+$ ]]
+++ e=+
+++ case ${s}${e} in
+++ s=1
+++ e=1
+++ r=0
+++ unset o bounds
+++ is+integer 0
+++ [[ 0 =~ ^[0-9]+$ ]]
+++ l=1
+++ o=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ c=' /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json'
++++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ c=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ i=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+++ unset c
+++ [[ -n '' ]]
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
++ a_val=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
++ eval 'atlas_orig=${a_val}'
+++ atlas_orig=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/atlas.json
+ subroutine @1.1a '[Creating' output 'directory]'
+ signpost=@1.1a
+ routine_map='
· @1
· @1.1
· @1.1a'
+ shift
+ local 'subroutine_description=[Creating output directory]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.1a '
+ [[ -n [Creating output directory] ]]
+ echo '· @1.1a [Creating output directory]'
· @1.1a [Creating output directory]
+ subroutine @1.1b '[/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2]'
+ signpost=@1.1b
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b'
+ shift
+ local 'subroutine_description=[/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.1b '
+ [[ -n [/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2] ]]
+ echo '· @1.1b [/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2]'
· @1.1b [/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2]
+ outdir=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2
+ mkdir -p /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2
+ subroutine @1.2 '[Initialising' space 'mapping]'
+ signpost=@1.2
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2'
+ shift
+ local 'subroutine_description=[Initialising space mapping]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.2 '
+ [[ -n [Initialising space mapping] ]]
+ echo '· @1.2 [Initialising space mapping]'
· @1.2 [Initialising space mapping]
+ output spaces sub-ADS9312_ses-wave2_spaces.json
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS9312_ses-wave2_spaces.json == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ eval 'spaces[0]=${path}'
++ spaces[0]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ declared_o[${1}]=spaces
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ echo '{}'
+ subroutine @1.3 '[Initialising' derivative 'maps]'
+ signpost=@1.3
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3'
+ shift
+ local 'subroutine_description=[Initialising derivative maps]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.3 '
+ [[ -n [Initialising derivative maps] ]]
+ echo '· @1.3 [Initialising derivative maps]'
· @1.3 [Initialising derivative maps]
+ output aux_imgs sub-ADS9312_ses-wave2_derivatives.json
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS9312_ses-wave2_derivatives.json == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_derivatives.json
+ eval 'aux_imgs[0]=${path}'
++ aux_imgs[0]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_derivatives.json
+ declared_o[${1}]=aux_imgs
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_derivatives.json
+ echo '{}'
+ subroutine @1.4 '[Initialising' atlas 'system]'
+ signpost=@1.4
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4'
+ shift
+ local 'subroutine_description=[Initialising atlas system]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.4 '
+ [[ -n [Initialising atlas system] ]]
+ echo '· @1.4 [Initialising atlas system]'
· @1.4 [Initialising atlas system]
+ mkdir -p /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_atlas
+ output atlas sub-ADS9312_ses-wave2_atlas/sub-ADS9312_ses-wave2_atlas.json
+ local path
+ [[ s == \/ ]]
+ [[ sub-ADS9312_ses-wave2_atlas/sub-ADS9312_ses-wave2_atlas.json == null ]]
+ path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_atlas/sub-ADS9312_ses-wave2_atlas.json
+ eval 'atlas[0]=${path}'
++ atlas[0]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_atlas/sub-ADS9312_ses-wave2_atlas.json
+ declared_o[${1}]=atlas
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_atlas/sub-ADS9312_ses-wave2_atlas.json
+ echo '{}'
+ subroutine @1.5 Ingress
+ signpost=@1.5
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5'
+ shift
+ local subroutine_description=Ingress
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.5 '
+ [[ -n Ingress ]]
+ echo '· @1.5 Ingress'
· @1.5 Ingress
+ for var in "${cohort_vars[@]}"
+ [[ ! -s /xcpEngine/core/ingress/img.ing ]]
+ continue
+ for var in "${cohort_vars[@]}"
+ [[ ! -s /xcpEngine/core/ingress/anat.ing ]]
+ source /xcpEngine/core/Ingress.sh
++ unset ing
++ mapfile ing
++ [[ ! -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat ]]
++ for i in ${!ing[@]}
++ i=(${ing[i]})
++ i[1]='/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/*space.json'
++ case ${i[0]} in
++ import_metadata '/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/*space.json' to
++ local meta_new meta_floating
++ meta_floating='{}'
++ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/*space.json != to ]]
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/*space.json ]]
++ [[ -z '' ]]
++ meta_new='{}'
+++ json_merge meta_floating meta_new
+++ /xcpEngine/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{}' '{}'
++ meta_floating='{}'
++ meta_new=
++ shift
++ [[ to != to ]]
++ [[ -s '' ]]
++ [[ -z '' ]]
++ meta_new='{}'
+++ json_merge meta_floating meta_new
+++ /xcpEngine/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{}' '{}'
++ meta_floating='{}'
++ rm -f
++ json_print meta_floating
/xcpEngine/core/functions/import_metadata: line 16: ${2}: ambiguous redirect
++ for i in ${!ing[@]}
++ i=(${ing[i]})
++ i[1]='/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/*atlas.json'
++ case ${i[0]} in
++ import_metadata '/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/*atlas.json' to
++ local meta_new meta_floating
++ meta_floating='{}'
++ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/*atlas.json != to ]]
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/*atlas.json ]]
++ [[ -z '' ]]
++ meta_new='{}'
+++ json_merge meta_floating meta_new
+++ /xcpEngine/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{}' '{}'
++ meta_floating='{}'
++ meta_new=
++ shift
++ [[ to != to ]]
++ [[ -s '' ]]
++ [[ -z '' ]]
++ meta_new='{}'
+++ json_merge meta_floating meta_new
+++ /xcpEngine/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{}' '{}'
++ meta_floating='{}'
++ rm -f
++ json_print meta_floating
/xcpEngine/core/functions/import_metadata: line 16: ${2}: ambiguous redirect
++ for i in ${!ing[@]}
++ i=(${ing[i]})
++ i[1]='/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*ExtractedBrain0N4.nii.gz'
++ case ${i[0]} in
++ contains /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionMask._ExtractedBrain0N4.nii.gz %INT
++ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz =~ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionMask._ExtractedBrain0N4.nii.gz ]]
++ contains /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionMask._ExtractedBrain0N4.nii.gz %IDS
++ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz =~ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionMask._ExtractedBrain0N4.nii.gz ]]
++ [[ -z '' ]]
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*ExtractedBrain0N4.nii.gz ]]
++ contains struct '^\!'
++ [[ struct =~ ^\! ]]
++ assign 'i[1]' as 'struct[sub]'
++ local input input_try type
++ [[ i[1] == image ]]
++ [[ i[1] == 1dim ]]
++ [[ i[1] == files ]]
++ [[ i[1] == value ]]
++ [[ -z '' ]]
++ type=value
++ ((  3 > 0  ))
++ [[ -z '' ]]
++ input_try='i[1]'
++ case $type in
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*ExtractedBrain0N4.nii.gz ]]
++ input='/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*ExtractedBrain0N4.nii.gz'
++ ((  3   >  1   ))
++ shift
++ [[ as == as ]]
++ shift
++ break
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*ExtractedBrain0N4.nii.gz ]]
++ eval 'struct[sub]=${input}'
+++ struct[sub]='/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*ExtractedBrain0N4.nii.gz'
++ blog='struct[9001]'
++ cohort_vars+=(${i[0]}[$sub])
++ for i in ${!ing[@]}
++ i=(${ing[i]})
++ i[1]='/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz'
++ case ${i[0]} in
++ contains '/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz' %INT
++ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz =~ %INT ]]
++ contains '/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz' %IDS
++ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz =~ %IDS ]]
++ [[ -z '' ]]
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz ]]
++ contains struct_head '^\!'
++ [[ struct_head =~ ^\! ]]
++ assign 'i[1]' as 'struct_head[sub]'
++ local input input_try type
++ [[ i[1] == image ]]
++ [[ i[1] == 1dim ]]
++ [[ i[1] == files ]]
++ [[ i[1] == value ]]
++ [[ -z '' ]]
++ type=value
++ ((  3 > 0  ))
++ [[ -z '' ]]
++ input_try='i[1]'
++ case $type in
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz ]]
++ input='/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz'
++ ((  3   >  1   ))
++ shift
++ [[ as == as ]]
++ shift
++ break
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz ]]
++ eval 'struct_head[sub]=${input}'
+++ struct_head[sub]='/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz'
++ blog='struct_head[9001]'
++ cohort_vars+=(${i[0]}[$sub])
++ for i in ${!ing[@]}
++ i=(${ing[i]})
++ i[1]='/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation.nii.gz'
++ case ${i[0]} in
++ contains '/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation.nii.gz' %INT
++ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation.nii.gz =~ %INT ]]
++ contains '/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation.nii.gz' %IDS
++ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation.nii.gz =~ %IDS ]]
++ [[ -z '' ]]
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation.nii.gz ]]
++ contains segmentation '^\!'
++ [[ segmentation =~ ^\! ]]
++ assign 'i[1]' as 'segmentation[sub]'
++ local input input_try type
++ [[ i[1] == image ]]
++ [[ i[1] == 1dim ]]
++ [[ i[1] == files ]]
++ [[ i[1] == value ]]
++ [[ -z '' ]]
++ type=value
++ ((  3 > 0  ))
++ [[ -z '' ]]
++ input_try='i[1]'
++ case $type in
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation.nii.gz ]]
++ input='/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation.nii.gz'
++ ((  3   >  1   ))
++ shift
++ [[ as == as ]]
++ shift
++ break
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation.nii.gz ]]
++ eval 'segmentation[sub]=${input}'
+++ segmentation[sub]='/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation.nii.gz'
++ blog='segmentation[9001]'
++ cohort_vars+=(${i[0]}[$sub])
+ source /xcpEngine/core/initSpace
++ tag=@1.5
++ [[ -z anatomical ]]
++ [[ -z '' ]]
++ space[$sub]=sub-ADS9312_ses-wave2_anatomical
++ subroutine @1.5.1 '[Native' space: 'sub-ADS9312_ses-wave2_anatomical]'
++ signpost=@1.5.1
++ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1'
++ shift
++ local 'subroutine_description=[Native space: sub-ADS9312_ses-wave2_anatomical]'
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ local 'vid=@1.5.1 '
++ [[ -n [Native space: sub-ADS9312_ses-wave2_anatomical] ]]
++ echo '· @1.5.1 [Native space: sub-ADS9312_ses-wave2_anatomical]'
· @1.5.1 [Native space: sub-ADS9312_ses-wave2_anatomical]
++ standard=(${standard//_via_/ })
++ for i in "${!standard[@]}"
++ std=MNI
+++ abspath /xcpEngine/space/MNI/MNI_space.json
+++ local p path
++++ ls -d1 /xcpEngine/space/MNI/MNI_space.json
+++ local path=/xcpEngine/space/MNI/MNI_space.json
+++ for p in ${path}
+++ [[ -d /xcpEngine/space/MNI/MNI_space.json ]]
+++ [[ -f /xcpEngine/space/MNI/MNI_space.json ]]
+++ [[ /xcpEngine/space/MNI/MNI_space.json == */* ]]
++++ cd /xcpEngine/space/MNI
++++ pwd
+++ echo /xcpEngine/space/MNI/MNI_space.json
++ space_standard=/xcpEngine/space/MNI/MNI_space.json
++ ((  i == 0  ))
++ [[ -s /xcpEngine/space/MNI/MNI_space.json ]]
++ subroutine @1.5.2a '[Standard' space: 'MNI]'
++ signpost=@1.5.2a
++ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a'
++ shift
++ local 'subroutine_description=[Standard space: MNI]'
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ local 'vid=@1.5.2a '
++ [[ -n [Standard space: MNI] ]]
++ echo '· @1.5.2a [Standard space: MNI]'
· @1.5.2a [Standard space: MNI]
++ import_metadata /xcpEngine/space/MNI/MNI_space.json to /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
++ local meta_new meta_floating
++ meta_floating='{}'
++ [[ /xcpEngine/space/MNI/MNI_space.json != to ]]
++ [[ -s /xcpEngine/space/MNI/MNI_space.json ]]
+++ printx /xcpEngine/space/MNI/MNI_space.json
+++ local 'file={
  "MNI%1x1x1": {
    "Map": "${BRAINSPACE}/MNI/MNI-1x1x1.nii.gz",
    "MaskDilated": "${BRAINSPACE}/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "BrainPrior": "${BRAINSPACE}/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "MapHead": "${BRAINSPACE}/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "${BRAINSPACE}/MNI/MNI-1x1x1Mask.nii.gz",
    "Priors": "${BRAINSPACE}/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "LeftHemisphere": "${BRAINSPACE}/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "RightHemisphere": "${BRAINSPACE}/MNI/MNI-1x1x1RightHemisphere.nii.gz",
    "Citation": "${BRAINSPACE}/MNI/MNI_reference.bib"
  },
  "MNI%2x2x2": {
    "Map": "${BRAINSPACE}/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "${BRAINSPACE}/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
+++ eval 'echo -e "{
  \"MNI%1x1x1\": {
    \"Map\": \"${BRAINSPACE}/MNI/MNI-1x1x1.nii.gz\",
    \"MaskDilated\": \"${BRAINSPACE}/MNI/MNI-1x1x1MaskDilated.nii.gz\",
    \"BrainPrior\": \"${BRAINSPACE}/MNI/MNI-1x1x1BrainPrior.nii.gz\",
    \"MapHead\": \"${BRAINSPACE}/MNI/MNI-1x1x1Head.nii.gz\",
    \"Mask\": \"${BRAINSPACE}/MNI/MNI-1x1x1Mask.nii.gz\",
    \"Priors\": \"${BRAINSPACE}/MNI/MNI_priors/MNI-priors-%03d.nii.gz\",
    \"LeftHemisphere\": \"${BRAINSPACE}/MNI/MNI-1x1x1LeftHemisphere.nii.gz\",
    \"RightHemisphere\": \"${BRAINSPACE}/MNI/MNI-1x1x1RightHemisphere.nii.gz\",
    \"Citation\": \"${BRAINSPACE}/MNI/MNI_reference.bib\"
  },
  \"MNI%2x2x2\": {
    \"Map\": \"${BRAINSPACE}/MNI/MNI-2x2x2.nii.gz\",
    \"MapHead\": \"${BRAINSPACE}/MNI/MNI-2x2x2Head.nii.gz\"
  }
}"'
++++ echo -e '{
  "MNI%1x1x1": {
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ meta_new='{
  "MNI%1x1x1": {
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ [[ -z {
  "MNI%1x1x1": {
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
} ]]
+++ json_merge meta_floating meta_new
+++ /xcpEngine/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{}' '{' '"MNI%1x1x1":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}'
++ meta_floating='{
  "MNI%1x1x1": {
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ meta_new=
++ shift
++ [[ to != to ]]
++ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json ]]
+++ printx /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+++ local 'file={}'
+++ eval 'echo -e "{}"'
++++ echo -e '{}'
++ meta_new='{}'
++ [[ -z {} ]]
+++ json_merge meta_floating meta_new
+++ /xcpEngine/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
+++ echo '{' '"MNI%1x1x1":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}' '{}'
++ meta_floating='{
  "MNI%1x1x1": {
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
++ json_print meta_floating
++ /xcpEngine/thirdparty/jq/jq-linux64 --sort-keys .
++ echo '{' '"MNI%1x1x1":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}'
++++ space_get MNI%2x2x2 Map
++++ [[ -n '' ]]
+++++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
++++ local 'spc={
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++++ json_get spc MNI%2x2x2 Map
++++ ((  3 == 3  ))
+++++ /xcpEngine/thirdparty/jq/jq-linux64 --raw-output '."MNI%2x2x2"."Map"'
+++++ echo '{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++++ eval echo /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+++++ echo /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
++++ ((  3 == 2  ))
+++ abspath /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+++ local p path
++++ ls -d1 /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+++ local path=/xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+++ for p in ${path}
+++ [[ -d /xcpEngine/space/MNI/MNI-2x2x2.nii.gz ]]
+++ [[ -f /xcpEngine/space/MNI/MNI-2x2x2.nii.gz ]]
+++ [[ /xcpEngine/space/MNI/MNI-2x2x2.nii.gz == */* ]]
++++ cd /xcpEngine/space/MNI
++++ pwd
+++ echo /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
++ template=/xcpEngine/space/MNI/MNI-2x2x2.nii.gz
++ normalise=1
++ standard=MNI%2x2x2
++ str_targ=MNI%2x2x2
++++ space_get MNI%2x2x2 Map
++++ [[ -n '' ]]
+++++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
++++ local 'spc={
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++++ json_get spc MNI%2x2x2 Map
++++ ((  3 == 3  ))
+++++ /xcpEngine/thirdparty/jq/jq-linux64 --raw-output '."MNI%2x2x2"."Map"'
+++++ echo '{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++++ eval echo /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+++++ echo /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
++++ ((  3 == 2  ))
+++ abspath /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+++ local p path
++++ ls -d1 /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+++ local path=/xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+++ for p in ${path}
+++ [[ -d /xcpEngine/space/MNI/MNI-2x2x2.nii.gz ]]
+++ [[ -f /xcpEngine/space/MNI/MNI-2x2x2.nii.gz ]]
+++ [[ /xcpEngine/space/MNI/MNI-2x2x2.nii.gz == */* ]]
++++ cd /xcpEngine/space/MNI
++++ pwd
+++ echo /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
++ str_temp=/xcpEngine/space/MNI/MNI-2x2x2.nii.gz
++ configure structural sub-ADS9312_ses-wave2_anatomical
++ eval 'structural[0]="${@:2}"'
+++ structural[0]=sub-ADS9312_ses-wave2_anatomical
++ declared_c[${1}]=structural
++ [[ -z '' ]]
++ xfms='  
                              
                              
                              '
++ [[ -z '' ]]
++ ixfms='  
                              
                              
                              '
++ [[ -n   
                              
                              
                               ]]
++ subroutine @1.5.3a '[Anatomical' space: 'sub-ADS9312_ses-wave2_anatomical]'
++ signpost=@1.5.3a
++ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a'
++ shift
++ local 'subroutine_description=[Anatomical space: sub-ADS9312_ses-wave2_anatomical]'
++ verbose
++ [[ -n 3 ]]
++ ((  3 != 0  ))
++ local 'vid=@1.5.3a '
++ [[ -n [Anatomical space: sub-ADS9312_ses-wave2_anatomical] ]]
++ echo '· @1.5.3a [Anatomical space: sub-ADS9312_ses-wave2_anatomical]'
· @1.5.3a [Anatomical space: sub-ADS9312_ses-wave2_anatomical]
+++ echo
++ xfms=
+++ echo
++ ixfms=
++ xfms=
++ ixfms=
++ is_image '/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz'
++ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz ]]
++++ readlink -f '/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz'
+++ /opt/fsl-5.0.10/bin/imtest '/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*BrainSegmentation0N4.nii.gz'
++ ((  0 == 1  ))
++ /xcpEngine/utils/spaceMetadata -o /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json -f MNI%2x2x2:/xcpEngine/space/MNI/MNI-2x2x2.nii.gz -m 'sub-ADS9312_ses-wave2_anatomical:/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/*ExtractedBrain0N4.nii.gz' -x -i -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ source /xcpEngine/core/constants
++ readonly 'RED=\033[0;31m'
++ RED='\033[0;31m'
++ readonly 'CYA=\033[0;36m'
++ CYA='\033[0;36m'
++ readonly 'LGR=\033[0;37m'
++ LGR='\033[0;37m'
++ readonly 'RCL=\033[0m'
++ RCL='\033[0m'
++ readonly ORIENTATION_ITK=RAI
++ ORIENTATION_ITK=RAI
++ readonly SIGMA=2.35482004503
++ SIGMA=2.35482004503
++ readonly PI=3.14159265359
++ PI=3.14159265359
++ readonly NBASE=2.71828182846
++ NBASE=2.71828182846
++ readonly PHI=1.61803398875
++ PHI=1.61803398875
++ [[ ! -d '' ]]
++ readonly BRAINSPACE=/xcpEngine/space
++ BRAINSPACE=/xcpEngine/space
++ [[ ! -d '' ]]
++ readonly BRAINATLAS=/xcpEngine/atlas
++ BRAINATLAS=/xcpEngine/atlas
++ [[ -z /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_logs/fc_pettitta_201905142126_sub-ADS9312_ses-wave2LOG-process ]]
++ unset s d a
++ declare -A s d a
+ source /xcpEngine/core/functions/library.sh
++ LIBRARY=/xcpEngine/core/functions
++ source /xcpEngine/core/functions/abort_stream
++ source /xcpEngine/core/functions/abspath
++ source /xcpEngine/core/functions/add_reference
++ source /xcpEngine/core/functions/apply_exec
++ source /xcpEngine/core/functions/arithmetic
++ source /xcpEngine/core/functions/assign
++ source /xcpEngine/core/functions/atlas
++ source /xcpEngine/core/functions/atlas_check
++ source /xcpEngine/core/functions/atlas_parse
++ source /xcpEngine/core/functions/atlas_set
++ source /xcpEngine/core/functions/cleanup
++ source /xcpEngine/core/functions/configure
++ source /xcpEngine/core/functions/configures
++ source /xcpEngine/core/functions/contains
++ source /xcpEngine/core/functions/define
++ source /xcpEngine/core/functions/derivative
++ source /xcpEngine/core/functions/derivative_cxt
++ source /xcpEngine/core/functions/derivative_floats
++ source /xcpEngine/core/functions/derivative_inherit
++ source /xcpEngine/core/functions/derivative_parse
++ source /xcpEngine/core/functions/derivative_set
++ source /xcpEngine/core/functions/doi2bib
++ source /xcpEngine/core/functions/echo_cmd
++ source /xcpEngine/core/functions/exec_afni
++ source /xcpEngine/core/functions/exec_ants
++ source /xcpEngine/core/functions/exec_c3d
++ source /xcpEngine/core/functions/exec_fsl
++ source /xcpEngine/core/functions/exec_sys
++ source /xcpEngine/core/functions/exec_xcp
++ source /xcpEngine/core/functions/final
++ source /xcpEngine/core/functions/import_image
++ source /xcpEngine/core/functions/import_metadata
++ source /xcpEngine/core/functions/input
++ source /xcpEngine/core/functions/is_1D
++ source /xcpEngine/core/functions/is_image
++ source /xcpEngine/core/functions/is_integer
++ source /xcpEngine/core/functions/is+integer
++ source /xcpEngine/core/functions/is_numeric
++ source /xcpEngine/core/functions/is+numeric
++ source /xcpEngine/core/functions/join_by
++ source /xcpEngine/core/functions/json_get
++ source /xcpEngine/core/functions/json_get_array
++ source /xcpEngine/core/functions/json_keys
++ source /xcpEngine/core/functions/json_merge
++ source /xcpEngine/core/functions/json_multiset
++ source /xcpEngine/core/functions/json_object
++ source /xcpEngine/core/functions/json_print
++ source /xcpEngine/core/functions/json_rm
++ source /xcpEngine/core/functions/json_set
++ source /xcpEngine/core/functions/json_set_array
++ source /xcpEngine/core/functions/lc_prefix
++ source /xcpEngine/core/functions/load_atlas
++ source /xcpEngine/core/functions/load_derivatives
++ source /xcpEngine/core/functions/matchexact
++ source /xcpEngine/core/functions/matching
++ source /xcpEngine/core/functions/ninstances
++ source /xcpEngine/core/functions/output
++ source /xcpEngine/core/functions/printx
++ source /xcpEngine/core/functions/proc_afni
++ source /xcpEngine/core/functions/proc_ants
++ source /xcpEngine/core/functions/proc_c3d
++ source /xcpEngine/core/functions/proc_cmd
++ source /xcpEngine/core/functions/proc_fsl
++ source /xcpEngine/core/functions/proc_xcp
++ source /xcpEngine/core/functions/process
++ source /xcpEngine/core/functions/processed
++ source /xcpEngine/core/functions/qc
++ source /xcpEngine/core/functions/quality_metric
++ source /xcpEngine/core/functions/repeat
++ source /xcpEngine/core/functions/require
++ source /xcpEngine/core/functions/rerun
++ source /xcpEngine/core/functions/rln
++ source /xcpEngine/core/functions/routine
++ source /xcpEngine/core/functions/routine_end
++ source /xcpEngine/core/functions/set_space
++ source /xcpEngine/core/functions/space_get
++ source /xcpEngine/core/functions/space_set
++ source /xcpEngine/core/functions/strslice
++ source /xcpEngine/core/functions/subroutine
++ source /xcpEngine/core/functions/subject_parse
++ source /xcpEngine/core/functions/transform_set
++ source /xcpEngine/core/functions/verbose
++ source /xcpEngine/core/functions/warpspace
++ source /xcpEngine/core/functions/write_atlas
++ source /xcpEngine/core/functions/write_config_safe
++ source /xcpEngine/core/functions/write_config
++ source /xcpEngine/core/functions/write_derivative
++ source /xcpEngine/core/functions/write_output
++ source /xcpEngine/core/functions/zscore_image
+ [[ ! -s /xcpEngine/thirdparty/jq/jq-linux64 ]]
+ combine_only=0
+ unset sourceSpace
+ declare -A sourceSpace
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ out=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ fixed=(${OPTARG//:/ })
++ eval echo /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+++ echo /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+ is_image /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+ [[ -n /xcpEngine/space/MNI/MNI-2x2x2.nii.gz ]]
+++ readlink -f /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+ ((  1 == 1  ))
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ moving=(${OPTARG//:/ })
+ for i in ${moving[1]//,/ }
+ i=(${i//\=/ })
+ [[ -z '' ]]
+ i[1]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
+ i[0]=Map
+ sourceSpace[${i[0]}]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
+ source_space_map=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
+ ((  1 == 1  ))
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ transforms=-i
+ getopts o:d:m:f:x:i:s:t OPTION
+ case $OPTION in
+ space=(${OPTARG//,/ })
+ [[ ! -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json ]]
+ getopts o:d:m:f:x:i:s:t OPTION
+ [[ -z /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json ]]
+ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json != /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json ]]
++ eval echo /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+++ echo /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+ fixed1=/xcpEngine/space/MNI/MNI-2x2x2.nii.gz
++ eval echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
+++ echo /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
+ source_space_map=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
+ [[ -n '' ]]
+ [[ -n sub-ADS9312_ses-wave2_anatomical ]]
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
+ ((  1 == 1  ))
+ is_image /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+ [[ -n /xcpEngine/space/MNI/MNI-2x2x2.nii.gz ]]
+++ readlink -f /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
++ /opt/fsl-5.0.10/bin/imtest /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+ ((  1 == 1  ))
+ [[ -z -i ]]
+ meta=from_custom
+ matchexact /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ local i
+ local match=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ shift
+ [[ -z /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json ]]
+ for i in ${@}
+ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json == /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json ]]
+ return 0
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json ]]
+ subroutine @u.2
+ signpost=@u.2
+ routine_map='
· @u.2'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n '' ]]
+ [[ -n '' ]]
+ verbose
+ [[ -n '' ]]
+ for s in "${space[@]}"
+ subroutine @u.2.1
+ signpost=@u.2.1
+ routine_map='
· @u.2
· @u.2.1'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n '' ]]
+ [[ -n '' ]]
+ verbose
+ [[ -n '' ]]
+ import_metadata /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json to /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ local meta_new meta_floating
+ meta_floating='{}'
+ [[ /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json != to ]]
+ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json ]]
++ printx /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
++ local 'file={
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ eval 'echo -e "{
  \"MNI%1x1x1\": {
    \"BrainPrior\": \"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz\",
    \"Citation\": \"/xcpEngine/space/MNI/MNI_reference.bib\",
    \"LeftHemisphere\": \"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz\",
    \"Map\": \"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz\",
    \"MapHead\": \"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz\",
    \"Mask\": \"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz\",
    \"MaskDilated\": \"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz\",
    \"Priors\": \"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz\",
    \"RightHemisphere\": \"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz\"
  },
  \"MNI%2x2x2\": {
    \"Map\": \"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz\",
    \"MapHead\": \"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz\"
  }
}"'
+++ echo -e '{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
+ meta_new='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
+ [[ -z {
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
} ]]
++ json_merge meta_floating meta_new
++ /xcpEngine/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
++ echo '{}' '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}'
+ meta_floating='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
+ meta_new=
+ shift
+ [[ to != to ]]
+ [[ -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json ]]
++ printx /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
++ local 'file={
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
++ eval 'echo -e "{
  \"MNI%1x1x1\": {
    \"BrainPrior\": \"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz\",
    \"Citation\": \"/xcpEngine/space/MNI/MNI_reference.bib\",
    \"LeftHemisphere\": \"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz\",
    \"Map\": \"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz\",
    \"MapHead\": \"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz\",
    \"Mask\": \"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz\",
    \"MaskDilated\": \"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz\",
    \"Priors\": \"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz\",
    \"RightHemisphere\": \"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz\"
  },
  \"MNI%2x2x2\": {
    \"Map\": \"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz\",
    \"MapHead\": \"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz\"
  }
}"'
+++ echo -e '{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
+ meta_new='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
+ [[ -z {
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
} ]]
++ json_merge meta_floating meta_new
++ /xcpEngine/thirdparty/jq/jq-linux64 -s '(.|.[0]) * (.|.[1])'
++ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}' '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}'
+ meta_floating='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ json_print meta_floating
+ /xcpEngine/thirdparty/jq/jq-linux64 --sort-keys .
+ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}'
+ ((  0 == 1  ))
+ case ${meta} in
+ subroutine @u.4
+ signpost=@u.4
+ routine_map='
· @u.2
· @u.2.1
· @u.4'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n '' ]]
+ [[ -n '' ]]
+ verbose
+ [[ -n '' ]]
+ subroutine @u.5
+ signpost=@u.5
+ routine_map='
· @u.2
· @u.2.1
· @u.4
· @u.5'
+ shift
+ local subroutine_description=
+ verbose
+ [[ -n '' ]]
+ [[ -n '' ]]
+ verbose
+ [[ -n '' ]]
+ [[ ! -s /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json ]]
+ space_set /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json MNI%2x2x2 Map /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+ local space_chk space_new space_old spaces spaces_path
+ spaces_path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ shift
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ spaces='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
+ ((  3 == 1  ))
++ json_get '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}' MNI%2x2x2
++ ((  31 == 3  ))
++ ((  31 == 2  ))
+ space_chk=
+ [[ '' == null ]]
+ json_set spaces MNI%2x2x2 Map /xcpEngine/space/MNI/MNI-2x2x2.nii.gz
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine/thirdparty/jq/jq-linux64 --raw-output '."MNI%2x2x2" += {"Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz"}'
++ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'spaces=${json_new[@]}'
++ spaces='{ "MNI%1x1x1": { "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz", "Citation": "/xcpEngine/space/MNI/MNI_reference.bib", "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz", "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz", "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz", "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz", "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz", "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz", "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz" }, "MNI%2x2x2": { "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz", "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz" } }'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ json_print spaces
+ /xcpEngine/thirdparty/jq/jq-linux64 --sort-keys .
+ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}'
+ for i in ${!sourceSpace[@]}
+ space_set /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json sub-ADS9312_ses-wave2_anatomical Map /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
+ local space_chk space_new space_old spaces spaces_path
+ spaces_path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ shift
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ spaces='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  }
}'
+ ((  3 == 1  ))
++ json_get '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}' sub-ADS9312_ses-wave2_anatomical
++ ((  31 == 3  ))
++ ((  31 == 2  ))
+ space_chk=
+ [[ '' == null ]]
+ json_set spaces sub-ADS9312_ses-wave2_anatomical Map /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz
+ json_new=($(echo ${!1}|$JQ_PATH --raw-output '."'"${2}"'" += {"'"${3}"'": "'"${4}"'"}'))
++ /xcpEngine/thirdparty/jq/jq-linux64 --raw-output '."sub-ADS9312_ses-wave2_anatomical" += {"Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz"}'
++ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'spaces=${json_new[@]}'
++ spaces='{ "MNI%1x1x1": { "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz", "Citation": "/xcpEngine/space/MNI/MNI_reference.bib", "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz", "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz", "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz", "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz", "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz", "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz", "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz" }, "MNI%2x2x2": { "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz", "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz" }, "sub-ADS9312_ses-wave2_anatomical": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz" } }'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ json_print spaces
+ /xcpEngine/thirdparty/jq/jq-linux64 --sort-keys .
+ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS9312_ses-wave2_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz"' '}' '}'
+ moving[0]=sub-ADS9312_ses-wave2_anatomical
+ fixed[0]=MNI
+ transform_set /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json itk:-i sub-ADS9312_ses-wave2_anatomical MNI
+ local itk dramms fsl source spaces spaces_path target transform transform_chk
+ itk=TransformANTs
+ fsl=TransformFSL
+ dramms=TransformDRAMMS
+ spaces_path=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ shift
++ cat /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ spaces='{
  "MNI%1x1x1": {
    "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",
    "Citation": "/xcpEngine/space/MNI/MNI_reference.bib",
    "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",
    "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",
    "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",
    "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",
    "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",
    "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"
  },
  "MNI%2x2x2": {
    "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",
    "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"
  },
  "sub-ADS9312_ses-wave2_anatomical": {
    "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz"
  }
}'
+ transform=($(echo ${1/:/ }))
++ echo itk -i
+ source=sub-ADS9312_ses-wave2_anatomical
+ target=MNI
++ json_get spaces_fixed sub-ADS9312_ses-wave2_anatomical:MNI
++ ((  2 == 3  ))
++ ((  2 == 2  ))
++ /xcpEngine/thirdparty/jq/jq-linux64 --raw-output '{"sub-ADS9312_ses-wave2_anatomical:MNI":."sub-ADS9312_ses-wave2_anatomical:MNI"}'
++ echo ''
+ transform_chk=
+ [[ '' == null ]]
+ json_set_array spaces sub-ADS9312_ses-wave2_anatomical:MNI TransformANTs -i
+ local elements=-i
+ json_new=($(echo ${!1}|$JQ_PATH '."'"${2}"'" += {"'"${3}"'": [ "'"${elements}"'" ] }'))
++ /xcpEngine/thirdparty/jq/jq-linux64 '."sub-ADS9312_ses-wave2_anatomical:MNI" += {"TransformANTs": [ "-i" ] }'
++ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS9312_ses-wave2_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz"' '}' '}'
+ local json_new
+ ((  4 == 4  ))
+ eval 'spaces=${json_new[@]}'
++ spaces='{ "MNI%1x1x1": { "BrainPrior": "/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz", "Citation": "/xcpEngine/space/MNI/MNI_reference.bib", "LeftHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz", "Map": "/xcpEngine/space/MNI/MNI-1x1x1.nii.gz", "MapHead": "/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz", "Mask": "/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz", "MaskDilated": "/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz", "Priors": "/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz", "RightHemisphere": "/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz" }, "MNI%2x2x2": { "Map": "/xcpEngine/space/MNI/MNI-2x2x2.nii.gz", "MapHead": "/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz" }, "sub-ADS9312_ses-wave2_anatomical": { "Map": "/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz" }, "sub-ADS9312_ses-wave2_anatomical:MNI": { "TransformANTs": [ "-i" ] } }'
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_spaces.json
+ json_print spaces
+ /xcpEngine/thirdparty/jq/jq-linux64 --sort-keys .
+ echo '{' '"MNI%1x1x1":' '{' '"BrainPrior":' '"/xcpEngine/space/MNI/MNI-1x1x1BrainPrior.nii.gz",' '"Citation":' '"/xcpEngine/space/MNI/MNI_reference.bib",' '"LeftHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1LeftHemisphere.nii.gz",' '"Map":' '"/xcpEngine/space/MNI/MNI-1x1x1.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-1x1x1Head.nii.gz",' '"Mask":' '"/xcpEngine/space/MNI/MNI-1x1x1Mask.nii.gz",' '"MaskDilated":' '"/xcpEngine/space/MNI/MNI-1x1x1MaskDilated.nii.gz",' '"Priors":' '"/xcpEngine/space/MNI/MNI_priors/MNI-priors-%03d.nii.gz",' '"RightHemisphere":' '"/xcpEngine/space/MNI/MNI-1x1x1RightHemisphere.nii.gz"' '},' '"MNI%2x2x2":' '{' '"Map":' '"/xcpEngine/space/MNI/MNI-2x2x2.nii.gz",' '"MapHead":' '"/xcpEngine/space/MNI/MNI-2x2x2Head.nii.gz"' '},' '"sub-ADS9312_ses-wave2_anatomical":' '{' '"Map":' '"/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/anat/struc/sub-ADS9312_BrainExtractionBrain._ExtractedBrain0N4.nii.gz"' '},' '"sub-ADS9312_ses-wave2_anatomical:MNI":' '{' '"TransformANTs":' '[' '"-i"' ']' '}' '}'
+ [[ -n '' ]]
+ subroutine @1.5 '[Priming' analytic 'audit]'
+ signpost=@1.5
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5'
+ shift
+ local 'subroutine_description=[Priming analytic audit]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.5 '
+ [[ -n [Priming analytic audit] ]]
+ echo '· @1.5 [Priming analytic audit]'
· @1.5 [Priming analytic audit]
+ audit[sub]=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_logs/sub-ADS9312_ses-wave2_audit.csv
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_logs/sub-ADS9312_ses-wave2_audit.csv
++ echo 0 1
+ id_vars='0 1'
++ echo id0,id1
+ id_vars=id0,id1
+ audit_var=id0,id1,localiser,prestats,confound2,regress,fcon,reho,alff,roiquant,norm,qcfc
++ ninstances , prestats,confound2,regress,fcon,reho,alff,roiquant,norm,qcfc
++ local char=,
++ shift
+++ echo prestats,confound2,regress,fcon,reho,alff,roiquant,norm,qcfc
++ local string=prestats,confound2,regress,fcon,reho,alff,roiquant,norm,qcfc
++ reduced=,,,,,,,,
++ printf 8
+ num_mods=10
+++ seq 1 10
++ printf ,0%.0s 1 2 3 4 5 6 7 8 9 10
+ audit_val=sub-ADS9312,ses-wave2,0,0,0,0,0,0,0,0,0,0
+ echo id0,id1,localiser,prestats,confound2,regress,fcon,reho,alff,roiquant,norm,qcfc
+ echo sub-ADS9312,ses-wave2,0,0,0,0,0,0,0,0,0,0
+ subroutine @1.6 '[Priming' quality 'assessment]'
+ signpost=@1.6
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5
· @1.6'
+ shift
+ local 'subroutine_description=[Priming quality assessment]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@1.6 '
+ [[ -n [Priming quality assessment] ]]
+ echo '· @1.6 [Priming quality assessment]'
· @1.6 [Priming quality assessment]
+ quality=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_quality.csv
+ rm -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/sub-ADS9312/ses-wave2/sub-ADS9312_ses-wave2_quality.csv
+ echo id0,id1
+ echo sub-ADS9312,ses-wave2
+ routine_end
+ [[ -n Localising subject metadata... ]]
+ eval 'echo -e "····································································
Processing step complete:
${routine_description}"'
++ echo -e '····································································
Processing step complete:
Localising subject metadata...'
+ unset routine_description
+ routine @2 Localising image
+ signpost=@2
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5
· @1.6
· @2'
+ shift
+ routine_description='Localising image'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@2 '
+ [[ -n Localising image ]]
+ eval 'echo -e "


Current processing step:
${vid}${routine_description}
····································································"'
++ echo -e '


Current processing step:
@2 Localising image
····································································'



Current processing step:
@2 Localising image
····································································
+ subroutine @2.1 '[Verifying' that images are 'present]'
+ signpost=@2.1
+ routine_map='
· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5
· @1.6
· @2
· @2.1'
+ shift
+ local 'subroutine_description=[Verifying that images are present]'
+ verbose
+ [[ -n 3 ]]
+ ((  3 != 0  ))
+ local 'vid=@2.1 '
+ [[ -n [Verifying that images are present] ]]
+ echo '· @2.1 [Verifying that images are present]'
· @2.1 [Verifying that images are present]
+ is_image /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/ses-wave2/func/sub-ADS9312_ses-wave2_task-rest_space-T1w_desc-preproc_bold.nii.gz
+ [[ -n /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/ses-wave2/func/sub-ADS9312_ses-wave2_task-rest_space-T1w_desc-preproc_bold.nii.gz ]]
+++ readlink -f /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/ses-wave2/func/sub-ADS9312_ses-wave2_task-rest_space-T1w_desc-preproc_bold.nii.gz
++ /opt/fsl-5.0.10/bin/imtest
+ ((  0 == 1  ))
+ abort_stream 'The primary analyte is not a valid image: /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/ses-wave2/func/sub-ADS9312_ses-wave2_task-rest_space-T1w_desc-preproc_bold.nii.gz'
+ local errdir=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/error
+ [[ ! -d /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/error ]]
+ ERR_ROOT=/projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/xcpEngine/data/group/error/fc_pettitta-201905142126
+ local 'error=
· [A major error has occurred.]
· [The processing stream will now abort.]
· [Preparing diagnostics]
····································································



Module Workflow Map
····································································

· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5
· @1.6
· @2
· @2.1
· ERROR
····································································



····································································
· [An error occurred while processing module localiser.]
· [The error was detected at signpost @2.1.]
· [The most recent command logged was]
· []
· [For additional details, view the processing log. For improved]
· [diagnostics, increment verbosity using the -t option.]
· []
· [The primary analyte is not a valid image: /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/ses-wave2/func/sub-ADS9312_ses-wave2_task-rest_space-T1w_desc-preproc_bold.nii.gz]
· []
· [stream abort]
····································································

'
+ echo '
· [A major error has occurred.]
· [The processing stream will now abort.]
· [Preparing diagnostics]
····································································



Module Workflow Map
····································································

· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5
· @1.6
· @2
· @2.1
· ERROR
····································································



····································································
· [An error occurred while processing module localiser.]
· [The error was detected at signpost @2.1.]
· [The most recent command logged was]
· []
· [For additional details, view the processing log. For improved]
· [diagnostics, increment verbosity using the -t option.]
· []
· [The primary analyte is not a valid image: /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/ses-wave2/func/sub-ADS9312_ses-wave2_task-rest_space-T1w_desc-preproc_bold.nii.gz]
· []
· [stream abort]
····································································

'
+ echo '
· [A major error has occurred.]
· [The processing stream will now abort.]
· [Preparing diagnostics]
····································································



Module Workflow Map
····································································

· @1
· @1.1
· @1.1a
· @1.1b
· @1.2
· @1.3
· @1.4
· @1.5
· @1.5.1
· @1.5.2a
· @1.5.3a
· @1.5
· @1.6
· @2
· @2.1
· ERROR
····································································



····································································
· [An error occurred while processing module localiser.]
· [The error was detected at signpost @2.1.]
· [The most recent command logged was]
· []
· [For additional details, view the processing log. For improved]
· [diagnostics, increment verbosity using the -t option.]
· []
· [The primary analyte is not a valid image: /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/fmriprep/sub-ADS9312/ses-wave2/func/sub-ADS9312_ses-wave2_task-rest_space-T1w_desc-preproc_bold.nii.gz]
· []
· [stream abort]
····································································

'
+ exit 1
