echo auto-generated by afni_proc.py, Sun Mar  3 19:52:35 2019
echo (version 6.16, July 5, 2018)
echo execution started: `date`
date
afni -ver
afni_history -check_date 3 May 2018
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-ADS1021
endif
set output_dir = sub-ADS1021.results
if ( -d sub-ADS1021.results ) then
set runs = ( `count -digits 2 1 1` )
count -digits 2 1 1
mkdir sub-ADS1021.results
mkdir sub-ADS1021.results/stimuli
3dcopy /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/freesurfer/sub-ADS1021_ses-wave2.long.sub-ADS1021/SUMA/sub-ADS1021_SurfVol.nii.gz sub-ADS1021.results/sub-ADS1021_SurfVol
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/freesurfer/sub-ADS1021_ses-wave2.long.sub-ADS1021/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-ADS1021.results/copy_af_aaseg
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/freesurfer/sub-ADS1021_ses-wave2.long.sub-ADS1021/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-ADS1021.results/copy_af_aeseg
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/freesurfer/sub-ADS1021_ses-wave2.long.sub-ADS1021/SUMA/sub-ADS1021_vent.nii.gz sub-ADS1021.results/copy_af_FSvent
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/adapt_lab/shared/ADS/data/BIDS_data/derivatives/freesurfer/sub-ADS1021_ses-wave2.long.sub-ADS1021/SUMA/sub-ADS1021_WM.nii.gz sub-ADS1021.results/copy_af_FSWe
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dTcat -prefix sub-ADS1021.results/pb00.sub-ADS1021.r01.tcat /projects/adapt_lab/shared/ADS/data/BIDS_data/sub-ADS1021/ses-wave2/func/sub-ADS1021_ses-wave2_task-rest_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ elapsed time = 1.8 s
set tr_counts = ( 505 )
cd sub-ADS1021.results
touch out.pre_ss_warn.txt
foreach run ( 01 )
3dToutcount -automask -fraction -polort 5 -legendre pb00.sub-ADS1021.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-ADS1021.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-ADS1021.r01.tcat+orig.BRIK is 4.785283 degrees from plumb.
++ 23800 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D
cat rm.out.cen.r01.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 505 -index_to_run_tr 3
set minoutrun = 01
set minouttr = 3
tee out.min_outlier.txt
echo min outlier: run 01, TR 3
foreach run ( 01 )
3dDespike -NEW -nomask -prefix pb01.sub-ADS1021.r01.despike pb00.sub-ADS1021.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-ADS1021.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-ADS1021.r01.tcat+orig.BRIK is 4.785283 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 505
++ using 505 time points => -corder 17
++ Loading dataset pb00.sub-ADS1021.r01.tcat+orig
++ processing all 98304 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
..........................................
++ Elapsed despike time =  11s 176ms

++ FINAL: 48867840 data points, 2295429 edits [4.697%], 292485 big edits [0.599%]
++ Output dataset ./pb01.sub-ADS1021.r01.despike+orig.BRIK
end
3dbucket -prefix vr_base_min_outlier pb01.sub-ADS1021.r01.despike+orig[3]
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
align_epi_anat.py -anat2epi -anat sub-ADS1021_SurfVol+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -cost lpc+ZZ -volreg off -tshift off
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ 3dWarp: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./__tt_sub-ADS1021_SurfVol_ns_ob+orig.BRIK
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts+orig.BRIK is 4.785283 degrees from plumb.
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 269.533813
 + Used gradual clip level = 228.548996 .. 324.477997
 + Number voxels above clip level = 24417
 + Clustering voxels ...
 + Largest cluster has 24175 voxels
 + Clustering voxels ...
 + Largest cluster has 23425 voxels
 + Filled   323 voxels in small holes; now have 23748 voxels
 + Clustering voxels ...
 + Largest cluster has 23747 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 74556 voxels
 + Mask now has 23748 voxels
++ 23748 voxels in the mask [out of 98304: 24.16%]
++ first  13 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first   5 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK is 4.785283 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 4.785283 degrees from plumb.
++ Source dataset: ./__tt_sub-ADS1021_SurfVol_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets
++ 1651473 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 23748 voxels [18.7%] in weight mask
++ Output dataset ./__tt_sub-ADS1021_SurfVol_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 23748
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(14.2219)'
++ -lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 31.509 31.199 15.138 (index)
 + source center of mass = 126.427 140.425 138.492 (index)
 + source-target CM = 0.643 6.230 -15.113 (xyz)
 + center of mass shifts = 0.643 6.230 -15.113
++ shift param auto-range: -65.7..67.0 -60.1..72.6 -63.3..33.0
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -9.357452 .. 10.642548
 + Range param#2 [y-shift] = -3.769852 .. 16.230148
 + Range param#3 [z-shift] = -25.112904 .. -5.112904
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -39.357452 .. 40.642548
 + Range param#2 [y-shift] = -33.769852 .. 46.230148
 + Range param#3 [z-shift] = -55.112904 .. 24.887096
 + 12 free parameters
++ Normalized convergence radius = 0.000481
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 1
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1651473 [out of 20315457] voxels
 + base mask has 33501 [out of 126976] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=5.00
 + - Smoothing source; radius=5.00
 + !source mask fill: ubot=22 usiz=35.5
 + - copying weight image
 + - using 23748 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 24.6478 .. 93.5673; base clip 182.176 .. 787.182
 +  - versus source range 4.89211 .. 93.0854; base range 0 .. 848.595
 + 20751 total points stored in 183 'RHDD(15.0752)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#o+o-.+-o--..-+.-++$